(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./list");
require("./text");
},{"./list":2,"./text":3}],2:[function(require,module,exports){
"use strict";
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("../utils/common");
var readTMPText = (mPtr) => {
    mPtr = (0, common_1.PTR2NativePtr)(mPtr);
    if (mPtr.isNull())
        return "";
    return "";
};
},{"../utils/common":329}],4:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.find_method = exports.HookerBase = void 0;
const decorator_cache_getter_1 = require("decorator-cache-getter");
const il2cppM_1 = require("../bridge/fix/il2cppM");
const alloc_1 = require("../utils/alloc");
const enum_1 = require("./enum");
const formart_1 = require("../utils/formart");
class HookerBase {
    constructor() { }
    static get _list_assemblies() {
        return Il2Cpp.Domain.assemblies;
    }
    static get _list_assemblies_names() {
        return HookerBase._list_assemblies.map(item => item.name);
    }
    static get _list_images() {
        return HookerBase._list_assemblies.map((assembly) => assembly.image);
    }
    static get _list_images_pointers() {
        return HookerBase._list_images.map(item => item.handle);
    }
    static get _list_images_names() {
        return HookerBase._list_assemblies.map((assembly) => assembly.image.name.split(".dll")[0]);
    }
    static getMapImagesCacheMap = new Map();
    static getMapImages() {
        if (HookerBase.getMapImagesCacheMap.size != 0)
            return HookerBase.getMapImagesCacheMap;
        HookerBase._list_images_names.forEach((item, index) => HookerBase.getMapImagesCacheMap.set(item, HookerBase._list_images_pointers[index]));
        return HookerBase.getMapImagesCacheMap;
    }
    static get _list_classes() {
        return Il2Cpp.Domain.assemblies.map((assembly) => assembly.image).flatMap((image) => image.classes);
    }
    static showImages(filter = "", sort = true) {
        formart_1.formartClass.printTitile("List Images { assembly -> image -> classCount -> imageName }");
        HookerBase._list_images.filter((image) => {
            return filter != "" ? image.name.indexOf(filter) != -1 : true;
        }).sort((first, secend) => {
            return sort ? (first.name.toLowerCase().charAt(0) > secend.name.toLowerCase().charAt(0) ? 1 : -1) : 0;
        }).forEach((image) => {
            LOGD(`[*] ${image.assembly.handle} -> ${image.handle}\t${image.classCount}\t${image.assembly.name}`);
        });
        if (filter == "") {
            LOGO(getLine(28));
            LOGE(`  List ${HookerBase._list_images.length} Images`);
        }
        LOGO(getLine(85));
    }
    static showClasses(imageOrName, filterNameSpace = "", filterClassName = "") {
        let image = new Il2Cpp.Image(ptr(1));
        try {
            if (typeof imageOrName == "string") {
                if (imageOrName.startsWith("0x")) {
                    image = new Il2Cpp.Image(ptr(imageOrName.trim()));
                }
                else {
                    image = Il2Cpp.Domain.assembly(imageOrName).image;
                }
            }
            else if (typeof imageOrName == "number") {
                image = new Il2Cpp.Image(ptr(imageOrName));
            }
            else if (arguments[0] == undefined) {
                throw new Error("imageOrName can not be null");
            }
            else {
                throw new Error("imageOrName must be string or number");
            }
            if (image.handle.equals(1))
                throw new Error("image handle can not be null");
        }
        catch (error) {
            LOGE(error);
            throw new Error("Il2Cpp.Image can not be found");
        }
        let tMap = new Map();
        let countNameSpace = 0;
        let countFilterCls = 0;
        for (let i = 0; i < image.classes.length; i++) {
            let key = "[*] " + image.classes[i].namespace;
            if (tMap.get(key) == undefined) {
                tMap.set(key, new Array());
            }
            tMap.get(key)?.push(image.classes[i]);
        }
        LOG(`\n Current -> ${image.name} @ ${image.handle}\n`, enum_1.LogColor.C104);
        let titleLen = formart_1.formartClass.printTitileA("List Classes { namespace {classPtr->filedsCount->methodsCount->enumClass->className} }", enum_1.LogColor.C90);
        for (let key of tMap.keys()) {
            let nameSpace = key;
            if (nameSpace != undefined) {
                let array = tMap.get(nameSpace);
                if (nameSpace.toLowerCase().indexOf(filterNameSpace.toLowerCase()) == -1)
                    continue;
                ++countNameSpace;
                LOGD(`\n${nameSpace}`);
                array?.forEach((klass) => {
                    if (klass.name.toLowerCase().indexOf(filterClassName.toLowerCase()) != -1) {
                        ++countFilterCls;
                        LOGD(`\t[-] ${klass.handle} (F:${klass.fields.length}/M:${klass.methods.length}/E:${Number(klass.isEnum)})\t${klass.name}`);
                    }
                });
            }
        }
        LOGO("\n" + getLine(28));
        if (filterNameSpace == "" && filterClassName == "") {
            LOGE(`List ${image.classCount} Classes | Group by ${countNameSpace} NameSpaces`);
        }
        else {
            LOGE(`ALl ${image.classCount} Classes | List ${countFilterCls} Classes | Group by ${countNameSpace} NameSpaces`);
        }
        LOGO(getLine(titleLen));
    }
    static checkType(mPtr) {
        let klass;
        if (mPtr instanceof NativePointer) {
            klass = new Il2Cpp.Class(mPtr);
        }
        else if (typeof mPtr == "string") {
            klass = new Il2Cpp.Class(findClass(mPtr));
        }
        else if (typeof mPtr == "number") {
            klass = new Il2Cpp.Class(ptr(mPtr));
        }
        else {
            throw ("mPtr must be string or number or NativePointer");
        }
        if (klass.handle.equals(ptr(0)))
            throw ("klass handle can not be null");
        return klass;
    }
    static showMethods(mPtr, detailed = false) {
        let klass = HookerBase.inputCheck(mPtr);
        if (klass.methods.length == 0)
            return;
        newLine();
        formart_1.formartClass.printTitile(`Found ${klass.methods.length} Methods ${klass.isEnum ? "(enum) " : ""} in class: ${klass.name} @ ${klass.handle}`);
        if (detailed) {
            let maxStrLen = 0;
            klass.methods.forEach((method) => {
                LOGD(`\n[*] ${method.handle} ---> ${method.virtualAddress} ---> ${method.relativeVirtualAddress}`);
                let methodInfoDes = `\t${(0, il2cppM_1.getMethodDesFromMethodInfo)(method)}`;
                LOGD(methodInfoDes);
                maxStrLen = Math.max(maxStrLen, methodInfoDes.length);
                let countArgs = -1;
                method.parameters
                    .map((param) => `\t\t---> args[${++countArgs}]\t${param.type.handle}  <-  ${param.type.name}`)
                    .forEach(LOGZ);
                LOGZ(`\t\t---> retval\t${method.returnType.class.handle}  <-  ${method.returnType.class.name}`);
            });
            newLine();
            LOGO(getLine(maxStrLen));
        }
        else {
            klass.methods.forEach((method) => {
                LOGD(`[*] ${method.handle} ---> ${method.virtualAddress} ---> ${method.relativeVirtualAddress}\t|  ${(0, il2cppM_1.getMethodDesFromMethodInfo)(method)}`);
            });
            newLine();
        }
    }
    static showFields(mPtr) {
        let klass = HookerBase.inputCheck(mPtr);
        if (klass.fields.length == 0) {
            LOGZ(`\n${klass.toString()}`);
            LOGE(`\n[!] ${klass.assemblyName}.${klass.namespace}.${klass.name} @ ${klass.handle} has no fields\n`);
            return;
        }
        formart_1.formartClass.printTitile(`Found ${klass.fields.length} Fields ${klass.isEnum ? "(enum) " : ""}in class: ${klass.name} (${klass.handle})`);
        klass.fields.forEach((field) => {
            LOGD(`[*] ${field.handle} ${field.type.name} ${field.toString()} [type:${field.type.class.handle}]`);
        });
        LOGO(``);
    }
    static inputCheck(input) {
        let klass;
        if (input instanceof NativePointer) {
            klass = HookerBase.checkType(input);
        }
        else if (typeof input == "string") {
            klass = HookerBase.checkType(input.trim());
        }
        else if (typeof input == "number") {
            if (String(input).length > 18 && Process.arch == "arm64")
                throw ("please use '0x...' instead of number");
            klass = HookerBase.checkType(ptr(input));
        }
        else {
            throw ("mPtr must be string('0x...') or NativePointer");
        }
        return klass;
    }
    static map_cache_class = new Map();
    static findClass(searchClassName, fromAssebly = ["Assembly-CSharp", "MaxSdk.Scripts", "mscorlib"], fromCache = true) {
        if (searchClassName == undefined)
            throw ("Search name can not be null or undefined");
        if (typeof searchClassName != "string")
            throw ("findClass need a string value");
        if (fromCache) {
            let cache = HookerBase.map_cache_class.get(searchClassName);
            if (cache != undefined)
                return cache.handle;
        }
        let assemblies = Il2Cpp.Domain.assemblies;
        for (let index = 0; index < assemblies.length; index++) {
            if (fromAssebly.includes(assemblies[index].name)) {
                let ret = innerCall(assemblies[index].image.classes);
                if (ret != undefined)
                    return ret.handle;
            }
        }
        for (let index = 0; index < assemblies.length; index++) {
            if (!fromAssebly.includes(assemblies[index].name)) {
                let ret = innerCall(assemblies[index].image.classes);
                if (ret != undefined)
                    return ret.handle;
            }
        }
        function innerCall(kclasses) {
            for (let index = 0; index < kclasses.length; index++)
                if (kclasses[index].name == searchClassName) {
                    HookerBase.map_cache_class.set(searchClassName, kclasses[index]);
                    return kclasses[index];
                }
        }
        return ptr(0);
    }
    static findMethodNew(assemblyName, className, methodName, argsCount = -1, overload = [], cmdCall = true) {
        let methodInfo;
        if (arguments[3] != undefined && typeof arguments[3] == "number") {
            try {
                methodInfo = Il2Cpp.Domain.assembly(assemblyName).image.class(className).method(methodName, argsCount);
                if (overload.length != 0)
                    methodInfo = methodInfo?.overload(...overload);
            }
            catch {
                throw new Error(`findMethod failed: Not Found ${methodName}(argCount:${argsCount}) in ${className}`);
            }
        }
        else if (arguments[1] != undefined) {
            methodInfo = new Il2Cpp.Class(findClass(arguments[1])).method(arguments[0], arguments[2]);
        }
        else if (arguments[0] != undefined && arguments[1] == undefined) {
            for (let i = 0; i < HookerBase._list_classes.length; i++) {
                for (let m = 0; m < HookerBase._list_classes[i].methods.length; m++) {
                    if (HookerBase._list_classes[i].methods[m] == arguments[0]) {
                        methodInfo = HookerBase._list_classes[i].methods[m];
                        break;
                    }
                }
            }
        }
        if (methodInfo == undefined)
            throw new Error("Method not found");
        if (cmdCall) {
            showMethodInfo(methodInfo.handle);
        }
        else {
            return methodInfo;
        }
    }
    static findMethodsyncCacheMap = new Map();
    static findMethodSync(imageName, className, functionName, argsCount = -1, isRealAddr = true, cmdCall = true) {
        if (imageName == undefined || className == undefined || functionName == undefined)
            return ptr(0);
        const soAddr = Il2Cpp.module.base;
        let cacheKey = imageName + "." + className + "." + functionName + "." + argsCount;
        if (isRealAddr) {
            let cachedPointer = HookerBase.findMethodsyncCacheMap.get(cacheKey);
            if (cachedPointer != undefined)
                return cachedPointer;
        }
        let currentlibPack = Il2Cpp.Domain.assembly(imageName).image;
        let currentlib = currentlibPack.handle;
        let klass = Il2Cpp.Api._classFromName(currentlib, (0, alloc_1.allocCStr)(imageName), (0, alloc_1.allocCStr)(className));
        if (klass.isNull()) {
            for (let j = 0; j < Il2Cpp.Api._imageGetClassCount(currentlib); j++) {
                let il2CppClass = new Il2Cpp.Class(Il2Cpp.Api._imageGetClass(currentlib, j));
                if (il2CppClass.name == className) {
                    klass = il2CppClass.handle;
                    break;
                }
            }
        }
        if (klass.isNull())
            return ptr(0);
        let method = Il2Cpp.Api._classGetMethodFromName(klass, (0, alloc_1.allocCStr)(functionName), argsCount);
        if (method.isNull())
            return ptr(0);
        if (arguments[5] != undefined && arguments[5] != 2) {
            return method;
        }
        else if (arguments[5] != undefined && arguments[5] == 2) {
            return method.readPointer().sub(soAddr);
        }
        HookerBase.findMethodsyncCacheMap.set(cacheKey, method.readPointer());
        if (isRealAddr)
            return isRealAddr ? method.readPointer() : method.readPointer().sub(soAddr);
        let il2cppMethod = new Il2Cpp.Method(method);
        let parameters_count = il2cppMethod.parameterCount;
        let arr_args = new Array();
        let arr_args_type_addr = new Array();
        for (let i = 0; i < parameters_count; i++) {
            let currentParamter = il2cppMethod.parameters[i];
            let typeClass = currentParamter.type.class.handle;
            let TypeName = currentParamter.type.class.name;
            arr_args.push(TypeName + " " + currentParamter.name);
            arr_args_type_addr.push(TypeName + " " + typeClass);
        }
        let disStr = (0, il2cppM_1.getMethodModifier)(method) + il2cppMethod.returnType.name + " " +
            il2cppMethod.name + " " +
            "(" + arr_args + ")" + "\t";
        LOGO(getLine(85));
        LOG(imageName + "." + className + "\t" + disStr, enum_1.LogColor.RED);
        LOGO(getLine(30));
        let ShowMore = false;
        LOG("Il2CppImage\t---->\t" + currentlib + (ShowMore ? " (" + currentlib.add(p_size).readPointer().readCString() + ")" : ""));
        LOG("Il2CppClass\t---->\t" + klass + (ShowMore ? " (" + Il2Cpp.Api._classGetName(klass) + ")" : ""));
        LOG("MethodInfo\t---->\t" + method + (ShowMore ? " (" + Il2Cpp.Api._classGetName(method) + ")" : ""));
        LOGD("methodPointer\t---->\t" + method.readPointer() + "\t===>\t" + method.readPointer().sub(soAddr));
        LOGO(getLine(85));
    }
    static MethodToShow(method) {
        let methodDes = (0, il2cppM_1.getMethodDesFromMethodInfo)(method);
        let nameSpace = method.class.namespace;
        let classBelow = `${nameSpace.length == 0 ? '' : nameSpace + '.'}${method.class.name}`;
        let title = `${classBelow}\t${methodDes}`;
        let lineLen = title.length + 0x10;
        LOGW(getLine(lineLen, "-"));
        LOGE(title);
        LOGW(getLine(lineLen / 2, "-"));
        LOGZ("Il2CppImage\t---->\t" + method.class.image.handle);
        LOGZ("Il2CppClass\t---->\t" + method.class.handle);
        LOGZ("MethodInfo\t---->\t" + method.handle);
        LOGD("methodPointer\t---->\t" + method.virtualAddress + "\t===>\t" + method.relativeVirtualAddress);
        LOGW(getLine(lineLen, "-"));
    }
    static listFieldsFromCls(klass, instance) {
        if (klass == undefined || klass == null)
            return;
        if (typeof klass == "number")
            klass = ptr(klass);
        if (typeof instance == "number")
            instance = ptr(instance);
        let packCls = new Il2Cpp.Class(klass);
        let fieldsCount = packCls.fields.length;
        if (fieldsCount <= 0)
            return;
        let is_enum = packCls.isEnum;
        if (arguments[2] == undefined)
            LOGH("\nFound " + fieldsCount + " Fields" + (is_enum ? "(enum)" : "") + " in class: " + packCls.name + " (" + klass + ")");
        let iter = alloc();
        let field = null;
        let maxlength = 0;
        let arrStr = new Array();
        let enumIndex = 0;
        while (field = Il2Cpp.Api._classGetFields(klass, iter)) {
            if (field.isNull())
                break;
            let fieldName = field.readPointer().readCString();
            let filedType = field.add(p_size).readPointer();
            let filedOffset = "0x" + field.add(3 * p_size).readInt().toString(16);
            let field_class = Il2Cpp.Api._classFromType(filedType);
            let fieldClassName = new Il2Cpp.Class(field_class).name;
            let accessStr = fackAccess(filedType);
            accessStr = accessStr.substring(0, accessStr.length - 1);
            let enumStr = (is_enum && (String(field_class) == String(klass))) ? (enumIndex++ + "\t") : " ";
            let retStr = filedOffset + "\t" + accessStr + "\t" + fieldClassName + "\t" + field_class + "\t" + fieldName + "\t" + enumStr;
            if (arguments[2] == "1" && fieldName == arguments[3])
                return ptr(filedOffset);
            if (arguments[2] == "2" && fieldName == arguments[3]) {
                let tmpValue = !instance.isNull() ? instance.add(ptr(filedOffset)) : ptr(0);
                let tmpValueR = !instance.isNull() ? instance.add(ptr(filedOffset)).readPointer() : ptr(0);
                return [fieldName, filedOffset, field_class, fieldClassName, tmpValue, tmpValueR];
            }
            arrStr.push(retStr);
            maxlength = retStr.length < maxlength ? maxlength : retStr.length;
        }
        if (arguments[2] != undefined)
            return ptr(0);
        LOGO("\n" + getLine(maxlength + 5));
        arrStr.sort((x, y) => {
            return parseInt(x.split("\t")[0]) - parseInt(y.split("\t")[0]);
        }).forEach((str, index) => {
            let mStr = str.split("\t");
            let mName = mStr[2];
            let indexStr = String("[" + index + "]");
            let indexSP = indexStr.length == 3 ? " " : "";
            let enumStr = String(mStr[5]).length == 1 ? String(mStr[5] + " ") : String(mStr[5]);
            LOG(indexStr + indexSP + " " + mStr[0] + " " + mStr[1] + " " + mStr[2] + "(" + mStr[3] + ") " + enumStr + " " + mStr[4], enum_1.LogColor.C36);
            if (typeof instance == "number")
                instance = ptr(instance);
            if (instance != undefined && str.indexOf("static") == -1) {
                let mPtr = instance.add(mStr[0]);
                let realP = mPtr.readPointer();
                let fRet = FackKnownType(mName, realP, mStr[3]);
                if (mName == "Boolean") {
                    let header = String(realP).substr(0, 2);
                    let endstr = String(realP).substr(String(realP).length - 2, String(realP).length).replace("x", "0");
                    let middle = getLine(((Process.arch == "arm" ? 10 : 14) - 2 - 2), ".");
                }
                LOG("\t" + fRet + "\n", enum_1.LogColor.C90);
            }
            else if (str.indexOf("static") != -1) {
                let field = Il2Cpp.Api._classGetFieldFromName(ptr(mStr[3]), (0, alloc_1.allocCStr)(mStr[4]));
                if (!field.isNull()) {
                    let addrOut = alloc();
                    Il2Cpp.Api._fieldGetStaticValue(field, addrOut);
                    let realP = addrOut.readPointer();
                    LOG("\t" + addrOut + " ---> " + realP + " ---> " + FackKnownType(mName, realP, mStr[3]), enum_1.LogColor.C90);
                }
                LOG("\n");
            }
        });
        LOGO(getLine(maxlength + 5));
        function fackAccess(m_type) {
            let attrs = m_type.add(p_size).readPointer();
            let outPut = "";
            let access = Number(attrs) & enum_1.FieldAccess.FIELD_ATTRIBUTE_FIELD_ACCESS_MASK;
            switch (access) {
                case enum_1.FieldAccess.FIELD_ATTRIBUTE_PRIVATE:
                    outPut += "private ";
                    break;
                case enum_1.FieldAccess.FIELD_ATTRIBUTE_PUBLIC:
                    outPut += "public ";
                    break;
                case enum_1.FieldAccess.FIELD_ATTRIBUTE_FAMILY:
                    outPut += "protected ";
                    break;
                case enum_1.FieldAccess.FIELD_ATTRIBUTE_ASSEMBLY:
                case enum_1.FieldAccess.FIELD_ATTRIBUTE_FAM_AND_ASSEM:
                    outPut += "internal ";
                    break;
                case enum_1.FieldAccess.FIELD_ATTRIBUTE_FAM_OR_ASSEM:
                    outPut += "protected internal ";
                    break;
            }
            if (Number(attrs) & enum_1.FieldAccess.FIELD_ATTRIBUTE_LITERAL) {
                outPut += "const ";
            }
            else {
                if (Number(attrs) & enum_1.FieldAccess.FIELD_ATTRIBUTE_STATIC) {
                    outPut += "static ";
                }
                if (Number(attrs) & enum_1.FieldAccess.FIELD_ATTRIBUTE_INIT_ONLY) {
                    outPut += "readonly ";
                }
            }
            return outPut;
        }
    }
}
__decorate([
    decorator_cache_getter_1.cache
], HookerBase, "_list_assemblies", null);
__decorate([
    decorator_cache_getter_1.cache
], HookerBase, "_list_assemblies_names", null);
__decorate([
    decorator_cache_getter_1.cache
], HookerBase, "_list_images", null);
__decorate([
    decorator_cache_getter_1.cache
], HookerBase, "_list_images_pointers", null);
__decorate([
    decorator_cache_getter_1.cache
], HookerBase, "_list_images_names", null);
__decorate([
    decorator_cache_getter_1.cache
], HookerBase, "_list_classes", null);
exports.HookerBase = HookerBase;
function FackKnownType(...args) {
}
const find_method = HookerBase.findMethodSync;
exports.find_method = find_method;
Reflect.set(globalThis, "Hooker", HookerBase);
globalThis.i = HookerBase.showImages;
globalThis.c = HookerBase.showClasses;
globalThis.m = HookerBase.showMethods;
globalThis.f = HookerBase.showFields;
globalThis.F = HookerBase.listFieldsFromCls;
globalThis.fc = HookerBase.findClass;
globalThis.findClass = HookerBase.findClass;
globalThis.findMethod = HookerBase.findMethodNew;
globalThis.find_method = HookerBase.findMethodSync;
globalThis.MethodToShow = HookerBase.MethodToShow;
globalThis.af = (className) => B(findClass(className));
globalThis.aui = () => B("AUI");
Il2Cpp.perform(() => globalThis.soAddr = Il2Cpp.module.base);
},{"../bridge/fix/il2cppM":18,"../utils/alloc":325,"../utils/formart":331,"./enum":6,"decorator-cache-getter":338}],5:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Breaker = void 0;
const il2cppM_1 = require("../bridge/fix/il2cppM");
const fastest_levenshtein_1 = require("fastest-levenshtein");
const formart_1 = require("../utils/formart");
const base_1 = require("./base");
const valueResolve_1 = __importDefault(require("./valueResolve"));
var CommonClass = ["Assembly-CSharp", "MaxSdk.Scripts", "Game", "Zenject", "UniRx", "Purchasing.Common", "UnityEngine.Purchasing"];
class Breaker {
    static maxCallTimes = 10;
    static detachTimes = 500;
    static map_attachedMethodInfos = new Map();
    static map_methodInfo_callTimes = new Map();
    static array_methodInfo_detached = new Array();
    static array_attach_failed = new Array();
    static array_methodValue_cache = new Array();
    static addBreakPoint(imgOrClsPtr = "CommonClass") {
        if (imgOrClsPtr instanceof NativePointer) {
            innerImage(imgOrClsPtr);
        }
        else if (typeof imgOrClsPtr == "number") {
            if (Process.arch == "arm64")
                throw new Error("Use '0x..' instead of number");
            innerImage(ptr(imgOrClsPtr));
        }
        else if (typeof imgOrClsPtr == "string") {
            if (Process.arch == "arm64" && imgOrClsPtr.trim().startsWith("0x"))
                return innerImage(ptr(imgOrClsPtr));
            if (imgOrClsPtr == "CommonClass" || imgOrClsPtr == "JNI" || imgOrClsPtr == "Soon")
                return checkSpecialClass(imgOrClsPtr);
            if (base_1.HookerBase._list_images_names.toString().includes(imgOrClsPtr)) {
                base_1.HookerBase._list_images.forEach((image) => {
                    if (image.name.includes(imgOrClsPtr)) {
                        formart_1.formartClass.printTitile("Found : ImageName: " + imgOrClsPtr + " at " + image.handle);
                        innerImage(image.handle);
                    }
                });
            }
            else {
                let clsPtr = findClass(imgOrClsPtr);
                if (!clsPtr.isNull()) {
                    formart_1.formartClass.printTitile("Found : ClassName: " + imgOrClsPtr + " at " + clsPtr);
                    innerImage(clsPtr);
                }
                else {
                    let imageName = (0, fastest_levenshtein_1.closest)(imgOrClsPtr, base_1.HookerBase._list_images_names);
                    LOGE(`You mean this ? ${imageName} @ ${Il2Cpp.Domain.assemblies.filter(item => item.name.includes)[0].handle}`);
                }
            }
        }
        function innerImage(imgOrClsPtr) {
            let lastSize = Breaker.map_attachedMethodInfos.size;
            if (imgOrClsPtr.isNull())
                throw new Error("can't attach nullptr");
            if (base_1.HookerBase._list_images_pointers.map(item => Number(item)).includes(Number(imgOrClsPtr))) {
                let imageHandle = imgOrClsPtr;
                new Il2Cpp.Image(imageHandle).classes
                    .flatMap(cls => cls.methods)
                    .forEach(Breaker.attachMethod);
            }
            else {
                let classHandle = imgOrClsPtr;
                new Il2Cpp.Class(classHandle).methods.forEach(Breaker.attachMethod);
            }
            LOGO(`${getLine(40, "-")}\n Attached ${Breaker.map_attachedMethodInfos.size - lastSize} methods / All ${Breaker.map_attachedMethodInfos.size} methods\n${getLine(85, "-")}`);
        }
        function checkSpecialClass(type) {
            if (type == "CommonClass") {
                base_1.HookerBase._list_images.forEach((image) => {
                    if (CommonClass.includes(image.assembly.name)) {
                        formart_1.formartClass.printTitile("Found : ImageName: " + image.name + " at " + image.handle);
                        innerImage(image.handle);
                    }
                });
            }
            else if (type == "JNI") {
                let clsTmp = Il2Cpp.Domain.assembly("UnityEngine.AndroidJNIModule").image.class("UnityEngine.AndroidJNI");
                if (clsTmp.isNull())
                    throw new Error("can't find class UnityEngine.AndroidJNI");
                formart_1.formartClass.printTitile("Found : ClassName: " + clsTmp.name + " at " + clsTmp.handle);
                innerImage(clsTmp.handle);
            }
            else if ("AUI") {
                innerImage(Il2Cpp.Domain.assembly("Assembly-CSharp").image.handle);
                setTimeout(() => h("Update"), 3000);
            }
            else if (type == "Soon") {
            }
            else {
                throw new Error("checkSpecialClass : type error");
            }
        }
    }
    static attachMethod(method) {
        attachMethodInner(method);
        function attachMethodInner(method, filterModifier = "all") {
            if (filterModifier == "all") {
                if (!(0, il2cppM_1.getMethodModifier)(method).includes("abstract") && !method.virtualAddress.isNull())
                    Breaker.attachMethodInfo(method);
            }
            else {
                if (!(0, il2cppM_1.getMethodModifier)(method).includes(filterModifier))
                    return;
                if (!method.virtualAddress.isNull())
                    Breaker.attachMethodInfo(method);
            }
        }
    }
    static callTimesInline = 0;
    static attachMethodInfo(method, detailLog = false) {
        if (method.virtualAddress.isNull()) {
            LOGE((0, il2cppM_1.methodToString)(method));
            return;
        }
        if (Breaker.map_attachedMethodInfos.has(method))
            return;
        try {
            let handleFunc = Interceptor.attach(method.virtualAddress, {
                onEnter: function (args) {
                    if (!Breaker.needShowLOG(method, "onEnter"))
                        return;
                    if (!detailLog) {
                        let cacheID = `[${++Breaker.callTimesInline}|${new Date().toLocaleTimeString().split(" ")[0]}]`;
                        this.passValue = new valueResolve_1.default(cacheID, method).setArgs(args);
                        return LOGD(this.passValue.toString());
                    }
                    else {
                        let tmp_content = new Array();
                        let parameterNameMax = (0, il2cppM_1.getMethodMaxArgNameLength)(method) + 1;
                        this.passParameterNameMaxStr = getLine(parameterNameMax, " ");
                        if (!method.isStatic) {
                            tmp_content[0] = `  inst\t|${this.passParameterNameMaxStr}\t\t\t${args[0]}\t\t[ ${valueResolve_1.default.fakeValue(args[0], new Il2Cpp.Type(ptr(1)), method)} ] ( ${method.class.handle} )`;
                            for (let index = 1; index < method.parameterCount + 1; ++index) {
                                let start = `  arg${index}  | `;
                                let parameterName;
                                try {
                                    parameterName = formart_1.formartClass.alignStr(`${method.parameters[index - 1].name}`, parameterNameMax);
                                }
                                catch {
                                    parameterName = formart_1.formartClass.alignStr(` `, parameterNameMax);
                                }
                                let mid = `${parameterName}\t--->\t\t${formart_1.formartClass.getPtrFormart(args[index])}\t\t`;
                                let end = `${method.parameters[index - 1].type.name} (${method.parameters[index - 1].type.class.handle})`;
                                let res = `\t ${valueResolve_1.default.fakeValue(args[index], method.parameters[index - 1].type, method)}`;
                                tmp_content[tmp_content.length] = `${start}${mid}${end}${res}`;
                            }
                        }
                        else {
                            for (let index = 0; index < method.parameterCount; ++index) {
                                let start = `  arg${index}  | `;
                                let parameterName;
                                try {
                                    parameterName = formart_1.formartClass.alignStr(`${method.parameters[index - 1].name}`, parameterNameMax);
                                }
                                catch {
                                    parameterName = formart_1.formartClass.alignStr(` `, parameterNameMax);
                                }
                                let mid = `${parameterName}\t--->\t\t${formart_1.formartClass.getPtrFormart(args[index])}\t\t`;
                                let end = `${method.parameters[index].type.name} (${method.parameters[index].type.class.handle})\t `;
                                let res = `${valueResolve_1.default.fakeValue(args[index], method.parameters[index].type, method)}`;
                                tmp_content[tmp_content.length] = `${start}${mid}${end}${res}`;
                            }
                        }
                        this.content = tmp_content;
                        let clsStr = `${method.class.namespace}`;
                        let classTitle = `${clsStr.length == 0 ? "" : clsStr + "."}${method.class.name}`;
                        let disptitle = `${classTitle} | ${(0, il2cppM_1.methodToString)(method, true)}\t [${method.handle} -> ${method.virtualAddress} -> ${method.relativeVirtualAddress}] | ${new Date().toLocaleTimeString().split(" ")[0]}`;
                        this.disp_title = disptitle;
                    }
                },
                onLeave: function (retval) {
                    if (!Breaker.needShowLOG(method, "onLeave"))
                        return;
                    if (!detailLog && this.passValue != undefined)
                        Breaker.array_methodValue_cache.push(this.passValue.setRetval(retval));
                    if (this.content == null || this.disp_title == null)
                        return;
                    let start = `  ret\t| `;
                    let mid = `${this.passParameterNameMaxStr}\t\t\t${formart_1.formartClass.getPtrFormart(retval)}\t\t`;
                    let end = `${method.returnType.name} (${method.returnType.class.handle})\t `;
                    let res = `${new valueResolve_1.default("", method).setRetval(retval).resolve(-1)}`;
                    this.content[this.content.length] = `${start}${mid}${end}${res}`;
                    let lenMax = Math.max(...this.content.map(item => item.length), this.disp_title.length) + 6;
                    LOGO(`\n${getLine(lenMax)}`);
                    LOGD(this.disp_title);
                    LOGO(getLine(this.disp_title.length / 3));
                    this.content.forEach(LOGD);
                    LOGO(getLine(lenMax));
                }
            });
            LOGD((0, il2cppM_1.methodToString)(method));
            Breaker.map_attachedMethodInfos.set(method, handleFunc);
        }
        catch {
            catchError(method);
        }
        function catchError(method) {
            LOGE((0, il2cppM_1.methodToString)(method));
            if (Process.arch == "arm") {
                let ins = method.virtualAddress.readPointer();
                if (ins != null && ins.equals(0xE12FFF1E))
                    showErrorLog(ins);
            }
            else if (Process.arch == "arm64") {
                let ins = method.virtualAddress.readPointer();
                if (ins != null && ins.equals(0xC0035FD6))
                    showErrorLog(ins);
            }
            else {
                Breaker.array_attach_failed.push(method);
                printCtx(method.relativeVirtualAddress, 1, 1, LogColor.WHITE, 1);
            }
            function showErrorLog(ins, error = "\tMethod null implementation or attach by other intercepter") {
                LOGE(`\t${method.virtualAddress} -> ${ins} -> ${ins.toMatchPattern()} `);
                LOGE(error);
            }
        }
    }
    static needShowLOG = (method, enterType = "onEnter") => {
        if (method instanceof Il2Cpp.Method) {
            if (!Breaker.map_methodInfo_callTimes.has(method))
                Breaker.map_methodInfo_callTimes.set(method, 0);
            let times = Breaker.map_methodInfo_callTimes.get(method);
            if (times === undefined || times === null)
                times = 0;
            if (times >= Breaker.detachTimes) {
                Breaker.map_attachedMethodInfos.get(method).detach();
                Breaker.array_methodInfo_detached.push(method);
            }
            if (enterType === "onEnter")
                Breaker.map_methodInfo_callTimes.set(method, times + 1);
            return times < Breaker.maxCallTimes;
        }
        else {
            throw new Error("method must be Il2Cpp.Method");
        }
    };
    static breakWithArgs = (mPtr, argCount = 4) => {
        mPtr = checkPointer(mPtr);
        Interceptor.attach(mPtr, {
            onEnter(args) {
                LOGO("\n" + getLine(65));
                LOGH("Called from " + mPtr + " ---> " + mPtr.sub(soAddr) + "\t|  LR : " + checkCtx(getPlatformCtx(this.context)) + "\n");
                let tStr = String(args[0]);
                for (let t = 1; t < argCount; ++t)
                    tStr += "\t" + args[t];
                LOGD(tStr);
            },
            onLeave(retval) {
                LOGD("End Function return ---> " + retval);
            },
        });
    };
    static breakWithStack = (mPtr) => {
        mPtr = checkPointer(mPtr);
        Interceptor.attach(mPtr, {
            onEnter(args) {
                LOGO("\n" + getLine(65));
                LOGH("Called from " + mPtr + " ---> " + mPtr.sub(soAddr) + "\t|  LR : " + checkCtx(getPlatformCtx(this.context)) + "\n");
                PrintStackTraceN(this.context);
                LOGO("\n" + getLine(65));
            }
        });
    };
    static breakInline = (mPtr, callback) => {
        mPtr = checkPointer(mPtr);
        Interceptor.attach(mPtr, {
            onEnter(args) {
                LOGO("\n" + getLine(65));
                LOGH("Called from " + mPtr + " ---> " + mPtr.sub(soAddr) + "\n");
                LOGD(JSON.stringify(this.context));
                if (callback != undefined)
                    callback(this);
            }
        });
    };
    static clearBreak = () => {
        d();
        Breaker.map_attachedMethodInfos.clear();
        Breaker.map_methodInfo_callTimes.clear();
        Breaker.array_methodInfo_detached = [];
    };
    static clearBreakAll = () => {
        Breaker.clearBreak();
        Breaker.array_methodValue_cache = [];
        Breaker.array_attach_failed = [];
    };
    static printDesertedMethods = (filterName = "") => {
        if (Breaker.map_methodInfo_callTimes.size == 0)
            return;
        let title = `${getLine(20)} detached methods ${getLine(20)}`;
        let countHideFunctions = 0;
        LOG(`${title}`, LogColor.C92);
        Breaker.map_methodInfo_callTimes.forEach((value, key) => {
            if (value >= Breaker.maxCallTimes) {
                if (filterName == "" || key.name.indexOf(filterName) != -1) {
                    let arr = methodToArray(key);
                    let times = this.map_methodInfo_callTimes.get(key);
                    ++countHideFunctions;
                    LOGD(`[*] ${arr[0]} ---> ${arr[1]} ${arr[2]}\t\t${times}\t${arr[3]}`);
                }
            }
        });
        LOG(`${getLine(20)}`, LogColor.C92);
        LOGD(` ${Breaker.map_attachedMethodInfos.size} attached / ${Breaker.array_methodInfo_detached.length} detached / ${countHideFunctions} hidden`);
        LOG(getLine(title.length), LogColor.C92);
    };
    static printHistoryLog = (filterStr = "", countLogs = 50, reverse = false, detachAll = true) => {
        if (detachAll)
            D();
        if (typeof filterStr == "number") {
            countLogs = filterStr;
            filterStr = "";
        }
        let filterArray = Breaker.array_methodValue_cache
            .map((value) => value.toString())
            .filter((value) => value.includes(filterStr))
            .slice(0, countLogs);
        if (reverse)
            filterArray.reverse();
        filterArray.forEach(LOGD);
    };
    static printHistoryNum = (start = 0, end = 100, detachAll = false) => {
        if (detachAll)
            D();
        Breaker.array_methodValue_cache.slice(start, end).forEach(LOGD);
    };
}
exports.Breaker = Breaker;
globalThis.getPlatform = () => (Process.platform == "linux" && Process.pageSize == 0x4) ? "arm" : "arm64";
globalThis.getPlatformCtx = (ctx) => getPlatform() == "arm" ? ctx : ctx;
globalThis.maxCallTimes = Breaker.maxCallTimes;
globalThis.D = Breaker.clearBreak;
globalThis.DD = Breaker.clearBreakAll;
globalThis.B = Breaker.addBreakPoint;
globalThis.h = Breaker.printHistoryLog;
globalThis.hn = Breaker.printHistoryNum;
globalThis.breakWithArgs = Breaker.breakWithArgs;
globalThis.breakWithStack = Breaker.breakWithStack;
globalThis.breakInline = Breaker.breakInline;
globalThis.b = (mPtr) => {
    if (typeof mPtr == "number") {
        if (Process.arch == "arm")
            mPtr = ptr(mPtr);
        else if (Process.arch == "arm64")
            throw new Error("Not support parameter typed number at arm64");
        else
            mPtr = ptr(mPtr);
    }
    else if (typeof mPtr == "string") {
        mPtr = mPtr.trim();
        if (mPtr.startsWith("0x"))
            mPtr = ptr(mPtr);
        else
            throw new Error("Only support String format (like '0x...')");
    }
    try {
        new Il2Cpp.Method(mPtr).name;
        if (mPtr instanceof Il2Cpp.Method)
            return Breaker.attachMethodInfo(mPtr, true);
        Breaker.attachMethodInfo(new Il2Cpp.Method(mPtr), true);
    }
    catch (error) {
        Breaker.breakWithArgs(mPtr);
    }
};
globalThis.printDesertedMethods = Breaker.printDesertedMethods;
globalThis.BF = (filterStr) => {
    if (typeof filterStr != "string")
        return;
    DD();
    base_1.HookerBase._list_images.forEach((image) => {
        if (CommonClass.includes(image.assembly.name)) {
            image.classes.flatMap((cls) => cls.methods).forEach((mPtr) => {
                if (mPtr.name.indexOf(filterStr) != -1)
                    Breaker.attachMethodInfo(mPtr, false);
            });
        }
    });
};
},{"../bridge/fix/il2cppM":18,"../utils/formart":331,"./base":4,"./valueResolve":11,"fastest-levenshtein":339}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ADS_TYPE = exports.LogColor = exports.FieldAccess = exports.il2cppTabledefs = exports.ArrKAY = exports.MapKAY = exports.GKEY = exports.EpFunc = exports.TYPE_STR = void 0;
var TYPE_STR;
(function (TYPE_STR) {
    TYPE_STR[TYPE_STR["U_STR"] = 0] = "U_STR";
    TYPE_STR[TYPE_STR["C_STR"] = 1] = "C_STR";
})(TYPE_STR = exports.TYPE_STR || (exports.TYPE_STR = {}));
var EpFunc;
(function (EpFunc) {
    EpFunc[EpFunc["il2cpp_get_corlib"] = 0] = "il2cpp_get_corlib";
    EpFunc[EpFunc["il2cpp_domain_get"] = 1] = "il2cpp_domain_get";
    EpFunc[EpFunc["il2cpp_domain_get_assemblies"] = 2] = "il2cpp_domain_get_assemblies";
    EpFunc[EpFunc["il2cpp_assembly_get_image"] = 3] = "il2cpp_assembly_get_image";
    EpFunc[EpFunc["il2cpp_image_get_class_count"] = 4] = "il2cpp_image_get_class_count";
    EpFunc[EpFunc["il2cpp_image_get_class"] = 5] = "il2cpp_image_get_class";
    EpFunc[EpFunc["il2cpp_class_get_methods"] = 6] = "il2cpp_class_get_methods";
    EpFunc[EpFunc["il2cpp_class_from_type"] = 7] = "il2cpp_class_from_type";
    EpFunc[EpFunc["il2cpp_class_get_type"] = 8] = "il2cpp_class_get_type";
    EpFunc[EpFunc["il2cpp_class_from_system_type"] = 9] = "il2cpp_class_from_system_type";
    EpFunc[EpFunc["il2cpp_class_from_name"] = 10] = "il2cpp_class_from_name";
    EpFunc[EpFunc["il2cpp_class_get_method_from_name"] = 11] = "il2cpp_class_get_method_from_name";
    EpFunc[EpFunc["il2cpp_string_new"] = 12] = "il2cpp_string_new";
    EpFunc[EpFunc["il2cpp_type_get_name"] = 13] = "il2cpp_type_get_name";
    EpFunc[EpFunc["il2cpp_type_get_class_or_element_class"] = 14] = "il2cpp_type_get_class_or_element_class";
    EpFunc[EpFunc["il2cpp_class_get_field_from_name"] = 15] = "il2cpp_class_get_field_from_name";
    EpFunc[EpFunc["il2cpp_class_num_fields"] = 16] = "il2cpp_class_num_fields";
    EpFunc[EpFunc["il2cpp_class_get_fields"] = 17] = "il2cpp_class_get_fields";
    EpFunc[EpFunc["il2cpp_field_static_get_value"] = 18] = "il2cpp_field_static_get_value";
    EpFunc[EpFunc["il2cpp_field_static_set_value"] = 19] = "il2cpp_field_static_set_value";
    EpFunc[EpFunc["getName"] = 20] = "getName";
    EpFunc[EpFunc["getLayer"] = 21] = "getLayer";
    EpFunc[EpFunc["getTransform"] = 22] = "getTransform";
    EpFunc[EpFunc["getParent"] = 23] = "getParent";
    EpFunc[EpFunc["getChildCount"] = 24] = "getChildCount";
    EpFunc[EpFunc["getChild"] = 25] = "getChild";
    EpFunc[EpFunc["get_pointerEnter"] = 26] = "get_pointerEnter";
    EpFunc[EpFunc["pthread_create"] = 27] = "pthread_create";
    EpFunc[EpFunc["getpid"] = 28] = "getpid";
    EpFunc[EpFunc["gettid"] = 29] = "gettid";
    EpFunc[EpFunc["sleep"] = 30] = "sleep";
    EpFunc[EpFunc["DecodeJObject"] = 31] = "DecodeJObject";
    EpFunc[EpFunc["GetDescriptor"] = 32] = "GetDescriptor";
    EpFunc[EpFunc["ArtCurrent"] = 33] = "ArtCurrent";
    EpFunc[EpFunc["newThreadCallBack"] = 34] = "newThreadCallBack";
})(EpFunc = exports.EpFunc || (exports.EpFunc = {}));
var GKEY;
(function (GKEY) {
    GKEY[GKEY["soName"] = 0] = "soName";
    GKEY[GKEY["soAddr"] = 1] = "soAddr";
    GKEY[GKEY["p_size"] = 2] = "p_size";
    GKEY[GKEY["lastTime"] = 3] = "lastTime";
    GKEY[GKEY["LogFlag"] = 4] = "LogFlag";
    GKEY[GKEY["count_method_times"] = 5] = "count_method_times";
    GKEY[GKEY["maxCallTime"] = 6] = "maxCallTime";
    GKEY[GKEY["LshowLOG"] = 7] = "LshowLOG";
    GKEY[GKEY["newThreadDelay"] = 8] = "newThreadDelay";
    GKEY[GKEY["frida_env"] = 9] = "frida_env";
})(GKEY = exports.GKEY || (exports.GKEY = {}));
var MapKAY;
(function (MapKAY) {
    MapKAY[MapKAY["map_attach_listener"] = 0] = "map_attach_listener";
    MapKAY[MapKAY["map_find_class_cache"] = 1] = "map_find_class_cache";
    MapKAY[MapKAY["map_find_method_cache"] = 2] = "map_find_method_cache";
    MapKAY[MapKAY["outFilterMap"] = 3] = "outFilterMap";
    MapKAY[MapKAY["CommonCache"] = 4] = "CommonCache";
})(MapKAY = exports.MapKAY || (exports.MapKAY = {}));
var ArrKAY;
(function (ArrKAY) {
    ArrKAY[ArrKAY["arr_img_addr"] = 0] = "arr_img_addr";
    ArrKAY[ArrKAY["arr_img_names"] = 1] = "arr_img_names";
    ArrKAY[ArrKAY["findClassCache"] = 2] = "findClassCache";
    ArrKAY[ArrKAY["arr_nop_addr"] = 3] = "arr_nop_addr";
    ArrKAY[ArrKAY["arr_runtimeType"] = 4] = "arr_runtimeType";
    ArrKAY[ArrKAY["findMethodArray"] = 5] = "findMethodArray";
    ArrKAY[ArrKAY["t_arrayAddr"] = 6] = "t_arrayAddr";
    ArrKAY[ArrKAY["filterClass"] = 7] = "filterClass";
    ArrKAY[ArrKAY["arrMethodInfo"] = 8] = "arrMethodInfo";
    ArrKAY[ArrKAY["arrayAddr"] = 9] = "arrayAddr";
    ArrKAY[ArrKAY["arrayName"] = 10] = "arrayName";
})(ArrKAY = exports.ArrKAY || (exports.ArrKAY = {}));
var il2cppTabledefs;
(function (il2cppTabledefs) {
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK"] = 7] = "METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_COMPILER_CONTROLLED"] = 0] = "METHOD_ATTRIBUTE_COMPILER_CONTROLLED";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_PRIVATE"] = 1] = "METHOD_ATTRIBUTE_PRIVATE";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_FAM_AND_ASSEM"] = 2] = "METHOD_ATTRIBUTE_FAM_AND_ASSEM";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_ASSEM"] = 3] = "METHOD_ATTRIBUTE_ASSEM";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_FAMILY"] = 4] = "METHOD_ATTRIBUTE_FAMILY";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_FAM_OR_ASSEM"] = 5] = "METHOD_ATTRIBUTE_FAM_OR_ASSEM";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_PUBLIC"] = 6] = "METHOD_ATTRIBUTE_PUBLIC";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_STATIC"] = 16] = "METHOD_ATTRIBUTE_STATIC";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_FINAL"] = 32] = "METHOD_ATTRIBUTE_FINAL";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_VIRTUAL"] = 64] = "METHOD_ATTRIBUTE_VIRTUAL";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_ABSTRACT"] = 1024] = "METHOD_ATTRIBUTE_ABSTRACT";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_PINVOKE_IMPL"] = 8192] = "METHOD_ATTRIBUTE_PINVOKE_IMPL";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK"] = 256] = "METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_REUSE_SLOT"] = 0] = "METHOD_ATTRIBUTE_REUSE_SLOT";
    il2cppTabledefs[il2cppTabledefs["METHOD_ATTRIBUTE_NEW_SLOT"] = 256] = "METHOD_ATTRIBUTE_NEW_SLOT";
})(il2cppTabledefs = exports.il2cppTabledefs || (exports.il2cppTabledefs = {}));
var FieldAccess;
(function (FieldAccess) {
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_FIELD_ACCESS_MASK"] = 7] = "FIELD_ATTRIBUTE_FIELD_ACCESS_MASK";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_COMPILER_CONTROLLED"] = 0] = "FIELD_ATTRIBUTE_COMPILER_CONTROLLED";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_PRIVATE"] = 1] = "FIELD_ATTRIBUTE_PRIVATE";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_FAM_AND_ASSEM"] = 2] = "FIELD_ATTRIBUTE_FAM_AND_ASSEM";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_ASSEMBLY"] = 3] = "FIELD_ATTRIBUTE_ASSEMBLY";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_FAMILY"] = 4] = "FIELD_ATTRIBUTE_FAMILY";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_FAM_OR_ASSEM"] = 5] = "FIELD_ATTRIBUTE_FAM_OR_ASSEM";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_PUBLIC"] = 6] = "FIELD_ATTRIBUTE_PUBLIC";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_STATIC"] = 16] = "FIELD_ATTRIBUTE_STATIC";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_INIT_ONLY"] = 32] = "FIELD_ATTRIBUTE_INIT_ONLY";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_LITERAL"] = 64] = "FIELD_ATTRIBUTE_LITERAL";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_NOT_SERIALIZED"] = 128] = "FIELD_ATTRIBUTE_NOT_SERIALIZED";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_SPECIAL_NAME"] = 512] = "FIELD_ATTRIBUTE_SPECIAL_NAME";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_PINVOKE_IMPL"] = 8192] = "FIELD_ATTRIBUTE_PINVOKE_IMPL";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_RESERVED_MASK"] = 38144] = "FIELD_ATTRIBUTE_RESERVED_MASK";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_RT_SPECIAL_NAME"] = 1024] = "FIELD_ATTRIBUTE_RT_SPECIAL_NAME";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_HAS_FIELD_MARSHAL"] = 4096] = "FIELD_ATTRIBUTE_HAS_FIELD_MARSHAL";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_HAS_DEFAULT"] = 32768] = "FIELD_ATTRIBUTE_HAS_DEFAULT";
    FieldAccess[FieldAccess["FIELD_ATTRIBUTE_HAS_FIELD_RVA"] = 256] = "FIELD_ATTRIBUTE_HAS_FIELD_RVA";
})(FieldAccess = exports.FieldAccess || (exports.FieldAccess = {}));
var LogColor;
(function (LogColor) {
    LogColor[LogColor["WHITE"] = 0] = "WHITE";
    LogColor[LogColor["RED"] = 1] = "RED";
    LogColor[LogColor["YELLOW"] = 3] = "YELLOW";
    LogColor[LogColor["C31"] = 31] = "C31";
    LogColor[LogColor["C32"] = 32] = "C32";
    LogColor[LogColor["C33"] = 33] = "C33";
    LogColor[LogColor["C34"] = 34] = "C34";
    LogColor[LogColor["C35"] = 35] = "C35";
    LogColor[LogColor["C36"] = 36] = "C36";
    LogColor[LogColor["C41"] = 41] = "C41";
    LogColor[LogColor["C42"] = 42] = "C42";
    LogColor[LogColor["C43"] = 43] = "C43";
    LogColor[LogColor["C44"] = 44] = "C44";
    LogColor[LogColor["C45"] = 45] = "C45";
    LogColor[LogColor["C46"] = 46] = "C46";
    LogColor[LogColor["C90"] = 90] = "C90";
    LogColor[LogColor["C91"] = 91] = "C91";
    LogColor[LogColor["C92"] = 92] = "C92";
    LogColor[LogColor["C93"] = 93] = "C93";
    LogColor[LogColor["C94"] = 94] = "C94";
    LogColor[LogColor["C95"] = 95] = "C95";
    LogColor[LogColor["C96"] = 96] = "C96";
    LogColor[LogColor["C97"] = 97] = "C97";
    LogColor[LogColor["C100"] = 100] = "C100";
    LogColor[LogColor["C101"] = 101] = "C101";
    LogColor[LogColor["C102"] = 102] = "C102";
    LogColor[LogColor["C103"] = 103] = "C103";
    LogColor[LogColor["C104"] = 104] = "C104";
    LogColor[LogColor["C105"] = 105] = "C105";
    LogColor[LogColor["C106"] = 106] = "C106";
    LogColor[LogColor["C107"] = 107] = "C107";
})(LogColor = exports.LogColor || (exports.LogColor = {}));
var ADS_TYPE;
(function (ADS_TYPE) {
    ADS_TYPE[ADS_TYPE["IronSource"] = 0] = "IronSource";
    ADS_TYPE[ADS_TYPE["MaxSdkCallbacks"] = 1] = "MaxSdkCallbacks";
    ADS_TYPE[ADS_TYPE["MoPubManager"] = 2] = "MoPubManager";
    ADS_TYPE[ADS_TYPE["TTPluginsGameObject"] = 3] = "TTPluginsGameObject";
})(ADS_TYPE = exports.ADS_TYPE || (exports.ADS_TYPE = {}));
NativePointer.prototype.callFunction = function (...args) {
    return ptr(1);
};
Object.defineProperty(NativePointer.prototype, "callFunction", {
    value: function (...args) {
        return ptr(2);
    }
});
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const formart_1 = require("../utils/formart");
globalThis.protect = (mPtr, size = 0x1000, protection = "rwx") => {
    mPtr = checkPointer(mPtr).shr(3 * 4).shl(3 * 4);
    Memory.protect(mPtr, size, protection);
};
globalThis.watch = (mPtr, length = 0x10) => {
    class MenRange {
        base;
        size;
        constructor(base, size) {
            this.base = checkPointer(base);
            this.size = size;
        }
    }
    class MemoryDetails {
        operation;
        from;
        address;
        rangeIndex;
        pageIndex;
        pagesCompleted;
        pagesTotal;
        mdFrom;
        mdAddress;
        constructor(detail) {
            this.operation = detail.operation;
            this.from = detail.from;
            this.address = detail.address;
            this.rangeIndex = detail.rangeIndex;
            this.pageIndex = detail.pageIndex;
            this.pagesCompleted = detail.pagesCompleted;
            this.pagesTotal = detail.pagesTotal;
            this.mdAddress = Process.findModuleByAddress(this.address);
            this.mdFrom = Process.findModuleByAddress(this.from);
        }
        tostring() {
            return `
operation:\t\t${this.operation}
from:\t\t\t${this.from} { ${this.from.sub(this.mdFrom.base)} @ ${this.mdFrom.name} }
address:\t\t${this.address} { ${this.address.sub(this.mdAddress.base)} @ ${this.mdAddress.name} }
rangeIndex:\t\t${this.rangeIndex}
pageIndex:\t\t${this.pageIndex}
pagesCompleted:\t\t${this.pagesCompleted}
pagesTotal:\t\t${this.pagesTotal}`;
        }
    }
    MemoryAccessMonitor.enable(new MenRange(mPtr, length), {
        onAccess: (access) => LOGD(new MemoryDetails(access).tostring())
    });
};
globalThis.watchDisabled = () => MemoryAccessMonitor.disable();
globalThis.sqliteTest = () => {
    var db, smt, row, name, bio;
    db = SqliteDatabase.open('/path/to/people.db');
    smt = db.prepare('SELECT name, bio FROM people WHERE age = ?');
    console.log('People whose age is 42:');
    smt.bindInteger(1, 42);
    while ((row = smt.step()) !== null) {
        name = row[0];
        bio = row[1];
        console.log('Name:', name);
        console.log('Bio:', bio);
    }
    smt.reset();
};
globalThis.patchTest = (mPtr, size = 1) => {
    Memory.patchCode(checkPointer(mPtr), Process.pageSize * size, (code) => {
        LOGD(code);
        let writer = new ArmWriter(code);
        writer.putLabel('start');
        writer.putNop();
        writer.putCallAddressWithArguments(Module.findExportByName("libil2cpp.so", "il2cpp_string_new"), ['r10', 0x10]);
        LOGD(writer.base + " " + writer.pc + " " + writer.offset + " " + writer.code);
        writer.putBlxReg('lr');
        writer.putBCondLabel("eq", 'start');
        writer.flush();
    });
};
globalThis.findInMemory = (pattern, scanSync = false) => {
    switch (pattern) {
        case "Dex1":
            find("54 61 70 20 54 6F 20 53 74 61 72 74", (pattern, address, size) => {
                LOG('Found "DEX ' + pattern + " Address: " + address.toString() + "\n", LogColor.C36);
            });
            break;
        case "Dex":
            find("64 65 78 0a 30 33 35 00", (pattern, address, size) => {
                LOG('Found "DEX"' + pattern + " Address: " + address.toString() + "\n", LogColor.C36);
            });
            break;
        case "PNG":
            Process.enumerateRanges("r--").forEach((item) => {
                new Promise((onFound) => {
                    Memory.scan(item.base, item.size, "89 50 4E 47 0D 0A 1A 0A", {
                        onMatch: function (addressStart) {
                            onFound(addressStart);
                        },
                        onComplete: function () { }
                    });
                }).then(addressStart => {
                    new Promise((onFound) => {
                        Memory.scan(item.base, item.size, "00 00 00 00 49 45 4E 44 AE 42 60 82", {
                            onMatch: function (addressEnd) {
                                onFound(addressEnd);
                                return "stop";
                            },
                            onComplete: function () { }
                        });
                    }).then(value => {
                        return [addressStart, value];
                    }).then((result) => {
                        let tRes = result;
                        let off = tRes[1].sub(tRes[0]);
                        result[3] = off;
                        LOG("\n" + getLine(60) + "\n[*] Found PNG From " + result[0] + " To " + result[1] + "  size : " + off + "(" + off.toInt32() + ")", LogColor.C36);
                        let x = toInt32Big(tRes[0].add(p_size * 4).readPointer()).toInt32();
                        let y = toInt32Big(tRes[0].add(p_size * 5).readPointer()).toInt32();
                        let dep = tRes[0].add(p_size * 6).readU8();
                        let type = tRes[0].add(p_size * 6 + 1).readU8();
                        let sig = toInt32Big(tRes[0].add(p_size * 7 + 1).readPointer());
                        LOG("\t (" + x + " X " + y + ") \t" + dep + " " + type + "\t" + sig, LogColor.C36);
                        return tRes;
                    }).then(result => {
                        let tRes = result;
                        let length = tRes[3].add(12).toInt32();
                        if (length <= 0)
                            return;
                        Memory.protect(tRes[0], 0xFFFF, "rwx");
                        let path = "/data/data/" + getPkgName() + "/" + result[0] + "_" + result[1] + ".png";
                        let file = new File(path, "wb");
                        let bytes = result[0].readByteArray(length);
                        if (length != 0 && bytes != null)
                            file.write(bytes);
                        file.flush();
                        file.close();
                        LOGD('\tSave to\t\t===>\t' + path);
                    }).catch(err => {
                        LOGE(err);
                    });
                });
            });
            break;
        case "global-metadata.dat":
            find("AF 1B B1 FA 18", (pattern, address, size) => {
                LOGE("\n" + getLine(80));
                LOGD('Found "global-metadata.dat"' + pattern + " Address: " + address.toString() + "\n");
                seeHexA(address, 64, true, LogColor.C33);
                let DefinitionsOffset = parseInt(address.toString(), 16) + 0x108;
                let DefinitionsOffset_size = ptr(DefinitionsOffset).readInt();
                let DefinitionsCount = parseInt(address.toString(), 16) + 0x10C;
                let DefinitionsCount_size = ptr(DefinitionsCount).readInt();
                let global_metadata_size = DefinitionsOffset_size + DefinitionsCount_size;
                LOGD("\nFile size\t===>\t" + global_metadata_size + "B (" + (global_metadata_size / 1024 / 1024).toFixed(2) + "MB)");
                if (global_metadata_size > 1024 * 1024 * 2) {
                    let path = "/data/data/" + getPkgName() + "/global-metadata.dat";
                    let file = new File(path, "wb");
                    let bytes = address.readByteArray(global_metadata_size);
                    if (global_metadata_size != 0 && bytes != null)
                        file.write(bytes);
                    file.flush();
                    file.close();
                    LOGD('Save to\t\t===>\t' + path);
                }
                LOGD(getLine(80));
            });
            break;
        default:
            var md = Process.findModuleByName("libil2cpp.so");
            if (md == null) {
                LOGE("NOT FOUND Module : libil2cpp.so");
                break;
            }
            else {
                LOGW(JSON.stringify(m) + "\n");
            }
            if (scanSync) {
                var results = Memory.scanSync(md.base, md.size, pattern);
                LOGD("onMatch result = \n" + JSON.stringify(results));
            }
            else {
                Memory.scan(md.base, md.size, pattern, {
                    onMatch: function (address, size) {
                        LOGD("[*] Found at " + address + " with size " + size);
                        return 'stop';
                    },
                    onComplete: function () {
                        LOGE("onComplete");
                    }
                });
            }
            break;
    }
    function toInt32Big(mPtr) {
        var resultStr = '';
        var aimStr = String(mPtr).split("0x")[1];
        for (let i = aimStr.length - 1; i >= 0; i--)
            resultStr += aimStr.charAt(i);
        return ptr("0x" + resultStr);
    }
    function find(pattern, callback) {
        LOG("Start Find Pattern '" + pattern + "'\nWatting ......", LogColor.C96);
        let addrArray = Process.enumerateRanges("r--");
        addrArray.forEach((item) => {
            Memory.scan(item.base, item.size, pattern, {
                onMatch: function (address, size) {
                    callback(pattern, address, size);
                },
                onComplete: function () { }
            });
        });
    }
    function getPkgName() {
        let retStr = "";
        Java.perform(() => retStr = Java.use('android.app.ActivityThread').currentApplication().getApplicationContext().getPackageName());
        return retStr;
    }
};
globalThis.fridaInfo = () => {
    LOGD(`\n${getLine(40)}`);
    LOGD(`[*] Runtime : ${Script.runtime}`);
    LOGD(`[*] ThreadId : ${Process.getCurrentThreadId()}`);
    LOGD(`[*] Process.id : ${Process.id}`);
    LOGD(`[*] Process.arch : ${Process.arch}`);
    LOGD(`[*] Process.platform : ${Process.platform}`);
    LOGD(`[*] Process.pointerSize : ${Process.pointerSize}`);
    LOGD(`[*] Process.pageSize : ${Process.pageSize}`);
    LOGD(`[*] Process.codeSigningPolicy : ${Process.codeSigningPolicy}`);
    LOGD(`[*] Process.isDebuggerAttached : ${Process.isDebuggerAttached()}`);
    LOGD(`${getLine(40)}\n`);
};
let index_threads;
globalThis.listThreads = (maxCountThreads = 20) => {
    index_threads = 0;
    let current = Process.getCurrentThreadId();
    Process.enumerateThreads()
        .sort((a, b) => b.id - a.id)
        .slice(0, maxCountThreads)
        .forEach((thread) => {
        let indexText = formart_1.formartClass.alignStr(`[${++index_threads}]`, 6);
        let text = `${indexText} ${thread.id} ${thread.state}`;
        let ctx = thread.context;
        current == thread.id ? LOGE(text) : LOGD(text);
        LOGZ(`\tPC : ${ctx.pc}  ${checkCtx(ctx, "PC")}`);
        LOGZ(`\tLR : ${getPlatformCtx(ctx).lr}  ${checkCtx(ctx, "LR")}`);
    });
};
let index;
globalThis.listModules = (filterName = "") => {
    index = 0;
    Process.enumerateModules().forEach((md) => {
        if (md.name.includes(filterName))
            printModule(md, true);
    });
};
globalThis.listModule = (moduleName, printItems = 5) => {
    let md = Process.getModuleByName(moduleName);
    if (md == null) {
        LOGE("NOT FOUND Module : " + moduleName);
        return;
    }
    printModule(md, false);
    if (moduleName == "linker")
        return;
    let protection = "";
    let range = md.enumerateRanges(protection);
    if (range.length > 0) {
        LOGO(`\t[-] enumerateRanges ( ${range.length} )`);
        range.sort((f, s) => f.base.compare(s.base))
            .forEach((item) => {
            LOGZ(`\t\t${item.protection}\t${item.base} - ${item.base.add(item.size)} | ${formart_1.formartClass.alignStr(String(ptr(item.size)), p_size + 4)} <- ${item.size}`);
        });
        LOG("");
    }
    let imp = md.enumerateImports();
    if (imp.length > 0) {
        LOGO(`\t[-] enumerateImports ( ${imp.length} )`);
        let arrTmpRecord = [];
        imp.sort((a, b) => a.name.length - b.name.length)
            .slice(0, printItems).forEach((item) => {
            let address = formart_1.formartClass.alignStr(String(item.address), Process.pointerSize * 2);
            let importFromDes = "\t<---\t";
            try {
                let tmd = Process.findModuleByAddress(item.address);
                let baseStr = ` @ ${tmd.base}`;
                if (item.type == "function" || item.type == "variable")
                    importFromDes += `${tmd.name} ${arrTmpRecord.includes(tmd.name) ? formart_1.formartClass.centerStr("...", baseStr.length) : baseStr}`;
                arrTmpRecord.push(tmd.name);
            }
            catch {
                importFromDes = "";
            }
            LOGZ(`\t\t${item.type}   ${address}  ${item.name} ${importFromDes}`);
        });
        if (imp.length > printItems)
            LOGZ("\t\t......\n");
    }
    let exp = md.enumerateExports();
    if (exp.length > 0) {
        LOGO(`\t[-] enumerateExports ( ${exp.length} )`);
        exp.sort((a, b) => a.name.length - b.name.length)
            .slice(0, printItems).forEach((item) => {
            let address = formart_1.formartClass.alignStr(String(item.address), Process.pointerSize * 2);
            LOGZ(`\t\t${item.type}   ${address}  ${item.name}`);
        });
        if (exp.length > printItems)
            LOGZ("\t\t......\n");
    }
    let sym = md.enumerateSymbols();
    if (sym.length > 0) {
        LOGO(`\t[-] enumerateSymbols ( ${sym.length} )`);
        sym.slice(0, printItems).forEach((item) => {
            LOGZ(`\t\t${item.isGlobal}  ${item.type}  ${item.name}  ${item.address}`);
        });
        if (sym.length > printItems)
            LOGZ("\t\t......\n");
    }
};
function printModule(md, needIndex = false) {
    needIndex == true ? LOGD(`\n[${++index}]\t${md.name}`) : LOGD(`\n[*]\t${md.name}`);
    let fileLen = getFileLenth(md.path);
    let extendFileLen = fileLen == 0 ? "" : `| FILE: ${ptr(fileLen)} ( ${fileLen} B )`;
    let size = Math.round(md.size / 1024 / 1024 * 100) / 100;
    LOGZ(`\t${md.base} - ${(md.base.add(md.size))}  | MEM: ${ptr(md.size)} ( ${md.size} B = ${md.size / 1024} KB ≈ ${size} MB ) ${extendFileLen}`);
    LOGZ(`\t${md.path}\n`);
}
globalThis.findExport = (exportName, moduleName, callback) => {
    if (callback == undefined)
        callback = showDetails;
    if (moduleName == undefined) {
        Process.enumerateModules().forEach((md) => {
            md.enumerateExports().forEach((exp) => {
                if (exp.name.indexOf(exportName) != -1)
                    callback(exp);
            });
        });
    }
    else {
        let md = Process.findModuleByName(moduleName);
        if (md == null)
            throw new Error("NOT FOUND Module : " + moduleName);
        md.enumerateExports().forEach((exp) => {
            if (exp.name.indexOf(exportName) != -1)
                callback(exp);
        });
    }
    if (callback == showDetails)
        newLine();
    function showDetails(exp) {
        try {
            let md = Process.findModuleByAddress(exp.address);
            if (md == null) {
                let mdt = Process.findModuleByName("linker");
                mdt.enumerateExports().forEach((linkerExp) => {
                    if (linkerExp.address.equals(exp.address) && linkerExp.name == exp.name)
                        md = mdt;
                });
            }
            let rg = Process.findRangeByAddress(exp.address);
            LOGD(`\n[*] ${exp.type} -> address: ${exp.address} ( ${exp.address.sub(md.base)} ) | name: ${exp.name}`);
            LOGZ(`\t[-] base: ${md.base} | size: 0x${md.size.toString(16).padEnd(p_size * 2, " ")} <- module:  ${md.name}`);
            LOGZ(`\t[-] base: ${rg.base} | size: 0x${rg.size.toString(16).padEnd(p_size * 2, " ")} <- range:   ${rg.protection}`);
        }
        catch (error) {
            if (Process.findModuleByAddress(exp.address) == null)
                LOGE("Module not found");
            if (Process.findRangeByAddress(exp.address) == null)
                LOGE("Range not found");
            LOGD(JSON.stringify(exp));
        }
    }
};
globalThis.findImport = (moduleName = "libc.so", importName = "") => {
    let md = Process.findModuleByName(moduleName);
    if (md == null) {
        LOGE("NOT FOUND Module : " + moduleName);
        return;
    }
    md.enumerateImports().forEach((imp) => {
        if (!imp.name.includes(importName))
            return;
        let subAddr = (imp == undefined || imp.address == null) ? "" : ` ( ${imp.address.sub(Process.findModuleByAddress(imp.address).base)} )`;
        LOGD(`\n[*] ${imp.type} -> address: ${imp.address}${subAddr}  | name: ${imp.name}`);
        let impMdBase = Process.findModuleByName(imp.module)?.base;
        LOGZ(`\t${imp.module == undefined ? "" : (imp.module + " ( " + impMdBase + " ) ")} \t ${imp.slot == undefined ? "" : imp.slot}`);
    });
    LOG("");
};
const getFileLenth = (filePath) => {
    let file = callFunctionWithOutError(Module.findExportByName("libc.so", "fopen"), allocCStr(filePath), allocCStr("rwx"));
    if (file.isNull())
        return 0;
    callFunctionWithOutError(Module.findExportByName("libc.so", "fseek"), file, 0, 2);
    let len = callFunctionRI(Module.findExportByName("libc.so", "ftell"), file);
    callFunctionWithOutError(Module.findExportByName("libc.so", "fclose"), file);
    return len;
};
globalThis.StalkerTraceEvent = (mPtr, range) => {
    let src_mPtr = mPtr;
    mPtr = checkPointer(mPtr);
    if (mPtr == undefined || mPtr.isNull())
        return;
    const moduleG = Process.findModuleByAddress(mPtr);
    if (moduleG == null) {
        LOGE(`Module not found { from ${mPtr}}`);
        return;
    }
    if (range != undefined && range.length > 0) {
        for (let i = 0; i < range.length; i++) {
            range[i] = checkPointer(range[i]);
        }
    }
    A(mPtr, (args, ctx, passValue) => {
        LOG("");
        passValue.set("len", formart_1.formartClass.printTitileA(`Enter ---> arg0:${args[0]}  arg1:${args[1]}  arg2:${args[2]}  arg3:${args[3]} | ${Process.getCurrentThreadId()}`, LogColor.YELLOW));
        stalkerEnter(Process.getCurrentThreadId());
    }, (ret, ctx, passValue) => {
        LOGW(`${getLine(20)}\n Exit ---> ret : ${ret}\n${getLine(passValue.get("len"))}`);
        stalkerExit(Process.getCurrentThreadId());
    });
    LOGD(`Stalker Attached : ${mPtr} ( ${ptr(src_mPtr)} ) from ${moduleG.name} | ${Process.getCurrentThreadId()}`);
    function stalkerEnter(tid) {
        Stalker.follow(tid, {
            events: {
                call: true,
                ret: false,
                exec: false,
                block: false,
                compile: false
            },
            onReceive: function (events) {
                let msg = Stalker.parse(events, {
                    annotate: true,
                    stringify: false
                });
                msg.forEach((event) => {
                    let md1 = Process.findModuleByAddress(event[1]);
                    let md2 = Process.findModuleByAddress(event[2]);
                    LOGD(`${event[0]} Times:${event[3]} ${event[1]}@${md1?.name} ${event[2]}@${md2?.name} `);
                });
            }
        });
    }
    function stalkerExit(tid) {
        Stalker.unfollow();
        Stalker.garbageCollect();
    }
};
globalThis.StalkerTracePath = (mPtr, range) => {
    let src_mPtr = mPtr;
    mPtr = checkPointer(mPtr);
    if (mPtr == undefined || mPtr.isNull())
        return;
    const moduleG = Process.findModuleByAddress(mPtr);
    if (moduleG == null) {
        LOGE(`Module not found { from ${mPtr}}`);
        return;
    }
    if (range != undefined && range.length > 0) {
        for (let i = 0; i < range.length; i++) {
            range[i] = checkPointer(range[i]);
        }
    }
    A(mPtr, (args, ctx, passValue) => {
        LOG("");
        passValue.set("len", formart_1.formartClass.printTitileA(`Enter ---> arg0:${args[0]}  arg1:${args[1]}  arg2:${args[2]}  arg3:${args[3]} | ${Process.getCurrentThreadId()}`, LogColor.YELLOW));
        stalkerEnter(Process.getCurrentThreadId());
    }, (ret, ctx, passValue) => {
        LOGW(`${getLine(20)}\n Exit ---> ret : ${ret}\n${getLine(passValue.get("len"))}`);
        stalkerExit(Process.getCurrentThreadId());
    });
    LOGD(`Stalker Attached : ${mPtr} ( ${ptr(src_mPtr)} ) from ${moduleG.name} | ${Process.getCurrentThreadId()}`);
    function stalkerEnter(tid) {
        let moduleMap = new ModuleMap((module) => {
            if (module.base.equals(moduleG.base))
                return true;
            Stalker.exclude(module);
            return false;
        });
        Stalker.follow(tid, {
            transform: (iterator) => {
                let instruction = iterator.next();
                let isModuleCode = moduleMap.has(instruction.address);
                let subAddress = ptr(instruction.address);
                if (range != undefined) {
                    if (subAddress > range[0] && range[1] > subAddress)
                        LOGD(`[*] ${instruction.address} ( ${subAddress.sub(moduleG.base)} ) ---> ${instruction.mnemonic} ${instruction.opStr}`);
                }
                else if (isModuleCode) {
                    LOGD(`[*] ${instruction.address} ( ${subAddress.sub(moduleG.base)} ) ---> ${instruction.mnemonic} ${instruction.opStr}`);
                }
                do {
                    iterator.keep();
                } while (iterator.next() !== null);
            }
        });
    }
    function stalkerExit(tid) {
        Stalker.unfollow();
        Stalker.garbageCollect();
        LOGE("Stalker Exit : " + Process.getCurrentThreadId());
    }
};
globalThis.cmdouleTest = () => {
    var source = "#include <stdio.h>" +
        "void functionFromCModule(){" +
        "   printf(\"Print from CModule\n\");" +
        "}";
    var cModule = new CModule(source);
    console.log(JSON.stringify(cModule));
    var ptrFunctionFromCModule = cModule['functionFromCModule'];
    var functionFromCModule = new NativeFunction(ptrFunctionFromCModule, 'void', []);
    functionFromCModule();
};
},{"../utils/formart":331}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NOP_MAP = exports.NOP_ARRAY = exports.SET_ARRAY = exports.GET_ARRAY = exports.GET_MAP_VALUE = exports.SET_MAP_VALUE = exports.SET_MAP = exports.GET_MAP = exports.SET_G = exports.GET_GT = exports.GET_G = exports.GET_F = exports.SET_F_A = exports.SET_F = exports.SET_A = exports.GET_A = exports.newThreadCallBack = exports.p_size = exports.soName = void 0;
exports.soName = "libil2cpp.so";
exports.p_size = Process.pointerSize;
let newThreadCallBack = () => { };
exports.newThreadCallBack = newThreadCallBack;
let MAP_EXPORT_ADDRESS = new Map();
const GET_A = (typeEp) => MAP_EXPORT_ADDRESS.get(typeEp);
exports.GET_A = GET_A;
const SET_A = (typeEp, mPtr) => MAP_EXPORT_ADDRESS.set(typeEp, mPtr);
exports.SET_A = SET_A;
let MAP_EXPORT_FUNCTIONS = new Map();
function SET_F(type, func) {
    MAP_EXPORT_FUNCTIONS.set(type, func);
    (0, exports.SET_A)(type, func);
}
exports.SET_F = SET_F;
function SET_F_A(type, func) {
    MAP_EXPORT_FUNCTIONS.set(type, func);
    (0, exports.SET_A)(type, func);
}
exports.SET_F_A = SET_F_A;
function GET_F(type) {
    return MAP_EXPORT_FUNCTIONS.get(type);
}
exports.GET_F = GET_F;
let MAP_GLOABE_OBJ = new Map();
const GET_G = (gKey) => MAP_GLOABE_OBJ.get(gKey);
exports.GET_G = GET_G;
function GET_GT(gKey) {
    let tmp = MAP_GLOABE_OBJ.get(gKey);
    if (tmp == undefined)
        tmp = 0;
    return MAP_GLOABE_OBJ.get(gKey);
}
exports.GET_GT = GET_GT;
function SET_G(gKey, obj) {
    return MAP_GLOABE_OBJ.set(gKey, obj);
}
exports.SET_G = SET_G;
function GET_MAP(tKay) {
    if (MAP_GLOABE_OBJ.get(tKay)) {
        return MAP_GLOABE_OBJ.get(tKay);
    }
    else {
        let tmp = new Map();
        SET_MAP(tKay, tmp);
        return tmp;
    }
}
exports.GET_MAP = GET_MAP;
function SET_MAP(tKay, map) {
    MAP_GLOABE_OBJ.set(tKay, map);
}
exports.SET_MAP = SET_MAP;
function SET_MAP_VALUE(tKay, key, value) {
    SET_MAP(tKay, GET_MAP(tKay).set(key, value));
}
exports.SET_MAP_VALUE = SET_MAP_VALUE;
function GET_MAP_VALUE(tKay, key) {
    return GET_MAP(tKay).get(key);
}
exports.GET_MAP_VALUE = GET_MAP_VALUE;
function GET_ARRAY(tKay) {
    if (MAP_GLOABE_OBJ.get(tKay)) {
        return MAP_GLOABE_OBJ.get(tKay);
    }
    else {
        let tmp = new Array();
        SET_ARRAY(tKay, tmp);
        return tmp;
    }
}
exports.GET_ARRAY = GET_ARRAY;
function SET_ARRAY(tKay, array) {
    MAP_GLOABE_OBJ.set(tKay, array);
}
exports.SET_ARRAY = SET_ARRAY;
function NOP_ARRAY(tKay) {
    MAP_GLOABE_OBJ.delete(tKay);
}
exports.NOP_ARRAY = NOP_ARRAY;
function NOP_MAP(tKay) {
    MAP_GLOABE_OBJ.delete(tKay);
}
exports.NOP_MAP = NOP_MAP;
globalThis.MAP_EXPORT_FUNCTIONS = MAP_EXPORT_FUNCTIONS.forEach((value, key) => { LOGD(`${key} => ${value}`); });
globalThis.MAP_EXPORT_ADDRESS = MAP_EXPORT_ADDRESS;
globalThis.MAP_GLOABE_OBJ = MAP_GLOABE_OBJ;
globalThis.p_size = exports.p_size;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./base");
require("./breaker");
require("./enum");
require("./extends");
require("./globle");
require("./info");
require("./valueResolve");
},{"./base":4,"./breaker":5,"./enum":6,"./extends":7,"./globle":8,"./info":10,"./valueResolve":11}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.showMethodInfo = void 0;
const showMethodInfo = (methodInfo) => {
    if (typeof methodInfo == "number")
        methodInfo = ptr(methodInfo);
    let packMethod = new Il2Cpp.Method(methodInfo);
    let Il2CppClass = packMethod.class.handle;
    let Il2CppImage = packMethod.class.image.handle;
    let Il2CppAssembly = packMethod.class.image.assembly.handle;
    LOGH("\nFunction: " + packMethod.name + "\t" + packMethod.parameterCount + "\t0x" + Number(methodInfo).toString(16) + " ---> "
        + packMethod.virtualAddress + " ---> " + packMethod.relativeVirtualAddress + "\n");
    LOGH(packMethod.name + " ---> " + packMethod.class.name + "(" + Il2CppClass + ") ---> " + (packMethod.class.namespace.length == 0 ? " - " : packMethod.class.namespace)
        + " ---> " + packMethod.class.image.name + "(" + Il2CppImage + ") ---> Il2CppAssembly(" + Il2CppAssembly + ")\n");
    if (packMethod.parameterCount != 0)
        LOGH("ARGS: " + packMethod.parameters.map(p => p.type.name + "(" + p.type.handle + ") " + p.name).join(", ") + "\n");
};
exports.showMethodInfo = showMethodInfo;
globalThis.showMethodInfo = showMethodInfo;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const il2cppM_1 = require("../bridge/fix/il2cppM");
const class_1 = require("../expand/TypeExtends/mscorlibObj/Object/class");
const class_2 = require("../expand/TypeExtends/mscorlibObj/ValueType/Color/class");
const formart_1 = require("../utils/formart");
const reader_1 = require("../utils/reader");
class ValueResolve {
    cacheId = "";
    method;
    args;
    retval = ptr(0);
    constructor(cacheID, methodInfo) {
        this.cacheId = cacheID;
        this.method = methodInfo;
        this.args = new Array(methodInfo.genericParameterCount);
    }
    getCacheId() {
        return this.cacheId;
    }
    setCacheId(cacheId) {
        this.cacheId = cacheId;
        return this;
    }
    getMethod() {
        return this.method;
    }
    setMethod(method) {
        this.method = method;
        this.args = new Array(method.genericParameterCount);
        return this;
    }
    setArg(index, arg) {
        this.args[index] = arg;
        return this;
    }
    setRetval(retval) {
        this.retval = retval;
        return this;
    }
    getArg(index) {
        return this.args[index];
    }
    getRetval() {
        return this.retval;
    }
    getArgs() {
        return this.args;
    }
    getArgsCount() {
        return this.method.parameterCount;
    }
    setArgs(value) {
        if (value == undefined || value.length === 0 || value.length < this.method.parameterCount)
            return this;
        this.args = value;
        return this;
    }
    static MapCacheStringWithOutValue = new Map();
    toString() {
        let cache = ValueResolve.MapCacheStringWithOutValue.get(this.cacheId);
        if (cache)
            return cache;
        let addressInfo = ` ${this.method.handle} -> ${this.method.relativeVirtualAddress} `;
        let append = "";
        let length = String(this.method.class.handle).length + 1;
        try {
            append += ",";
            append += formart_1.formartClass.alignStr(String(this.args[0]), length, " ");
        }
        catch {
            append += "  ";
            append += formart_1.formartClass.getLine(length, " ");
        }
        let classInfo = `${formart_1.formartClass.alignStr(this.method.class.name, 18)}(${this.method.class.handle}${append.trim()})`;
        let infoContent = `===>  ${(0, il2cppM_1.methodToString)(this.method, true)}\t `;
        let retStr = `${this.cacheId}\t${addressInfo}\t|  ${classInfo}  ${infoContent}`;
        ValueResolve.MapCacheStringWithOutValue.set(this.cacheId, retStr);
        return retStr;
    }
    resolve(index) {
        if (index > this.method.parameterCount)
            throw new Error("index out of parameterCount range");
        let args = index == -1 ? this.retval : this.args[index];
        let type = index == -1 ? this.method.returnType : this.method.parameters[index].type;
        return ValueResolve.fakeValue(args, type, this.method);
    }
    static fakeValue = (insPtr, type, method) => {
        if (typeof insPtr == "number")
            insPtr = ptr(insPtr);
        if (typeof method == "number")
            method = new Il2Cpp.Method(ptr(method));
        if (type.handle.equals(1))
            return new Il2Cpp.Object(insPtr).toString();
        if (type.isNull() || method.isNull())
            return "";
        if (insPtr.isNull() && type.name != "System.Boolean" && !method.class.isEnum && !type.name.includes("Void"))
            return "NULL";
        if (!method.class.isNull() && type.name.endsWith("[]"))
            return arrayType();
        if (!method.class.isNull() && type.name.includes("Dictionary"))
            return dictionaryType();
        if (!method.class.isNull() && method.class.isEnum)
            return enumType();
        return CommonType(type);
        function arrayType() {
            return "";
        }
        function dictionaryType() {
            return "";
        }
        function enumType() {
            return "";
        }
        function CommonType(type) {
            switch (type.name) {
                case "System.Void":
                    return "";
                case "System.Boolean":
                    return !insPtr.isNull() ? "True" : "False";
                case "System.Int32":
                    return (0, reader_1.readInt)(insPtr).toString();
                case "System.UInt32":
                    return (0, reader_1.readUInt)(insPtr).toString();
                case "System.Int64":
                    return (0, reader_1.readInt64)(insPtr).toString();
                case "System.Single":
                    return (0, reader_1.readSingle)(insPtr).toString();
                case "System.String":
                    return (0, reader_1.readU16)(insPtr);
                case "System.Object":
                    return getObjName(insPtr);
                case "System.UnityEngine":
                    return new class_1.UnityEngine_Object(insPtr).get_name();
                case "UnityEngine.Color":
                    return new class_2.UnityEngine_Color_Impl(insPtr).toString();
                case "Vector2":
                    return `${insPtr.readFloat()} ${insPtr.add(4).readFloat()}`;
                case "System.Action":
                case "System.Action`1":
                case "System.Action`2":
                    return insPtr.add(Process.pageSize === 4 ? 0x14 : 0x10).readPointer().readPointer().sub(soAddr).toString();
                default:
                    try {
                        return new Il2Cpp.Object(insPtr).toString();
                    }
                    catch (error) {
                        return "";
                    }
            }
        }
        function getParentsStr(clsPtr) {
            let ret = "";
            while (true) {
                let parent = clsPtr.parent;
                if (parent != null) {
                    clsPtr = parent;
                    ret += clsPtr.name + "<---";
                }
                else {
                    return ret;
                }
            }
        }
    };
}
exports.default = ValueResolve;
},{"../bridge/fix/il2cppM":18,"../expand/TypeExtends/mscorlibObj/Object/class":175,"../expand/TypeExtends/mscorlibObj/ValueType/Color/class":235,"../utils/formart":331,"../utils/reader":335}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./packer");
},{"./packer":13}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PackerObject extends Il2Cpp.Object {
    methods = [];
    fields = [];
    invoke(...args) { }
}
class Packer extends Il2Cpp.Object {
    methods = this.class.methods;
    fields = this.class.fields;
    pack() {
        return new Proxy(this.class, {
            get: (target, property) => {
                Reflect.set(target, "methods", this.methods);
                Reflect.set(target, "fields", this.fields);
                return Reflect.get(target, property);
            }
        });
    }
}
function packPack(mPtr) {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    return new Packer(mPtr).fields["12"].value;
}
Reflect.set(globalThis, "pack", packPack);
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
Reflect.defineProperty(Il2Cpp.Class, "prettyString", {
    value: function () {
        var proto = Il2Cpp.Class.prototype;
        return `${proto.isEnum ? `enum` : proto.isValueType ? `struct` : proto.isInterface ? `interface` : `class`}`;
    }
});
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.showAsm = void 0;
class AsmParser {
    current = ptr(0);
    Offset = 0;
    len = 0;
    ret = null;
    constructor(mPtr, len = 20) {
        if (mPtr.isNull())
            throw new Error("Current mPtr can not be null");
        this.current = mPtr;
        this.len = len;
        try {
            Instruction.parse(this.current);
        }
        catch (error) {
            throw error;
        }
    }
    next() {
        if (this.len <= 0 || this.Offset > this.len)
            return null;
        while (!this.current.isNull()) {
            try {
                this.ret = Instruction.parse(this.current.add(this.Offset));
            }
            catch (error) {
                this.ret = null;
            }
            this.Offset += Process.pageSize;
        }
        return this.ret;
    }
    value() {
        return this.ret;
    }
    tostring() {
        if (this.ret)
            return this.ret.toString();
        else
            return "";
    }
}
const showAsm = (mPtr, len = 20) => {
    let asmP = new AsmParser(checkPointer(mPtr), len);
    while (asmP.next()) {
        LOGD(asmP.toString());
    }
};
exports.showAsm = showAsm;
globalThis.showAsm = showAsm;
},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setFunctionBool = exports.setFunctionValue = void 0;
let setFunctionValue = (mPtr, retValue = ptr(0)) => {
    let srcPtr = mPtr;
    mPtr = checkCmdInput(mPtr);
    retValue = checkCmdInput(retValue);
    mPtr = checkPointer(mPtr);
    Interceptor.attach(mPtr, {
        onLeave: (retval) => {
            LOGW(`setFunctionValue | ${ptr(srcPtr)} | ret => { ${retval} -> ${retValue} } `);
            retval.replace(retValue);
        }
    });
};
exports.setFunctionValue = setFunctionValue;
const setFunctionBool = (mPtr, retval = false) => (0, exports.setFunctionValue)(mPtr, ptr(retval ? 1 : 0));
exports.setFunctionBool = setFunctionBool;
globalThis.setFunctionBool = exports.setFunctionBool;
globalThis.setFunctionValue = exports.setFunctionValue;
},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMethodMaxArgNameLength = exports.methodToString = exports.methodToArray = exports.getMethodDesFromMethodInfo = exports.getModifier = exports.getMethodModifier = void 0;
const enum_1 = require("../../base/enum");
const getMethodModifier = (methodPtr) => {
    if (typeof methodPtr == "number")
        methodPtr = ptr(methodPtr);
    let localMethod;
    if (methodPtr instanceof Il2Cpp.Method) {
        localMethod = methodPtr;
    }
    else if (typeof methodPtr == "number") {
        localMethod = new Il2Cpp.Method(ptr(methodPtr));
    }
    else {
        localMethod = new Il2Cpp.Method(methodPtr);
    }
    let flags = localMethod.flags;
    return (0, exports.getModifier)(flags);
};
exports.getMethodModifier = getMethodModifier;
const getModifier = (flags) => {
    let access = flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK;
    let ret_str = "";
    switch (access) {
        case enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_PRIVATE:
            ret_str += "private ";
            break;
        case enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_PUBLIC:
            ret_str += "public ";
            break;
        case enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_FAMILY:
            ret_str += "protected ";
            break;
        case enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_ASSEM:
        case enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_FAM_AND_ASSEM:
            ret_str += "internal ";
            break;
        case enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_FAM_OR_ASSEM:
            ret_str += "protected internal ";
            break;
    }
    if (flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_STATIC) {
        ret_str += "static ";
    }
    if (flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_ABSTRACT) {
        ret_str += "abstract ";
        if ((flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK) == enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_REUSE_SLOT) {
            ret_str += "override ";
        }
    }
    else if (flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_FINAL) {
        if ((flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK) == enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_REUSE_SLOT) {
            ret_str += "sealed override ";
        }
    }
    else if (flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_VIRTUAL) {
        if ((flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_VTABLE_LAYOUT_MASK) == enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_NEW_SLOT) {
            ret_str += "virtual ";
        }
        else {
            ret_str += "override ";
        }
    }
    if (flags & enum_1.il2cppTabledefs.METHOD_ATTRIBUTE_PINVOKE_IMPL) {
        ret_str += "extern ";
    }
    return ret_str;
};
exports.getModifier = getModifier;
const getMethodDesFromMethodInfo = (methodPtr, simpleType = true) => {
    if (typeof methodPtr == "number")
        methodPtr = ptr(methodPtr);
    if (methodPtr == null || methodPtr.isNull())
        throw new Error("getMethodDesFromMethodPtr: methodPtr can't be null");
    let localMethod = methodPtr instanceof Il2Cpp.Method ? methodPtr : new Il2Cpp.Method(methodPtr);
    let returnTypeArr = localMethod.returnType.name.split(".");
    let ret_str = "";
    ret_str += (0, exports.getMethodModifier)(localMethod);
    ret_str += `${returnTypeArr[returnTypeArr.length - 1]} `;
    ret_str += localMethod.name;
    ret_str += "(" + localMethod.parameters.map(x => `${simpleType ? (function (name) {
        let sp = name.split(".");
        return sp[sp.length - 1];
    }(x.type.name)) : x.type.name} ${x.name}`).join(",") + ")";
    return ret_str;
};
exports.getMethodDesFromMethodInfo = getMethodDesFromMethodInfo;
const map_cache_method_des = new Map();
const methodToArray = (method) => {
    if (method instanceof NativePointer) {
        return getArrayFromMethod(new Il2Cpp.Method(method));
    }
    else if (typeof method == "number") {
        return getArrayFromMethod(new Il2Cpp.Method(ptr(method)));
    }
    else if (method instanceof Il2Cpp.Method) {
        return getArrayFromMethod(method);
    }
    else {
        throw new Error("methodToArray: method unknown type");
    }
    function getArrayFromMethod(method) {
        let cache = map_cache_method_des.get(method);
        if (cache != undefined)
            return cache;
        let ret_arr = [];
        ret_arr.push(method.handle);
        ret_arr.push(method.virtualAddress);
        ret_arr.push(method.virtualAddress.isNull() ? ptr(0) : method.relativeVirtualAddress);
        ret_arr.push((0, exports.getMethodDesFromMethodInfo)(method));
        ret_arr.push(method.class.handle);
        ret_arr.push(method.class.name);
        map_cache_method_des.set(method, ret_arr);
        return ret_arr;
    }
};
exports.methodToArray = methodToArray;
const methodToString = (method, simple = false) => {
    let arr = (0, exports.methodToArray)(method);
    if (arr == undefined)
        throw new Error("methodToString: methodToArray return undefined");
    if (simple)
        return `${arr[3]} ${(method.name.includes("ctor")) ? `   { class => ${arr[5]}( ${arr[4]} ) }` : ""}`;
    let displayStr = `[*] `;
    displayStr += `${arr[0]} ---> `;
    displayStr += `${arr[1]} (${arr[2]})`;
    displayStr += `${arr[1].isNull() ? `\t\t\t` : `\t`}|  `;
    displayStr += `${arr[3]}`;
    if (method.name.includes(".ctor"))
        displayStr += `   { class => ${arr[5]}( ${arr[4]} ) } `;
    return displayStr;
};
exports.methodToString = methodToString;
const getMethodMaxArgNameLength = (method) => {
    let max = 0;
    method.parameters.forEach((paramter) => {
        paramter.name.length > max ? max = paramter.name.length : max;
    });
    return max;
};
exports.getMethodMaxArgNameLength = getMethodMaxArgNameLength;
globalThis.methodToArray = exports.methodToArray;
},{"../../base/enum":6}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./apiFix");
require("./il2cppM");
require("./Il2cppC");
require("./parseFields");
require("./functions");
require("./asmHelper");
require("./packer/include");
},{"./Il2cppC":14,"./apiFix":15,"./asmHelper":16,"./functions":17,"./il2cppM":18,"./packer/include":20,"./parseFields":24}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./packArray");
require("./packList");
require("./packDictionary");
},{"./packArray":21,"./packDictionary":22,"./packList":23}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.packArray = void 0;
class packArray {
}
exports.packArray = packArray;
},{}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.packDictionary = void 0;
class packDictionary {
}
exports.packDictionary = packDictionary;
},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackList = void 0;
class PackList {
    handle;
    object;
    class;
    _defaultCapacity;
    _emptyArray;
    _size;
    _items;
    _version;
    _syncRoot;
    constructor(mPtr) {
        this.handle = mPtr;
        try {
            this.object = new Il2Cpp.Object(mPtr);
            this.class = this.object.class;
            if (!this.class.name.includes('List`'))
                throw new Error('Input mPtr is not a list');
            this._defaultCapacity = this.class.field('_defaultCapacity').value;
            this._emptyArray = this.class.field('_emptyArray').value;
            this._items = this.class.field('_items').value;
            this._size = this.class.field('_size').value;
            this._version = this.class.field('_version').value;
            this._syncRoot = this.class.field('_syncRoot').value;
        }
        catch (error) {
            throw error;
        }
    }
    toString() {
        let itemName = this.get_Count() == 0 ? '' : ` < '${this.get_Item().class.name}' > `;
        return `${this.handle} ---> ${this.class.name} (${this.object.class.handle}${itemName} | ${this.get_Count()}/${this.get_Capacity()} )`;
    }
    toShow() {
        newLine();
        LOGE(`${new mscorlib.Object(this.handle).toString()} @ ${this.handle}`);
        LOGJSON(this);
    }
    forEach(callback) {
        if (this.get_Count() == 0)
            return;
        for (let i = 0; i < this.get_Count(); i++)
            callback(this.get_Item(i), i);
    }
    toArray() {
        const arr = [];
        this.forEach(item => arr.push(item));
        return arr;
    }
    toJsonString() {
        return JSON.stringify(this);
    }
    get_Item(index = 0) {
        if (index > this.get_Count() - 1)
            throw new Error(`Index out of range: ${index}`);
        return this.object.method('get_Item').invoke(index);
    }
    set_Item(index = 0, value) {
        return this.object.method('set_Item').invoke(index, value);
    }
    get_Capacity() {
        return this.object.method('get_Capacity').invoke();
    }
    set_Capacity(newCapacity) {
        return this.object.method('set_Capacity').invoke(newCapacity);
    }
    get_Count() {
        return this.object.method('get_Count').invoke();
    }
    RemoveAt(index = 0) {
        return this.object.method('RemoveAt').invoke(index);
    }
    Add(value) {
        return this.object.method('Add').invoke(value);
    }
    Contains(value) {
        return this.object.method('Contains').invoke(value);
    }
    Clear() {
        return this.object.method('Clear').invoke();
    }
    Reverse() {
        return this.object.method('Reverse').invoke();
    }
}
exports.PackList = PackList;
},{}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldsParser = void 0;
const formart_1 = require("../../utils/formart");
const il2cppM_1 = require("./il2cppM");
class FieldsParser {
    mPtr;
    mClass;
    constructor(mPtr, classHandle = 0) {
        if (typeof mPtr === "number") {
            this.mPtr = ptr(mPtr);
        }
        else if (typeof mPtr === "string") {
            if (mPtr.indexOf('0x') == 0)
                this.mPtr = ptr(mPtr);
            else
                this.mPtr = findClass(mPtr);
            if (this.mPtr.isNull())
                throw new Error("FieldsParser : Class not found");
        }
        else if (mPtr instanceof NativePointer)
            this.mPtr = mPtr;
        else
            throw new Error("Input type is not support");
        try {
            this.mClass = new Il2Cpp.Object(this.mPtr).class;
            this.mClass.name;
        }
        catch (error) {
            this.mClass = new Il2Cpp.Class(this.mPtr);
            this.mPtr = ptr(0);
        }
        if (classHandle != 0) {
            let clsPtr;
            if (typeof classHandle === "number") {
                clsPtr = ptr(classHandle);
            }
            else if (typeof classHandle === "string") {
                if (classHandle.indexOf('0x') == 0)
                    clsPtr = ptr(classHandle);
                throw new Error("Input string like '0x...' ");
            }
            else if (typeof classHandle === "object")
                clsPtr = ptr(String(classHandle));
            else
                throw new Error("Input type is not support");
            this.mClass = new Il2Cpp.Class(clsPtr);
        }
    }
    fieldInstance(fieldName) {
        if (this.mPtr.isNull())
            throw new Error("fieldInstance : Instance is null");
        return this.mClass.field(fieldName);
    }
    fieldValue(fieldName) {
        let field = this.fieldInstance(fieldName);
        if (field.isStatic)
            return this.fakeStaticField(field).readPointer();
        return this.mPtr.add(this.fieldOffset(fieldName)).readPointer();
    }
    fieldOffset(fieldName) {
        return this.fieldInstance(fieldName).offset;
    }
    toShow(retB = false) {
        newLine();
        let titile = `Found ${this.mClass.fields.length} fields in class: ${this.mClass.name} (${this.mClass.handle})`;
        this.mClass.fields.length == 0 ? LOGE(titile) : LOGO(titile);
        if (this.mClass.fields.length == 0)
            return newLine();
        LOGO(getLine(50));
        let countNum = -1;
        this.mClass.fields
            .sort((f1, f2) => f1.offset - f2.offset)
            .forEach(field => {
            let index = formart_1.formartClass.alignStr(`[${++countNum}]`, 5);
            let offset = ptr(field.offset);
            let modifier = (0, il2cppM_1.getModifier)(field.flags).trim();
            let classDes = `${field.type.class.name} (${field.type.class.handle})`;
            let fieldName = field.name;
            LOGD(`${index}  ${offset} ${modifier} ${classDes}\t${fieldName}`);
            if (field.isStatic) {
                let tmpOut = this.fakeStaticField(field);
                let realPtr = tmpOut.readPointer();
                LOGZ(`\t${tmpOut}  --->  ${realPtr}  ---> ${field.value}`);
            }
            else if (!this.mPtr.isNull()) {
                let thisHandle = this.mPtr.add(field.offset);
                let thisValue = thisHandle.readPointer();
                let thisString = "--->  ";
                try {
                    let retDes = dealWithSpecialType(field, thisValue);
                    thisString += retDes === "" ? new Il2Cpp.Object(thisValue).toString() : retDes;
                }
                catch {
                    try {
                        thisString += field.value.toString();
                    }
                    catch {
                        thisString = "";
                    }
                }
                LOGZ(`\t${thisHandle}  --->  ${formart_1.formartClass.alignStr(thisValue)}  ${thisString}`);
            }
            else { }
            if (!retB)
                newLine();
        });
        LOGO(getLine(50));
    }
    fakeStaticField(field) {
        let tmpOut = alloc();
        Il2Cpp.Api._fieldGetStaticValue(field.handle, tmpOut);
        return tmpOut;
    }
}
exports.FieldsParser = FieldsParser;
const dealWithSpecialType = (field, thisValue) => {
    switch (field.type.class.name) {
        case "Boolean":
            return thisValue.isNull() ? "FALSE" : "TRUE";
        case "Int32":
            return thisValue.toInt32();
        default:
            return "";
    }
};
globalThis.lfs = (mPtr, classHandle = 0) => new FieldsParser(mPtr, classHandle).toShow();
globalThis.lfp = (mPtr) => {
    let classType = getTypeParent(mPtr);
    classType.reverse().forEach(type => new FieldsParser(mPtr, type.class).toShow(true));
    showTypeParent(mPtr);
};
globalThis.lft = (mPtr, fieldName, classHandle) => new FieldsParser(mPtr, classHandle).fieldInstance(fieldName);
globalThis.lfv = (mPtr, fieldName, classHandle) => new FieldsParser(mPtr, classHandle).fieldValue(fieldName);
globalThis.lfo = (mPtr, fieldName, classHandle) => new FieldsParser(mPtr, classHandle).fieldOffset(fieldName);
globalThis.lfvt = (mPtr, fieldName, classHandle) => {
    try {
        return new FieldsParser(mPtr, classHandle).fieldValue(fieldName);
    }
    catch {
        return new NativePointer(0);
    }
};
},{"../../utils/formart":331,"./il2cppM":18}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./expand/include");
require("./fix/include");
},{"./expand/include":12,"./fix/include":19}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function transfromStrToWithTryCatchFunction(AssemblyName, NameSpaces, functionName, argsCount = -1, retType, argTypes) {
    try {
        return overloadTransfromStrToFunction(AssemblyName, NameSpaces, functionName, argsCount, [], retType, argTypes);
    }
    catch (error) {
        LOGE(error);
        return ptr(0);
    }
}
function transfromStrToFunction(AssemblyName, NameSpaces, functionName, argsCount = -1, retType, argTypes) {
    return overloadTransfromStrToFunction(AssemblyName, NameSpaces, functionName, argsCount, [], retType, argTypes);
}
function overloadTransfromStrToFunction(AssemblyName, NameSpaces, functionName, argsCount = -1, overload, retType, argTypes) {
    let method = findMethod(AssemblyName, NameSpaces, functionName, argsCount, overload, false);
    if (method == undefined)
        throw new Error(`method ${functionName} not found`);
    let exportPointer = method.virtualAddress;
    if (exportPointer == null)
        throw new Error("Could not find method");
    return new NativeFunction(exportPointer, retType, argTypes);
}
Il2Cpp.Api.e = transfromStrToFunction;
Il2Cpp.Api.t = transfromStrToWithTryCatchFunction;
Il2Cpp.Api.o = overloadTransfromStrToFunction;
},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const il2cppM_1 = require("../../../bridge/fix/il2cppM");
const generateClass = (className, classPtr = ptr(0)) => {
    LOGW(getLine(80));
    let clsInstance;
    if (classPtr.isNull()) {
        clsInstance = new Il2Cpp.Class(findClass(className));
    }
    else {
        clsInstance = new Il2Cpp.Class(classPtr);
    }
    let clsName = clsInstance.namespace.replace('.', '_') + "_" + clsInstance.name + "_Impl";
    let clsExtend = clsInstance.parent?.namespace.replace('.', '_') + "_" + clsInstance.parent?.name + "_Impl";
    LOGD(`\nclass ${clsName} extends ${clsExtend} {\n`);
    let fields = clsInstance.fields;
    fields.forEach((field) => {
        let type = repStr(field.type.name.replace('.', '_'));
        LOGD(`\t${field.name}: ${type} = lfv(this.handle, "${field.name}") as unknown as ${type}`);
    });
    LOGD('\tconstructor(handleOrWrapper: NativePointer) {');
    LOGD('\t\t super(handleOrWrapper)');
    LOGD('\t}');
    let methods = clsInstance.methods;
    let names = new Array();
    methods.forEach((method) => {
        let params = method.parameters.map((param) => {
            return param.name + ':' + param.type.name.replace('.', '_');
        }).join(', ');
        let paramNames = method.parameters.map((param) => {
            return param.name;
        }).join(', ');
        let staticStr = method.isStatic ? "static " : "";
        let sameNameFix = names.includes(method.name) ? `_${method.parameterCount}` : "";
        let line1 = `\t${staticStr}${method.name.replace('.', '_')}${sameNameFix}(${params}): ${repStr(method.returnType.name.replace('.', '_'))} {`;
        line1 = repStr(line1);
        let firstParam = method.isStatic ? '' : (method.parameters.length == 0 ? 'this.handle' : 'this.handle , ');
        let methodName = '_' + method.name.replace('.', '_');
        let retValue = `${incorLib(className) ? "mscorlib" : "Il2Cpp"}.Api.${clsInstance.name}.${methodName}(${firstParam}${paramNames})`;
        if (method.returnType.name == "System.String")
            retValue = 'readU16(' + retValue + ')';
        let line2 = `\t\treturn ${retValue}`;
        let line3 = '\t}';
        LOGD(`${line1} \n ${line2} \n ${line3} \n`);
        names.push(method.name);
    });
    LOGD('}\n');
    newLine();
    LOGD(`${incorLib(className) ? "mscorlib" : "Il2Cpp"}.${className} = ${clsName}\n`);
    LOGD('declare global {');
    LOGD(`\tnamespace ${incorLib(className) ? "mscorlib" : "Il2Cpp"}{`);
    LOGD(`\t\tclass ${className} extends ${clsName} { }`);
    LOGD('\t}');
    LOGD('}\n');
    LOGD(`export { ${clsName} } `);
    newLine();
    LOGW(getLine(80));
};
const repStr = (str) => {
    return str;
};
globalThis.incorLib = (name) => {
    let corLib = false;
    Il2Cpp.Domain.assembly('mscorlib').image.classes.forEach((cls) => {
        if (cls.name == name)
            corLib = true;
    });
    return corLib;
};
const generateApi = (className, classPtr = ptr(0)) => {
    LOGW(getLine(80));
    let clsInstance;
    if (classPtr.isNull()) {
        clsInstance = new Il2Cpp.Class(findClass(className));
    }
    else {
        clsInstance = new Il2Cpp.Class(classPtr);
    }
    let clsName = clsInstance.namespace.replace('.', '_') + "_" + clsInstance.name + "_API";
    LOGD(`import { cache } from "decorator-cache-getter"\n`);
    LOGD(`class ${clsName} {`);
    let methods = clsInstance.methods;
    let names = new Array();
    methods.forEach((method) => {
        LOGZ(`\t// ${(0, il2cppM_1.getMethodDesFromMethodInfo)(method)}`);
        let param = '';
        if (!method.isStatic)
            param += `"pointer"`;
        for (let i = 0; i < method.parameters.length; i++) {
            param += `,"pointer"`;
        }
        if (param.startsWith(','))
            param = param.substring(1);
        param = `[${param}]`;
        LOGD(`\t@cache`);
        let disPName = method.name.replace('.', '_');
        if (names.includes(method.name)) {
            let addName = method.parameters.map((param) => param.name).join('_');
            disPName += '_' + addName;
        }
        LOGD(`\tstatic get _${disPName}() {`);
        let retName = method.returnType.name;
        if (retName == "System.Void")
            retName = 'void';
        else
            retName = 'pointer';
        let classNameSpace = method.class.namespace.length == 0 ? "" : `${method.class.namespace}.`;
        if (false && !names.includes(method.name)) {
            LOGD(`\t\treturn Il2Cpp.Api.t("${method.class.image.assembly.name}", "${classNameSpace}${className}", "${method.name}", ${method.parameters.length}, "${retName}", ${param})`);
        }
        else {
            let paramTypes = `[${method.parameters.map((param) => `"${param.type.name}"`).join(',')}]`;
            LOGD(`\t\treturn Il2Cpp.Api.o("${method.class.image.assembly.name}", "${classNameSpace}${className}", "${method.name}", ${method.parameters.length}, ${paramTypes}, "${retName}", ${param})`);
        }
        LOGD('\t}\n');
        names.push(method.name);
    });
    LOGD('}\n');
    LOGE(`Il2Cpp.Api.${className} = ${clsName}\n`);
    LOGD('declare global {');
    LOGD(`\tnamespace ${incorLib(className) ? "mscorlib" : "Il2Cpp"}.Api{`);
    LOGD(`\t\tclass ${className} extends ${clsName} { }`);
    LOGD('\t}');
    LOGD('}\n');
    LOGD(`export { }\n`);
    LOGW(getLine(80));
};
const generateFieldEnum = (className, classPtr = ptr(0)) => {
    LOGW(getLine(80));
    let clsInstance;
    if (classPtr.isNull()) {
        clsInstance = new Il2Cpp.Class(findClass(className));
    }
    else {
        clsInstance = new Il2Cpp.Class(classPtr);
    }
    LOGE(`export enum ${clsInstance.namespace.replace('.', '_')}_${clsInstance.name} {`);
    clsInstance.fields.forEach((field) => {
        Il2Cpp.Api._typeGetTypeEnum;
        LOGD(`\t${field.name} = ${field}`);
    });
    LOGO(`}\n`);
};
globalThis.generateClass = generateClass;
globalThis.generateApi = generateApi;
globalThis.generateFieldEnum = generateFieldEnum;
globalThis.incorLib = incorLib;
},{"../../../bridge/fix/il2cppM":18}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./apiExtends/apiExtends");
require("./apiExtends/generator");
require("./mscorlibObj/include");
require("./thread/include");
},{"./apiExtends/apiExtends":26,"./apiExtends/generator":27,"./mscorlibObj/include":306,"./thread/include":307}],29:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_EventSystems_PointerEventData_API {
    static get _get_pointerEnter() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerEnter", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pointerEnter() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerEnter", 1, ["UnityEngine.GameObject"], "void", ["pointer", "pointer"]);
    }
    static get _get_lastPress() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_lastPress", 0, [], "pointer", ["pointer"]);
    }
    static get _set_lastPress() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_lastPress", 1, ["UnityEngine.GameObject"], "void", ["pointer", "pointer"]);
    }
    static get _get_rawPointerPress() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_rawPointerPress", 0, [], "pointer", ["pointer"]);
    }
    static get _set_rawPointerPress() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_rawPointerPress", 1, ["UnityEngine.GameObject"], "void", ["pointer", "pointer"]);
    }
    static get _get_pointerDrag() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerDrag", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pointerDrag() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerDrag", 1, ["UnityEngine.GameObject"], "void", ["pointer", "pointer"]);
    }
    static get _get_pointerCurrentRaycast() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerCurrentRaycast", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pointerCurrentRaycast() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerCurrentRaycast", 1, ["UnityEngine.EventSystems.RaycastResult"], "void", ["pointer", "pointer"]);
    }
    static get _get_pointerPressRaycast() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerPressRaycast", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pointerPressRaycast() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerPressRaycast", 1, ["UnityEngine.EventSystems.RaycastResult"], "void", ["pointer", "pointer"]);
    }
    static get _get_eligibleForClick() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_eligibleForClick", 0, [], "pointer", ["pointer"]);
    }
    static get _set_eligibleForClick() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_eligibleForClick", 1, ["System.Boolean"], "void", ["pointer", "pointer"]);
    }
    static get _get_pointerId() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerId", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pointerId() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerId", 1, ["System.Int32"], "void", ["pointer", "pointer"]);
    }
    static get _get_position() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_position", 0, [], "pointer", ["pointer"]);
    }
    static get _set_position() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_position", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_delta() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_delta", 0, [], "pointer", ["pointer"]);
    }
    static get _set_delta() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_delta", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_pressPosition() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pressPosition", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pressPosition() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pressPosition", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_worldPosition() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_worldPosition", 0, [], "pointer", ["pointer"]);
    }
    static get _set_worldPosition() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_worldPosition", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_worldNormal() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_worldNormal", 0, [], "pointer", ["pointer"]);
    }
    static get _set_worldNormal() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_worldNormal", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_clickTime() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_clickTime", 0, [], "pointer", ["pointer"]);
    }
    static get _set_clickTime() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_clickTime", 1, ["System.Single"], "void", ["pointer", "pointer"]);
    }
    static get _get_clickCount() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_clickCount", 0, [], "pointer", ["pointer"]);
    }
    static get _set_clickCount() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_clickCount", 1, ["System.Int32"], "void", ["pointer", "pointer"]);
    }
    static get _get_scrollDelta() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_scrollDelta", 0, [], "pointer", ["pointer"]);
    }
    static get _set_scrollDelta() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_scrollDelta", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_useDragThreshold() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_useDragThreshold", 0, [], "pointer", ["pointer"]);
    }
    static get _set_useDragThreshold() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_useDragThreshold", 1, ["System.Boolean"], "void", ["pointer", "pointer"]);
    }
    static get _get_dragging() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_dragging", 0, [], "pointer", ["pointer"]);
    }
    static get _set_dragging() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_dragging", 1, ["System.Boolean"], "void", ["pointer", "pointer"]);
    }
    static get _get_button() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_button", 0, [], "pointer", ["pointer"]);
    }
    static get _set_button() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_button", 1, ["UnityEngine.EventSystems.PointerEventData.InputButton"], "void", ["pointer", "pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", ".ctor", 1, ["UnityEngine.EventSystems.EventSystem"], "void", ["pointer", "pointer"]);
    }
    static get _IsPointerMoving() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "IsPointerMoving", 0, [], "pointer", ["pointer"]);
    }
    static get _IsScrolling() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "IsScrolling", 0, [], "pointer", ["pointer"]);
    }
    static get _get_enterEventCamera() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_enterEventCamera", 0, [], "pointer", ["pointer"]);
    }
    static get _get_pressEventCamera() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pressEventCamera", 0, [], "pointer", ["pointer"]);
    }
    static get _get_pointerPress() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerPress", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pointerPress() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerPress", 1, ["UnityEngine.GameObject"], "void", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.o("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "ToString", 0, [], "pointer", ["pointer"]);
    }
    static get _get_pointerClick() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "get_pointerClick", 0, "pointer", ["pointer"]);
    }
    static get _set_pointerClick() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.PointerEventData", "set_pointerClick", 1, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerEnter", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerEnter", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_lastPress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_lastPress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_rawPointerPress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_rawPointerPress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerDrag", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerDrag", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerCurrentRaycast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerCurrentRaycast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerPressRaycast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerPressRaycast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_eligibleForClick", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_eligibleForClick", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerId", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerId", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_delta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_delta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pressPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pressPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_worldPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_worldPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_worldNormal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_worldNormal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_clickTime", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_clickTime", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_clickCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_clickCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_scrollDelta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_scrollDelta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_useDragThreshold", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_useDragThreshold", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_dragging", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_dragging", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_button", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_button", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_IsPointerMoving", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_IsScrolling", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_enterEventCamera", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pressEventCamera", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerPress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerPress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_get_pointerClick", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_PointerEventData_API, "_set_pointerClick", null);
Il2Cpp.Api.PointerEventData = UnityEngine_EventSystems_PointerEventData_API;
},{"decorator-cache-getter":338}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_EventSystems_PointerEventData_Impl = void 0;
const class_1 = require("../../../Object/Component/Behavior/Camera/class");
const class_2 = require("../../../Object/GameObject/class");
const class_3 = require("../../../ValueType/Vector2/class");
const class_4 = require("../../../ValueType/Vector3/class");
const class_5 = require("../class");
class UnityEngine_EventSystems_PointerEventData_Impl extends class_5.UnityEngine_EventSystems_BaseEventData_Impl {
    hovered = lfv(this.handle, "hovered");
    m_PointerPress = new class_2.GameObjectImpl(lfv(this.handle, "m_PointerPress"));
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_pointerEnter() {
        return new class_2.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_pointerEnter(this.handle));
    }
    set_pointerEnter(value) {
        return Il2Cpp.Api.PointerEventData._set_pointerEnter(this.handle, value.handle);
    }
    get_lastPress() {
        return new class_2.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_lastPress(this.handle));
    }
    set_lastPress(value) {
        return Il2Cpp.Api.PointerEventData._set_lastPress(this.handle, value.handle);
    }
    get_rawPointerPress() {
        return new class_2.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_rawPointerPress(this.handle));
    }
    set_rawPointerPress(value) {
        return Il2Cpp.Api.PointerEventData._set_rawPointerPress(this.handle, value.handle);
    }
    get_pointerDrag() {
        return new class_2.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_pointerDrag(this.handle));
    }
    set_pointerDrag(value) {
        return Il2Cpp.Api.PointerEventData._set_pointerDrag(this.handle, value.handle);
    }
    get_pointerCurrentRaycast() {
        return Il2Cpp.Api.PointerEventData._get_pointerCurrentRaycast(this.handle);
    }
    set_pointerCurrentRaycast(value) {
        return Il2Cpp.Api.PointerEventData._set_pointerCurrentRaycast(this.handle, value);
    }
    get_pointerPressRaycast() {
        return Il2Cpp.Api.PointerEventData._get_pointerPressRaycast(this.handle);
    }
    set_pointerPressRaycast(value) {
        return Il2Cpp.Api.PointerEventData._set_pointerPressRaycast(this.handle, value);
    }
    get_eligibleForClick() {
        return !Il2Cpp.Api.PointerEventData._get_eligibleForClick(this.handle).isNull();
    }
    set_eligibleForClick(value) {
        return Il2Cpp.Api.PointerEventData._set_eligibleForClick(this.handle, value ? ptr(1) : ptr(0));
    }
    get_pointerId() {
        return Il2Cpp.Api.PointerEventData._get_pointerId(this.handle).toInt32();
    }
    set_pointerId(value) {
        return Il2Cpp.Api.PointerEventData._set_pointerId(this.handle, value).toInt32();
    }
    get_position() {
        return new class_3.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_position(this.handle));
    }
    set_position(value) {
        return Il2Cpp.Api.PointerEventData._set_position(this.handle, value.handle);
    }
    get_delta() {
        return new class_3.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_delta(this.handle));
    }
    set_delta(value) {
        return Il2Cpp.Api.PointerEventData._set_delta(this.handle, value.handle);
    }
    get_pressPosition() {
        return new class_3.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_pressPosition(this.handle));
    }
    set_pressPosition(value) {
        return Il2Cpp.Api.PointerEventData._set_pressPosition(this.handle, value.handle);
    }
    get_worldPosition() {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.PointerEventData._get_worldPosition(this.handle));
    }
    set_worldPosition(value) {
        return Il2Cpp.Api.PointerEventData._set_worldPosition(this.handle, value.handle);
    }
    get_worldNormal() {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.PointerEventData._get_worldNormal(this.handle));
    }
    set_worldNormal(value) {
        return Il2Cpp.Api.PointerEventData._set_worldNormal(this.handle, value.handle);
    }
    get_clickTime() {
        return Il2Cpp.Api.PointerEventData._get_clickTime(this.handle);
    }
    set_clickTime(value) {
        return Il2Cpp.Api.PointerEventData._set_clickTime(this.handle, value);
    }
    get_clickCount() {
        return Il2Cpp.Api.PointerEventData._get_clickCount(this.handle);
    }
    set_clickCount(value) {
        return Il2Cpp.Api.PointerEventData._set_clickCount(this.handle, value);
    }
    get_scrollDelta() {
        return new class_3.UnityEngine_Vector2_Impl(Il2Cpp.Api.PointerEventData._get_scrollDelta(this.handle));
    }
    set_scrollDelta(value) {
        return Il2Cpp.Api.PointerEventData._set_scrollDelta(this.handle, value.handle);
    }
    get_useDragThreshold() {
        return !Il2Cpp.Api.PointerEventData._get_useDragThreshold(this.handle).isNull();
    }
    set_useDragThreshold(value) {
        return Il2Cpp.Api.PointerEventData._set_useDragThreshold(this.handle, value ? ptr(1) : ptr(0));
    }
    get_dragging() {
        return !Il2Cpp.Api.PointerEventData._get_dragging(this.handle).isNull();
    }
    set_dragging(value) {
        return Il2Cpp.Api.PointerEventData._set_dragging(this.handle, value ? ptr(1) : ptr(0));
    }
    get_button() {
        return Il2Cpp.Api.PointerEventData._get_button(this.handle);
    }
    set_button(value) {
        return Il2Cpp.Api.PointerEventData._set_button(this.handle, value);
    }
    __ctor(eventSystem) {
        return Il2Cpp.Api.PointerEventData.__ctor(this.handle, eventSystem);
    }
    IsPointerMoving() {
        return !Il2Cpp.Api.PointerEventData._IsPointerMoving(this.handle).isNull();
    }
    IsScrolling() {
        return !Il2Cpp.Api.PointerEventData._IsScrolling(this.handle).isNull();
    }
    get_enterEventCamera() {
        return new class_1.UnityEngine_Camera_Impl(Il2Cpp.Api.PointerEventData._get_enterEventCamera(this.handle));
    }
    get_pressEventCamera() {
        return new class_1.UnityEngine_Camera_Impl(Il2Cpp.Api.PointerEventData._get_pressEventCamera(this.handle));
    }
    get_pointerPress() {
        return new class_2.GameObjectImpl(Il2Cpp.Api.PointerEventData._get_pointerPress(this.handle));
    }
    set_pointerPress(value) {
        return Il2Cpp.Api.PointerEventData._set_pointerPress(this.handle, value.handle);
    }
    ToString() {
        return readU16(Il2Cpp.Api.PointerEventData._ToString(this.handle));
    }
}
exports.UnityEngine_EventSystems_PointerEventData_Impl = UnityEngine_EventSystems_PointerEventData_Impl;
Il2Cpp.PointerEventData = UnityEngine_EventSystems_PointerEventData_Impl;
},{"../../../Object/Component/Behavior/Camera/class":95,"../../../Object/GameObject/class":159,"../../../ValueType/Vector2/class":282,"../../../ValueType/Vector3/class":286,"../class":36}],31:[function(require,module,exports){
"use strict";
var UnityEngine_EventSystems_PointerEventData_InputButton;
(function (UnityEngine_EventSystems_PointerEventData_InputButton) {
    UnityEngine_EventSystems_PointerEventData_InputButton[UnityEngine_EventSystems_PointerEventData_InputButton["Left"] = 0] = "Left";
    UnityEngine_EventSystems_PointerEventData_InputButton[UnityEngine_EventSystems_PointerEventData_InputButton["Middle"] = 2] = "Middle";
    UnityEngine_EventSystems_PointerEventData_InputButton[UnityEngine_EventSystems_PointerEventData_InputButton["Right"] = 1] = "Right";
})(UnityEngine_EventSystems_PointerEventData_InputButton || (UnityEngine_EventSystems_PointerEventData_InputButton = {}));
},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.showEventData = void 0;
const class_1 = require("./class");
const showEventData = (eventData) => {
    LOGO(`${getLine(15)} EventData ${getLine(15)}`);
    let eventDataPack = new class_1.UnityEngine_EventSystems_PointerEventData_Impl(eventData);
    let click_vector2 = allocVector();
    callFunction(find_method("UnityEngine.UI", "PointerEventData", "get_position", 0), click_vector2, eventData);
    LOGD("ClickPositon\t--->\t" + click_vector2.readFloat() + "\t" + click_vector2.add(p_size).readFloat());
    LOGD("clickTime\t--->\t" + eventDataPack.get_clickTime());
    LOGD("clickCount\t--->\t" + eventDataPack.get_clickCount());
    let delta_vector2 = allocVector();
    callFunction(find_method("UnityEngine.UI", "PointerEventData", "get_delta", 0), allocVector(), eventData);
    LOGD("delta\t\t--->\t" + delta_vector2.readFloat() + "\t" + delta_vector2.add(p_size).readFloat());
};
exports.showEventData = showEventData;
globalThis.showEventData = showEventData;
},{"./class":30}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./interface");
require("./export");
require("./enum");
},{"./api":29,"./class":30,"./enum":31,"./export":32,"./interface":34}],34:[function(require,module,exports){
"use strict";
},{}],35:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_EventSystems_BaseEventData_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", ".ctor", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_currentInputModule() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", "get_currentInputModule", 0, "pointer", ["pointer"]);
    }
    static get _get_selectedObject() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", "get_selectedObject", 0, "pointer", ["pointer"]);
    }
    static get _set_selectedObject() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.BaseEventData", "set_selectedObject", 1, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_BaseEventData_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_BaseEventData_API, "_get_currentInputModule", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_BaseEventData_API, "_get_selectedObject", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_BaseEventData_API, "_set_selectedObject", null);
Il2Cpp.Api.BaseEventData = UnityEngine_EventSystems_BaseEventData_API;
},{"decorator-cache-getter":338}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_EventSystems_BaseEventData_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_EventSystems_BaseEventData_Impl extends class_1.UnityEngine_EventSystems_AbstractEventData_Impl {
    m_EventSystem = lfv(this.handle, "m_EventSystem");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    __ctor(eventSystem) {
        return Il2Cpp.Api.BaseEventData.__ctor(this.handle, eventSystem);
    }
    get_currentInputModule() {
        return Il2Cpp.Api.BaseEventData._get_currentInputModule(this.handle);
    }
    get_selectedObject() {
        return Il2Cpp.Api.BaseEventData._get_selectedObject(this.handle);
    }
    set_selectedObject(value) {
        return Il2Cpp.Api.BaseEventData._set_selectedObject(this.handle, value);
    }
}
exports.UnityEngine_EventSystems_BaseEventData_Impl = UnityEngine_EventSystems_BaseEventData_Impl;
Il2Cpp.BaseEventData = UnityEngine_EventSystems_BaseEventData_Impl;
},{"../class":40}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./PointerEventData/include");
require("./api");
require("./class");
require("./interface");
},{"./PointerEventData/include":33,"./api":35,"./class":36,"./interface":38}],38:[function(require,module,exports){
"use strict";
},{}],39:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_EventSystems_AbstractEventData_API {
    static get _Reset() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", "Reset", 0, "void", ["pointer"]);
    }
    static get _Use() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", "Use", 0, "void", ["pointer"]);
    }
    static get _get_used() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", "get_used", 0, "pointer", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.EventSystems.AbstractEventData", ".ctor", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_AbstractEventData_API, "_Reset", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_AbstractEventData_API, "_Use", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_AbstractEventData_API, "_get_used", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_EventSystems_AbstractEventData_API, "__ctor", null);
Il2Cpp.Api.AbstractEventData = UnityEngine_EventSystems_AbstractEventData_API;
},{"decorator-cache-getter":338}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_EventSystems_AbstractEventData_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_EventSystems_AbstractEventData_Impl extends class_1.mscorlib_System_Object_impl {
    m_Used = lfv(this.handle, "m_Used");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    Reset() {
        return Il2Cpp.Api.AbstractEventData._Reset(this.handle);
    }
    Use() {
        return Il2Cpp.Api.AbstractEventData._Use(this.handle);
    }
    get_used() {
        return Il2Cpp.Api.AbstractEventData._get_used(this.handle);
    }
    _ctor() {
        return Il2Cpp.Api.AbstractEventData.__ctor(this.handle);
    }
}
exports.UnityEngine_EventSystems_AbstractEventData_Impl = UnityEngine_EventSystems_AbstractEventData_Impl;
Il2Cpp.AbstractEventData = UnityEngine_EventSystems_AbstractEventData_Impl;
},{"../class":304}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./BaseEventData/include");
require("./api");
require("./class");
require("./interface");
},{"./BaseEventData/include":37,"./api":39,"./class":40,"./interface":42}],42:[function(require,module,exports){
"use strict";
},{}],43:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class ApplicationApi {
    static get _CallLogCallback() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "CallLogCallback", 4, "void", [
            "pointer", "pointer", "pointer", "bool"
        ]);
    }
    static get _CallLowMemory() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "CallLowMemory", 0, "void", []);
    }
    static get _GetStackTraceLogType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "GetStackTraceLogType", 0, "pointer", []);
    }
    static get _LoadLevel() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "LoadLevel", 1, "void", ["pointer"]);
    }
    static get _OpenURL() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "OpenURL", 1, "void", ["pointer"]);
    }
    static get _Quit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Quit", 0, "void", []);
    }
    static get _Quit_1() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Quit", 1, "void", ["int32"]);
    }
    static get _RegisterLogCallback() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "RegisterLogCallback", 1, "void", ["pointer"]);
    }
    static get _get_cloudProjectId() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_cloudProjectId", 0, "pointer", []);
    }
    static get _get_dataPath() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_dataPath", 0, "pointer", []);
    }
    static get _get_identifier() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_identifier", 0, "pointer", []);
    }
    static get _get_internetReachability() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_internetReachability", 0, "pointer", []);
    }
    static get _get_isEditor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_isEditor", 0, "bool", []);
    }
    static get _get_isMobilePlatform() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_isMobilePlatform", 0, "bool", []);
    }
    static get _get_isPlaying() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_isPlaying", 0, "bool", []);
    }
    static get _get_persistentDataPath() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_persistentDataPath", 0, "pointer", []);
    }
    static get _get_temporaryCachePath() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_temporaryCachePath", 0, "pointer", []);
    }
    static get _get_version() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_version", 0, "pointer", []);
    }
    static get _get_productName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_productName", 0, "pointer", []);
    }
    static get _get_platform() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_platform", 0, "pointer", []);
    }
    static get _set_runInBackground() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "set_runInBackground", 1, "void", ["bool"]);
    }
    static get _get_streamingAssetsPath() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_streamingAssetsPath", 0, "pointer", []);
    }
    static get _set_targetFrameRate() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "set_targetFrameRate", 1, "void", ["int32"]);
    }
    static get _get_unityVersion() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_unityVersion", 0, "pointer", []);
    }
    static get _add_logMessageReceived() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "add_logMessageReceived", 1, "void", ["pointer"]);
    }
    static get _SetLogCallbackDefined() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "SetLogCallbackDefined", 1, "void", ["bool"]);
    }
    static get _get_systemLanguage() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_systemLanguage", 0, "pointer", []);
    }
    static get _Internal_ApplicationWantsToQuit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Internal_ApplicationWantsToQuit", 0, "bool", []);
    }
    static get _Internal_ApplicationQuit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Internal_ApplicationQuit", 0, "void", []);
    }
    static get _Internal_ApplicationUnload() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "Internal_ApplicationUnload", 0, "void", []);
    }
    static get _InvokeOnBeforeRender() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "InvokeOnBeforeRender", 0, "void", []);
    }
    static get _InvokeFocusChanged() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "InvokeFocusChanged", 0, "void", ["bool"]);
    }
    static get _InvokeDeepLinkActivated() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "InvokeDeepLinkActivated", 1, "void", ["pointer"]);
    }
    static get _get_companyName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "get_companyName", 0, "pointer", []);
    }
    static get _remove_logMessageReceived() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "remove_logMessageReceived", 1, "void", ["pointer"]);
    }
    static get _add_logMessageReceivedThreaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "add_logMessageReceivedThreaded", 1, "void", ["pointer"]);
    }
    static get _remove_logMessageReceivedThreaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Application", "remove_logMessageReceivedThreaded", 1, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_CallLogCallback", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_CallLowMemory", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_GetStackTraceLogType", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_LoadLevel", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_OpenURL", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_Quit", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_Quit_1", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_RegisterLogCallback", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_cloudProjectId", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_dataPath", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_identifier", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_internetReachability", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_isEditor", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_isMobilePlatform", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_isPlaying", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_persistentDataPath", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_temporaryCachePath", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_version", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_productName", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_platform", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_set_runInBackground", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_streamingAssetsPath", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_set_targetFrameRate", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_unityVersion", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_add_logMessageReceived", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_SetLogCallbackDefined", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_systemLanguage", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_Internal_ApplicationWantsToQuit", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_Internal_ApplicationQuit", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_Internal_ApplicationUnload", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_InvokeOnBeforeRender", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_InvokeFocusChanged", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_InvokeDeepLinkActivated", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_get_companyName", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_remove_logMessageReceived", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_add_logMessageReceivedThreaded", null);
__decorate([
    decorator_cache_getter_1.cache
], ApplicationApi, "_remove_logMessageReceivedThreaded", null);
Il2Cpp.Api.Application = ApplicationApi;
},{"decorator-cache-getter":338}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Application_impl = void 0;
const class_1 = require("../Type/class");
class UnityEngine_Application_impl extends class_1.mscorlib_System_Type_impl {
    deepLinkActivated = lfv(this.handle, "deepLinkActivated");
    focusChanged = lfv(this.handle, "focusChanged");
    LowMemoryCallback = lfv(this.handle, "LowMemoryCallback");
    quitting = lfv(this.handle, "quitting");
    s_LogCallbackHandler = lfv(this.handle, "s_LogCallbackHandler");
    s_LogCallbackHandlerThreaded = lfv(this.handle, "s_LogCallbackHandlerThreaded");
    s_RegisterLogCallbackDeprecated = lfv(this.handle, "s_RegisterLogCallbackDeprecated");
    wantsToQuit = lfv(this.handle, "wantsToQuit");
    static get Quit_1() {
        return Il2Cpp.Api.Application._Quit_1();
    }
    static get Quit() {
        return Il2Cpp.Api.Application._Quit();
    }
    static get isPlaying() {
        return Il2Cpp.Api.Application._get_isPlaying();
    }
    static get dataPath() {
        return readU16(Il2Cpp.Api.Application._get_dataPath());
    }
    static get streamingAssetsPath() {
        return readU16(Il2Cpp.Api.Application._get_streamingAssetsPath());
    }
    static get persistentDataPath() {
        return readU16(Il2Cpp.Api.Application._get_persistentDataPath());
    }
    static get temporaryCachePath() {
        return readU16(Il2Cpp.Api.Application._get_temporaryCachePath());
    }
    static get unityVersion() {
        return readU16(Il2Cpp.Api.Application._get_unityVersion());
    }
    static get version() {
        return readU16(Il2Cpp.Api.Application._get_version());
    }
    static get identifier() {
        return readU16(Il2Cpp.Api.Application._get_identifier());
    }
    static get productName() {
        return readU16(Il2Cpp.Api.Application._get_productName());
    }
    static get companyName() {
        return readU16(Il2Cpp.Api.Application._get_companyName());
    }
    static get cloudProjectId() {
        return readU16(Il2Cpp.Api.Application._get_cloudProjectId());
    }
    static get_internetReachability() {
        return Il2Cpp.Api.Application._get_internetReachability();
    }
    static OpenURL(url) {
        return Il2Cpp.Api.Application._OpenURL(allocUStr(url));
    }
    static targetFrameRate(value) {
        return Il2Cpp.Api.Application._set_targetFrameRate(value);
    }
    static SetLogCallbackDefined(defined) {
        return Il2Cpp.Api.Application._SetLogCallbackDefined(defined);
    }
    static GetStackTraceLogType(logType) {
        return Il2Cpp.Api.Application._GetStackTraceLogType(logType);
    }
    static get platform() {
        return Il2Cpp.Api.Application._get_platform();
    }
    static get systemLanguage() {
        return Il2Cpp.Api.Application._get_platform();
    }
    static get internetReachability() {
        return Il2Cpp.Api.Application._get_internetReachability();
    }
    static CallLowMemory() {
        return Il2Cpp.Api.Application._CallLowMemory();
    }
    static add_logMessageReceived(value) {
        return Il2Cpp.Api.Application._add_logMessageReceived(value);
    }
    static remove_logMessageReceived(value) {
        return Il2Cpp.Api.Application._remove_logMessageReceived(value);
    }
    static add_logMessageReceivedThreaded(value) {
        return Il2Cpp.Api.Application._add_logMessageReceivedThreaded(value);
    }
    static remove_logMessageReceivedThreaded(value) {
        return Il2Cpp.Api.Application._remove_logMessageReceivedThreaded(value);
    }
    static CallLogCallback(logString, stackTrace, type, invokedOnMainThread) {
        return Il2Cpp.Api.Application._CallLogCallback(allocUStr(logString), allocUStr(stackTrace), type, invokedOnMainThread);
    }
    static Internal_ApplicationWantsToQuit() {
        return Il2Cpp.Api.Application._Internal_ApplicationWantsToQuit();
    }
    static Internal_ApplicationQuit() {
        return Il2Cpp.Api.Application._Internal_ApplicationQuit();
    }
    static Internal_ApplicationUnload() {
        return Il2Cpp.Api.Application._Internal_ApplicationUnload();
    }
    static InvokeOnBeforeRender() {
        return Il2Cpp.Api.Application._InvokeOnBeforeRender();
    }
    static InvokeFocusChanged(focus) {
        return Il2Cpp.Api.Application._InvokeFocusChanged(focus);
    }
    static InvokeDeepLinkActivated(url) {
        return Il2Cpp.Api.Application._InvokeDeepLinkActivated(allocUStr(url));
    }
    static RegisterLogCallback_1(handler) {
        return Il2Cpp.Api.Application._RegisterLogCallback(handler);
    }
    static RegisterLogCallback_2(handler, threaded) {
        return Il2Cpp.Api.Application._RegisterLogCallback(handler, threaded);
    }
    static get isEditor() {
        return Il2Cpp.Api.Application._get_isEditor();
    }
    static GetStackTraceLogType_1(logType) {
        return Il2Cpp.Api.Application._GetStackTraceLogType(logType);
    }
}
exports.UnityEngine_Application_impl = UnityEngine_Application_impl;
Il2Cpp.Application = UnityEngine_Application_impl;
},{"../Type/class":216}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemLanguage = exports.RuntimePlatform = exports.LogType = exports.StackTraceLogType = exports.NetworkReachability = void 0;
var NetworkReachability;
(function (NetworkReachability) {
    NetworkReachability[NetworkReachability["NotReachable"] = 0] = "NotReachable";
    NetworkReachability[NetworkReachability["ReachableViaCarrierDataNetwork"] = 1] = "ReachableViaCarrierDataNetwork";
    NetworkReachability[NetworkReachability["ReachableViaLocalAreaNetwork"] = 2] = "ReachableViaLocalAreaNetwork";
})(NetworkReachability = exports.NetworkReachability || (exports.NetworkReachability = {}));
var StackTraceLogType;
(function (StackTraceLogType) {
    StackTraceLogType[StackTraceLogType["None"] = 0] = "None";
    StackTraceLogType[StackTraceLogType["ScriptOnly"] = 1] = "ScriptOnly";
    StackTraceLogType[StackTraceLogType["Full"] = 2] = "Full";
})(StackTraceLogType = exports.StackTraceLogType || (exports.StackTraceLogType = {}));
var LogType;
(function (LogType) {
    LogType[LogType["Error"] = 0] = "Error";
    LogType[LogType["Assert"] = 1] = "Assert";
    LogType[LogType["Warning"] = 2] = "Warning";
    LogType[LogType["Log"] = 3] = "Log";
    LogType[LogType["Exception"] = 4] = "Exception";
})(LogType = exports.LogType || (exports.LogType = {}));
var RuntimePlatform;
(function (RuntimePlatform) {
    RuntimePlatform[RuntimePlatform["Android"] = 11] = "Android";
    RuntimePlatform[RuntimePlatform["BlackBerryPlayer"] = 22] = "BlackBerryPlayer";
    RuntimePlatform[RuntimePlatform["CloudRendering"] = 35] = "CloudRendering";
    RuntimePlatform[RuntimePlatform["FlashPlayer"] = 15] = "FlashPlayer";
    RuntimePlatform[RuntimePlatform["GameCoreScarlett"] = 36] = "GameCoreScarlett";
    RuntimePlatform[RuntimePlatform["GameCoreXboxOne"] = 37] = "GameCoreXboxOne";
    RuntimePlatform[RuntimePlatform["GameCoreXboxSeries"] = 36] = "GameCoreXboxSeries";
    RuntimePlatform[RuntimePlatform["IPhonePlayer"] = 8] = "IPhonePlayer";
    RuntimePlatform[RuntimePlatform["LinuxEditor"] = 16] = "LinuxEditor";
    RuntimePlatform[RuntimePlatform["LinuxPlayer"] = 13] = "LinuxPlayer";
    RuntimePlatform[RuntimePlatform["Lumin"] = 33] = "Lumin";
    RuntimePlatform[RuntimePlatform["MetroPlayerARM"] = 20] = "MetroPlayerARM";
    RuntimePlatform[RuntimePlatform["MetroPlayerX64"] = 19] = "MetroPlayerX64";
    RuntimePlatform[RuntimePlatform["MetroPlayerX86"] = 18] = "MetroPlayerX86";
    RuntimePlatform[RuntimePlatform["NaCl"] = 12] = "NaCl";
    RuntimePlatform[RuntimePlatform["OSXDashboardPlayer"] = 4] = "OSXDashboardPlayer";
    RuntimePlatform[RuntimePlatform["OSXEditor"] = 0] = "OSXEditor";
    RuntimePlatform[RuntimePlatform["OSXPlayer"] = 1] = "OSXPlayer";
    RuntimePlatform[RuntimePlatform["OSXWebPlayer"] = 3] = "OSXWebPlayer";
    RuntimePlatform[RuntimePlatform["PS3"] = 9] = "PS3";
    RuntimePlatform[RuntimePlatform["PS4"] = 25] = "PS4";
    RuntimePlatform[RuntimePlatform["PS5"] = 38] = "PS5";
    RuntimePlatform[RuntimePlatform["PSM"] = 26] = "PSM";
    RuntimePlatform[RuntimePlatform["PSP2"] = 24] = "PSP2";
    RuntimePlatform[RuntimePlatform["SamsungTVPlayer"] = 28] = "SamsungTVPlayer";
    RuntimePlatform[RuntimePlatform["Stadia"] = 34] = "Stadia";
    RuntimePlatform[RuntimePlatform["Switch"] = 32] = "Switch";
    RuntimePlatform[RuntimePlatform["TizenPlayer"] = 23] = "TizenPlayer";
    RuntimePlatform[RuntimePlatform["tvOS"] = 31] = "tvOS";
    RuntimePlatform[RuntimePlatform["WebGLPlayer"] = 17] = "WebGLPlayer";
    RuntimePlatform[RuntimePlatform["WiiU"] = 30] = "WiiU";
    RuntimePlatform[RuntimePlatform["WindowsEditor"] = 7] = "WindowsEditor";
    RuntimePlatform[RuntimePlatform["WindowsPlayer"] = 2] = "WindowsPlayer";
    RuntimePlatform[RuntimePlatform["WindowsWebPlayer"] = 5] = "WindowsWebPlayer";
    RuntimePlatform[RuntimePlatform["WP8Player"] = 21] = "WP8Player";
    RuntimePlatform[RuntimePlatform["WSAPlayerARM"] = 20] = "WSAPlayerARM";
    RuntimePlatform[RuntimePlatform["WSAPlayerX64"] = 19] = "WSAPlayerX64";
    RuntimePlatform[RuntimePlatform["WSAPlayerX86"] = 18] = "WSAPlayerX86";
    RuntimePlatform[RuntimePlatform["XBOX360"] = 10] = "XBOX360";
    RuntimePlatform[RuntimePlatform["XboxOne"] = 27] = "XboxOne";
})(RuntimePlatform = exports.RuntimePlatform || (exports.RuntimePlatform = {}));
var SystemLanguage;
(function (SystemLanguage) {
    SystemLanguage[SystemLanguage["Afrikaans"] = 0] = "Afrikaans";
    SystemLanguage[SystemLanguage["Arabic"] = 1] = "Arabic";
    SystemLanguage[SystemLanguage["Basque"] = 2] = "Basque";
    SystemLanguage[SystemLanguage["Belarusian"] = 3] = "Belarusian";
    SystemLanguage[SystemLanguage["Bulgarian"] = 4] = "Bulgarian";
    SystemLanguage[SystemLanguage["Catalan"] = 5] = "Catalan";
    SystemLanguage[SystemLanguage["Chinese"] = 6] = "Chinese";
    SystemLanguage[SystemLanguage["ChineseSimplified"] = 40] = "ChineseSimplified";
    SystemLanguage[SystemLanguage["ChineseTraditional"] = 41] = "ChineseTraditional";
    SystemLanguage[SystemLanguage["Czech"] = 7] = "Czech";
    SystemLanguage[SystemLanguage["Danish"] = 8] = "Danish";
    SystemLanguage[SystemLanguage["Dutch"] = 9] = "Dutch";
    SystemLanguage[SystemLanguage["English"] = 10] = "English";
    SystemLanguage[SystemLanguage["Estonian"] = 11] = "Estonian";
    SystemLanguage[SystemLanguage["Faroese"] = 12] = "Faroese";
    SystemLanguage[SystemLanguage["Finnish"] = 13] = "Finnish";
    SystemLanguage[SystemLanguage["French"] = 14] = "French";
    SystemLanguage[SystemLanguage["German"] = 15] = "German";
    SystemLanguage[SystemLanguage["Greek"] = 16] = "Greek";
    SystemLanguage[SystemLanguage["Hebrew"] = 17] = "Hebrew";
    SystemLanguage[SystemLanguage["Hungarian"] = 18] = "Hungarian";
    SystemLanguage[SystemLanguage["Icelandic"] = 19] = "Icelandic";
    SystemLanguage[SystemLanguage["Indonesian"] = 20] = "Indonesian";
    SystemLanguage[SystemLanguage["Italian"] = 21] = "Italian";
    SystemLanguage[SystemLanguage["Japanese"] = 22] = "Japanese";
    SystemLanguage[SystemLanguage["Korean"] = 23] = "Korean";
    SystemLanguage[SystemLanguage["Latvian"] = 24] = "Latvian";
    SystemLanguage[SystemLanguage["Lithuanian"] = 25] = "Lithuanian";
    SystemLanguage[SystemLanguage["Norwegian"] = 26] = "Norwegian";
    SystemLanguage[SystemLanguage["Polish"] = 27] = "Polish";
    SystemLanguage[SystemLanguage["Portuguese"] = 28] = "Portuguese";
    SystemLanguage[SystemLanguage["Romanian"] = 29] = "Romanian";
    SystemLanguage[SystemLanguage["Russian"] = 30] = "Russian";
    SystemLanguage[SystemLanguage["SerboCroatian"] = 31] = "SerboCroatian";
    SystemLanguage[SystemLanguage["Slovak"] = 32] = "Slovak";
    SystemLanguage[SystemLanguage["Slovenian"] = 33] = "Slovenian";
    SystemLanguage[SystemLanguage["Spanish"] = 34] = "Spanish";
    SystemLanguage[SystemLanguage["Swedish"] = 35] = "Swedish";
    SystemLanguage[SystemLanguage["Thai"] = 36] = "Thai";
    SystemLanguage[SystemLanguage["Turkish"] = 37] = "Turkish";
    SystemLanguage[SystemLanguage["Ukrainian"] = 38] = "Ukrainian";
    SystemLanguage[SystemLanguage["Unknown"] = 42] = "Unknown";
    SystemLanguage[SystemLanguage["Vietnamese"] = 39] = "Vietnamese";
})(SystemLanguage = exports.SystemLanguage || (exports.SystemLanguage = {}));
},{}],46:[function(require,module,exports){
"use strict";
},{}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./enum");
require("./api");
require("./class");
require("./export");
},{"./api":43,"./class":44,"./enum":45,"./export":46}],48:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Debug_API {
    static get _get_unityLogger() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "get_unityLogger", 0, "pointer", []);
    }
    static get _DrawLine() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawLine", 5, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _DrawRay() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawRay", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _DrawRay_start_dir_color_duration_depthTest() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawRay", 5, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.Color", "System.Single", "System.Boolean"], "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Log() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "Log", 1, ["System.Object"], "void", ["pointer"]);
    }
    static get _Log_message_context() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "Log", 2, ["System.Object", "UnityEngine.Object"], "void", ["pointer", "pointer"]);
    }
    static get _LogError() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "LogError", 1, "void", ["pointer"]);
    }
    static get _LogError_message_context() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogError", 2, ["System.Object", "UnityEngine.Object"], "void", ["pointer", "pointer"]);
    }
    static get _LogErrorFormat() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogErrorFormat", 2, ["System.String", "System.Object[]"], "void", ["pointer", "pointer"]);
    }
    static get _LogErrorFormat_context_format_args() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogErrorFormat", 3, ["UnityEngine.Object", "System.String", "System.Object[]"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _LogException() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogException", 1, ["System.Exception"], "void", ["pointer"]);
    }
    static get _LogException_exception_context() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogException", 2, ["System.Exception", "UnityEngine.Object"], "void", ["pointer", "pointer"]);
    }
    static get _LogWarning() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarning", 1, ["System.Object"], "void", ["pointer"]);
    }
    static get _LogWarning_message_context() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarning", 2, ["System.Object", "UnityEngine.Object"], "void", ["pointer", "pointer"]);
    }
    static get _LogWarningFormat() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarningFormat", 2, ["System.String", "System.Object[]"], "void", ["pointer", "pointer"]);
    }
    static get _LogWarningFormat_context_format_args() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Debug", "LogWarningFormat", 3, ["UnityEngine.Object", "System.String", "System.Object[]"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _CallOverridenDebugHandler() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "CallOverridenDebugHandler", 2, "pointer", ["pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", ".cctor", 0, "void", []);
    }
    static get _DrawLine_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Debug", "DrawLine_Injected", 5, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_get_unityLogger", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_DrawLine", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_DrawRay", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_DrawRay_start_dir_color_duration_depthTest", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_Log", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_Log_message_context", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogError", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogError_message_context", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogErrorFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogErrorFormat_context_format_args", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogException", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogException_exception_context", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogWarning", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogWarning_message_context", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogWarningFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_LogWarningFormat_context_format_args", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_CallOverridenDebugHandler", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Debug_API, "_DrawLine_Injected", null);
Il2Cpp.Api.Debug = UnityEngine_Debug_API;
},{"decorator-cache-getter":338}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Debug_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Debug_Impl extends class_1.mscorlib_System_Object_impl {
    s_Logger = lfv(this.handle, "s_Logger");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static get_unityLogger() {
        return Il2Cpp.Api.Debug._get_unityLogger();
    }
    static DrawLine(start, end, color, duration, depthTest) {
        return Il2Cpp.Api.Debug._DrawLine(start, end, color, duration, depthTest);
    }
    static DrawRay(start, dir, color) {
        return Il2Cpp.Api.Debug._DrawRay(start, dir, color);
    }
    static DrawRay_5(start, dir, color, duration, depthTest) {
        return Il2Cpp.Api.Debug._DrawRay(start, dir, color, duration, depthTest);
    }
    static Log(message) {
        return Il2Cpp.Api.Debug._Log(message);
    }
    static Log_2(message, context) {
        return Il2Cpp.Api.Debug._Log(message, context);
    }
    static LogError(message) {
        return Il2Cpp.Api.Debug._LogError(message);
    }
    static LogError_2(message, context) {
        return Il2Cpp.Api.Debug._LogError(message, context);
    }
    static LogErrorFormat(format, args) {
        return Il2Cpp.Api.Debug._LogErrorFormat(allocUStr(format), args);
    }
    static LogErrorFormat_3(context, format, args) {
        return Il2Cpp.Api.Debug._LogErrorFormat(context, allocUStr(format), args);
    }
    static LogException(exception) {
        return Il2Cpp.Api.Debug._LogException(exception);
    }
    static LogException_2(exception, context) {
        return Il2Cpp.Api.Debug._LogException(exception, context);
    }
    static LogWarning(message) {
        return Il2Cpp.Api.Debug._LogWarning(message);
    }
    static LogWarning_2(message, context) {
        return Il2Cpp.Api.Debug._LogWarning(message, context);
    }
    static LogWarningFormat(format, args) {
        return Il2Cpp.Api.Debug._LogWarningFormat(allocUStr(format), args);
    }
    static LogWarningFormat_3(context, format, args) {
        return Il2Cpp.Api.Debug._LogWarningFormat(context, allocUStr(format), args);
    }
    static CallOverridenDebugHandler(exception, obj) {
        return Il2Cpp.Api.Debug._CallOverridenDebugHandler(exception, obj);
    }
    static _cctor() {
        return Il2Cpp.Api.Debug.__cctor();
    }
    static DrawLine_Injected(start, end, color, duration, depthTest) {
        return Il2Cpp.Api.Debug._DrawLine_Injected(start, end, color, duration, depthTest);
    }
}
exports.UnityEngine_Debug_Impl = UnityEngine_Debug_Impl;
Il2Cpp.Debug = UnityEngine_Debug_Impl;
},{"../class":304}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HookDebugLog = void 0;
const HookDebugLog = () => {
    let addr_Log = find_method("UnityEngine.CoreModule", "Logger", "Log", 2, true);
    LOGD("[*] Hook : UnityEngine.CoreModule.Logger.Log : " + addr_Log);
    A(addr_Log, (args, ctx) => {
        LOGG(`\n[*] Logger.LOG('${args[1]}' , '${readU16(args[2])}')  <---  LR : ${checkCtx(ctx, "LR")}`);
    });
    let addr_LogException = Il2Cpp.Api.Debug._LogException;
    LOGD("[*] Hook : UnityEngine.CoreModule.Debug.LogException : " + addr_LogException);
    A(addr_LogException, (args, ctx) => {
        let retStr = callFunction(find_method("mscorlib", "Exception", "ToString", 0, true), args[0]);
        LOGG(`\n[*] Logger.LOG('${readU16(retStr)}')  <---  LR : ${checkCtx(ctx, "LR")}`);
    });
};
exports.HookDebugLog = HookDebugLog;
globalThis.HookDebugLog = HookDebugLog;
},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":48,"./class":49,"./export":50}],52:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Events_UnityAction_API {
    static get __ctor() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", ".ctor", 2, ["System.Object", "System.IntPtr"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Invoke() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", "Invoke", 0, [], "void", ["pointer"]);
    }
    static get _BeginInvoke() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", "BeginInvoke", 2, ["System.AsyncCallback", "System.Object"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _EndInvoke() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityAction", "EndInvoke", 1, ["System.IAsyncResult"], "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityAction_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityAction_API, "_Invoke", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityAction_API, "_BeginInvoke", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityAction_API, "_EndInvoke", null);
Il2Cpp.Api.UnityAction = UnityEngine_Events_UnityAction_API;
},{"decorator-cache-getter":338}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Events_UnityAction_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Events_UnityAction_Impl extends class_1.System_MulticastDelegate_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor(object, method) {
        return Il2Cpp.Api.UnityAction.__ctor(this.handle, object, method);
    }
    Invoke() {
        return Il2Cpp.Api.UnityAction._Invoke(this.handle);
    }
    BeginInvoke(callback, object) {
        return Il2Cpp.Api.UnityAction._BeginInvoke(this.handle, callback, object);
    }
    EndInvoke(result) {
        return Il2Cpp.Api.UnityAction._EndInvoke(this.handle, result);
    }
}
exports.UnityEngine_Events_UnityAction_Impl = UnityEngine_Events_UnityAction_Impl;
Il2Cpp.UnityAction = UnityEngine_Events_UnityAction_Impl;
},{"../class":56}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":52,"./class":53}],55:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_MulticastDelegate_API {
    static get _GetObjectData() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetObjectData", 2, ["System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _DynamicInvokeImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "DynamicInvokeImpl", 1, ["System.Object[]"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "Equals", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetHashCode", 0, [], "pointer", ["pointer"]);
    }
    static get _GetMethodImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetMethodImpl", 0, [], "pointer", ["pointer"]);
    }
    static get _GetInvocationList() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "GetInvocationList", 0, [], "pointer", ["pointer"]);
    }
    static get _CombineImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "CombineImpl", 1, ["System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _LastIndexOf() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "LastIndexOf", 2, ["System.Delegate[]", "System.Delegate[]"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _RemoveImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.MulticastDelegate", "RemoveImpl", 1, ["System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_GetObjectData", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_DynamicInvokeImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_GetMethodImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_GetInvocationList", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_CombineImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_LastIndexOf", null);
__decorate([
    decorator_cache_getter_1.cache
], System_MulticastDelegate_API, "_RemoveImpl", null);
mscorlib.Api.MulticastDelegate = System_MulticastDelegate_API;
},{"decorator-cache-getter":338}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_MulticastDelegate_Impl = void 0;
const class_1 = require("../class");
class System_MulticastDelegate_Impl extends class_1.System_Delegate_Impl {
    delegates = lfv(this.handle, "delegates");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    GetObjectData(info, context) {
        return mscorlib.Api.MulticastDelegate._GetObjectData(this.handle, info, context);
    }
    DynamicInvokeImpl(args) {
        return mscorlib.Api.MulticastDelegate._DynamicInvokeImpl(this.handle, args);
    }
    Equals(obj) {
        return mscorlib.Api.MulticastDelegate._Equals(this.handle, obj);
    }
    GetHashCode() {
        return mscorlib.Api.MulticastDelegate._GetHashCode(this.handle);
    }
    GetMethodImpl() {
        return mscorlib.Api.MulticastDelegate._GetMethodImpl(this.handle);
    }
    GetInvocationList() {
        return mscorlib.Api.MulticastDelegate._GetInvocationList(this.handle);
    }
    CombineImpl(follow) {
        return new class_1.System_Delegate_Impl(mscorlib.Api.MulticastDelegate._CombineImpl(this.handle, follow.handle));
    }
    LastIndexOf(haystack, needle) {
        return mscorlib.Api.MulticastDelegate._LastIndexOf(this.handle, haystack, needle);
    }
    RemoveImpl(value) {
        return new class_1.System_Delegate_Impl(mscorlib.Api.MulticastDelegate._RemoveImpl(this.handle, value.handle));
    }
}
exports.System_MulticastDelegate_Impl = System_MulticastDelegate_Impl;
mscorlib.MulticastDelegate = System_MulticastDelegate_Impl;
},{"../class":59}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./UnityAction/include");
},{"./UnityAction/include":54,"./api":55,"./class":56}],58:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_Delegate_API {
    static get _get_Method() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "get_Method", 0, [], "pointer", ["pointer"]);
    }
    static get _GetVirtualMethod_internal() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetVirtualMethod_internal", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Target() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "get_Target", 0, [], "pointer", ["pointer"]);
    }
    static get _CreateDelegate_internal() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate_internal", 4, ["System.Type", "System.Object", "System.Reflection.MethodInfo", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _arg_type_match() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "arg_type_match", 2, ["System.Type", "System.Type"], "pointer", ["pointer", "pointer"]);
    }
    static get _arg_type_match_this() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "arg_type_match_this", 3, ["System.Type", "System.Type", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _return_type_match() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "return_type_match", 2, ["System.Type", "System.Type"], "pointer", ["pointer", "pointer"]);
    }
    static get _CreateDelegate() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 4, ["System.Type", "System.Object", "System.Reflection.MethodInfo", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_firstArgument_method_throwOnBindFailure_allowClosed() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 5, ["System.Type", "System.Object", "System.Reflection.MethodInfo", "System.Boolean", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_firstArgument_method() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, ["System.Type", "System.Object", "System.Reflection.MethodInfo"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_method_throwOnBindFailure() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, ["System.Type", "System.Reflection.MethodInfo", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_method() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 2, ["System.Type", "System.Reflection.MethodInfo"], "pointer", ["pointer", "pointer"]);
    }
    static get _CreateDelegate_type_target_method() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, ["System.Type", "System.Object", "System.String"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetCandidateMethod() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetCandidateMethod", 6, ["System.Type", "System.Type", "System.String", "System.Reflection.BindingFlags", "System.Boolean", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 5, ["System.Type", "System.Type", "System.String", "System.Boolean", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_target_method_() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 3, ["System.Type", "System.Type", "System.String"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure_() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 5, ["System.Type", "System.Object", "System.String", "System.Boolean", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _CreateDelegate_type_target_method_ignoreCase() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegate", 4, ["System.Type", "System.Object", "System.String", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _DynamicInvoke() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "DynamicInvoke", 1, ["System.Object[]"], "pointer", ["pointer", "pointer"]);
    }
    static get _InitializeDelegateData() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "InitializeDelegateData", 0, [], "void", ["pointer"]);
    }
    static get _DynamicInvokeImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "DynamicInvokeImpl", 1, ["System.Object[]"], "pointer", ["pointer", "pointer"]);
    }
    static get _Clone() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Clone", 0, [], "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Equals", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetHashCode", 0, [], "pointer", ["pointer"]);
    }
    static get _GetMethodImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetMethodImpl", 0, [], "pointer", ["pointer"]);
    }
    static get _GetObjectData() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetObjectData", 2, ["System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _GetInvocationList() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "GetInvocationList", 0, [], "pointer", ["pointer"]);
    }
    static get _Combine() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Combine", 2, ["System.Delegate", "System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _Combine_delegates() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Combine", 1, ["System.Delegate[]"], "pointer", ["pointer"]);
    }
    static get _CombineImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CombineImpl", 1, ["System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _Remove() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "Remove", 2, ["System.Delegate", "System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _RemoveImpl() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "RemoveImpl", 1, ["System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "op_Equality", 2, ["System.Delegate", "System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "op_Inequality", 2, ["System.Delegate", "System.Delegate"], "pointer", ["pointer", "pointer"]);
    }
    static get _CreateDelegateNoSecurityCheck() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "CreateDelegateNoSecurityCheck", 3, ["System.RuntimeType", "System.Object", "System.Reflection.MethodInfo"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _AllocDelegateLike_internal() {
        return Il2Cpp.Api.o("mscorlib", "System.Delegate", "AllocDelegateLike_internal", 1, ["System.Delegate"], "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_get_Method", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_GetVirtualMethod_internal", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_get_Target", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_internal", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_arg_type_match", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_arg_type_match_this", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_return_type_match", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_firstArgument_method_throwOnBindFailure_allowClosed", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_firstArgument_method", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_method_throwOnBindFailure", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_method", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_target_method", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_GetCandidateMethod", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_target_method_", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_target_method_ignoreCase_throwOnBindFailure_", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegate_type_target_method_ignoreCase", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_DynamicInvoke", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_InitializeDelegateData", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_DynamicInvokeImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_Clone", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_GetMethodImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_GetObjectData", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_GetInvocationList", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_Combine", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_Combine_delegates", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CombineImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_Remove", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_RemoveImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_CreateDelegateNoSecurityCheck", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Delegate_API, "_AllocDelegateLike_internal", null);
mscorlib.Api.Delegate = System_Delegate_API;
},{"decorator-cache-getter":338}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_Delegate_Impl = void 0;
const class_1 = require("../class");
class System_Delegate_Impl extends class_1.mscorlib_System_Object_impl {
    method_ptr = lfv(this.handle, "method_ptr");
    invoke_impl = lfv(this.handle, "invoke_impl");
    m_target = new class_1.mscorlib_System_Object_impl(lfv(this.handle, "m_target"));
    method = lfv(this.handle, "method");
    delegate_trampoline = lfv(this.handle, "delegate_trampoline");
    extra_arg = lfv(this.handle, "extra_arg");
    method_code = lfv(this.handle, "method_code");
    method_info = lfv(this.handle, "method_info");
    original_method_info = lfv(this.handle, "original_method_info");
    data = lfv(this.handle, "data");
    method_is_virtual = lfv(this.handle, "method_is_virtual");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_Method() {
        return mscorlib.Api.Delegate._get_Method(this.handle);
    }
    GetVirtualMethod_internal() {
        return mscorlib.Api.Delegate._GetVirtualMethod_internal(this.handle);
    }
    get_Target() {
        return mscorlib.Api.Delegate._get_Target(this.handle);
    }
    static CreateDelegate_internal(type, target, info, throwOnBindFailure) {
        return mscorlib.Api.Delegate._CreateDelegate_internal(type.handle, target.handle, info, throwOnBindFailure);
    }
    static arg_type_match(delArgType, argType) {
        return mscorlib.Api.Delegate._arg_type_match(delArgType, argType);
    }
    static arg_type_match_this(delArgType, argType, boxedThis) {
        return mscorlib.Api.Delegate._arg_type_match_this(delArgType, argType, boxedThis);
    }
    static return_type_match(delReturnType, returnType) {
        return mscorlib.Api.Delegate._return_type_match(delReturnType, returnType);
    }
    static CreateDelegate(type, firstArgument, method, throwOnBindFailure) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, firstArgument, method, throwOnBindFailure));
    }
    static CreateDelegate_5_(type, firstArgument, method, throwOnBindFailure, allowClosed) {
        return mscorlib.Api.Delegate._CreateDelegate(type.handle, firstArgument, method, throwOnBindFailure, allowClosed);
    }
    static CreateDelegate_3_(type, firstArgument, method) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, firstArgument, method));
    }
    static CreateDelegate_3(type, method, throwOnBindFailure) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, method, throwOnBindFailure));
    }
    static CreateDelegate_2(type, method) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, method));
    }
    static CreateDelegate_3__(type, target, method) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, target.handle, method));
    }
    static GetCandidateMethod(type, target, method, bflags, ignoreCase, throwOnBindFailure) {
        return mscorlib.Api.Delegate._GetCandidateMethod(type.handle, target.handle, method, bflags, ignoreCase, throwOnBindFailure);
    }
    static CreateDelegate_5__(type, target, method, ignoreCase, throwOnBindFailure) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, target.handle, method, ignoreCase, throwOnBindFailure));
    }
    static CreateDelegate_3___(type, target, method) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, target.handle, method));
    }
    static CreateDelegate_5(type, target, method, ignoreCase, throwOnBindFailure) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, target.handle, method, ignoreCase, throwOnBindFailure));
    }
    static CreateDelegate_4(type, target, method, ignoreCase) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CreateDelegate(type.handle, target.handle, method, ignoreCase));
    }
    DynamicInvoke(args) {
        return new class_1.mscorlib_System_Object_impl(mscorlib.Api.Delegate._DynamicInvoke(this.handle, args));
    }
    InitializeDelegateData() {
        return mscorlib.Api.Delegate._InitializeDelegateData(this.handle);
    }
    DynamicInvokeImpl(args) {
        return new class_1.mscorlib_System_Object_impl(mscorlib.Api.Delegate._DynamicInvokeImpl(this.handle, args));
    }
    Clone() {
        return new class_1.mscorlib_System_Object_impl(mscorlib.Api.Delegate._Clone(this.handle));
    }
    Equals(obj) {
        return mscorlib.Api.Delegate._Equals(this.handle, obj);
    }
    GetHashCode() {
        return mscorlib.Api.Delegate._GetHashCode(this.handle);
    }
    GetMethodImpl() {
        return mscorlib.Api.Delegate._GetMethodImpl(this.handle);
    }
    GetObjectData(info, context) {
        return mscorlib.Api.Delegate._GetObjectData(this.handle, info, context);
    }
    GetInvocationList() {
        return mscorlib.Api.Delegate._GetInvocationList(this.handle);
    }
    static Combine(a, b) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._Combine(a.handle, b.handle));
    }
    static Combine_1(delegates) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._Combine(delegates));
    }
    CombineImpl(d) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._CombineImpl(this.handle, d.handle));
    }
    static Remove(source, value) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._Remove(source.handle, value.handle));
    }
    RemoveImpl(d) {
        return new System_Delegate_Impl(mscorlib.Api.Delegate._RemoveImpl(this.handle, d.handle));
    }
    static op_Equality(d1, d2) {
        return mscorlib.Api.Delegate._op_Equality(d1.handle, d2.handle);
    }
    static op_Inequality(d1, d2) {
        return mscorlib.Api.Delegate._op_Inequality(d1.handle, d2.handle);
    }
    static CreateDelegateNoSecurityCheck(type, firstArgument, method) {
        return mscorlib.Api.Delegate._CreateDelegateNoSecurityCheck(type, firstArgument, method);
    }
    static AllocDelegateLike_internal(d) {
        return mscorlib.Api.Delegate._AllocDelegateLike_internal(d.handle);
    }
}
exports.System_Delegate_Impl = System_Delegate_Impl;
mscorlib.Delegate = System_Delegate_Impl;
},{"../class":304}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./MulticastDelegate/include");
},{"./MulticastDelegate/include":57,"./api":58,"./class":59}],61:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_Exception_API {
    static get _Init() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "Init", 0, "void", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", ".ctor", 0, "void", ["pointer"]);
    }
    static get __ctor_message() {
        return Il2Cpp.Api.o("mscorlib", "System.Exception", ".ctor", 1, ["System.String"], "void", ["pointer", "pointer"]);
    }
    static get __ctor_message_innerException() {
        return Il2Cpp.Api.o("mscorlib", "System.Exception", ".ctor", 2, ["System.String", "System.Exception"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get __ctor_info_context() {
        return Il2Cpp.Api.o("mscorlib", "System.Exception", ".ctor", 2, ["System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_Message() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_Message", 0, "pointer", ["pointer"]);
    }
    static get _get_Data() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_Data", 0, "pointer", ["pointer"]);
    }
    static get _IsImmutableAgileException() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "IsImmutableAgileException", 1, "pointer", ["pointer"]);
    }
    static get _GetClassName() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetClassName", 0, "pointer", ["pointer"]);
    }
    static get _get_InnerException() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_InnerException", 0, "pointer", ["pointer"]);
    }
    static get _get_TargetSite() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_TargetSite", 0, "pointer", ["pointer"]);
    }
    static get _get_StackTrace() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_StackTrace", 0, "pointer", ["pointer"]);
    }
    static get _GetStackTrace() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetStackTrace", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _SetErrorCode() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "SetErrorCode", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_Source() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_Source", 0, "pointer", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_needFileLineInfo_needMessage() {
        return Il2Cpp.Api.o("mscorlib", "System.Exception", "ToString", 2, ["System.Boolean", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetObjectData() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetObjectData", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _OnDeserialized() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "OnDeserialized", 1, "void", ["pointer", "pointer"]);
    }
    static get _StripFileInfo() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "StripFileInfo", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _RestoreExceptionDispatchInfo() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "RestoreExceptionDispatchInfo", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_HResult() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "get_HResult", 0, "pointer", ["pointer"]);
    }
    static get _set_HResult() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "set_HResult", 1, "void", ["pointer", "pointer"]);
    }
    static get _GetType() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetType", 0, "pointer", ["pointer"]);
    }
    static get _GetMessageFromNativeResources() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "GetMessageFromNativeResources", 1, "pointer", ["pointer"]);
    }
    static get _FixRemotingException() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "FixRemotingException", 0, "pointer", ["pointer"]);
    }
    static get _ReportUnhandledException() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", "ReportUnhandledException", 1, "void", ["pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("mscorlib", "System.Exception", ".cctor", 0, "void", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_Init", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "__ctor_message", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "__ctor_message_innerException", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "__ctor_info_context", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_Message", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_Data", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_IsImmutableAgileException", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_GetClassName", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_InnerException", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_TargetSite", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_StackTrace", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_GetStackTrace", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_SetErrorCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_Source", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_ToString_needFileLineInfo_needMessage", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_GetObjectData", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_OnDeserialized", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_StripFileInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_RestoreExceptionDispatchInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_get_HResult", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_set_HResult", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_GetType", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_GetMessageFromNativeResources", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_FixRemotingException", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "_ReportUnhandledException", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Exception_API, "__cctor", null);
mscorlib.Api.Exception = System_Exception_API;
},{"decorator-cache-getter":338}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_Exception_Impl = void 0;
const class_1 = require("../class");
class System_Exception_Impl extends class_1.mscorlib_System_Object_impl {
    s_EDILock = lfv(this.handle, "s_EDILock");
    _className = lfv(this.handle, "_className");
    _message = lfv(this.handle, "_message");
    _data = lfv(this.handle, "_data");
    _innerException = lfv(this.handle, "_innerException");
    _helpURL = lfv(this.handle, "_helpURL");
    _stackTrace = lfv(this.handle, "_stackTrace");
    _stackTraceString = lfv(this.handle, "_stackTraceString");
    _remoteStackTraceString = lfv(this.handle, "_remoteStackTraceString");
    _remoteStackIndex = lfv(this.handle, "_remoteStackIndex");
    _dynamicMethods = lfv(this.handle, "_dynamicMethods");
    _HResult = lfv(this.handle, "_HResult");
    _source = lfv(this.handle, "_source");
    _safeSerializationManager = lfv(this.handle, "_safeSerializationManager");
    captured_traces = lfv(this.handle, "captured_traces");
    native_trace_ips = lfv(this.handle, "native_trace_ips");
    _COMPlusExceptionCode = lfv(this.handle, "_COMPlusExceptionCode");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    Init() {
        return mscorlib.Api.Exception._Init(this.handle);
    }
    _ctor() {
        return mscorlib.Api.Exception.__ctor(this.handle);
    }
    _ctor_1(message) {
        return mscorlib.Api.Exception.__ctor(this.handle, message);
    }
    _ctor_msg_exception(message, innerException) {
        return mscorlib.Api.Exception.__ctor(this.handle, message, innerException);
    }
    _ctor_info_ctx(info, context) {
        return mscorlib.Api.Exception.__ctor(this.handle, info, context);
    }
    get_Message() {
        return readU16(mscorlib.Api.Exception._get_Message(this.handle));
    }
    get_Data() {
        return mscorlib.Api.Exception._get_Data(this.handle);
    }
    static IsImmutableAgileException(e) {
        return mscorlib.Api.Exception._IsImmutableAgileException(e);
    }
    GetClassName() {
        return readU16(mscorlib.Api.Exception._GetClassName(this.handle));
    }
    get_InnerException() {
        return mscorlib.Api.Exception._get_InnerException(this.handle);
    }
    get_TargetSite() {
        return mscorlib.Api.Exception._get_TargetSite(this.handle);
    }
    get_StackTrace() {
        return readU16(mscorlib.Api.Exception._get_StackTrace(this.handle));
    }
    GetStackTrace(needFileInfo) {
        return readU16(mscorlib.Api.Exception._GetStackTrace(this.handle, needFileInfo));
    }
    SetErrorCode(hr) {
        return mscorlib.Api.Exception._SetErrorCode(this.handle, hr);
    }
    get_Source() {
        return readU16(mscorlib.Api.Exception._get_Source(this.handle));
    }
    ToString() {
        return readU16(mscorlib.Api.Exception._ToString(this.handle));
    }
    ToString_2(needFileLineInfo, needMessage) {
        return readU16(mscorlib.Api.Exception._ToString(this.handle, needFileLineInfo, needMessage));
    }
    GetObjectData(info, context) {
        return mscorlib.Api.Exception._GetObjectData(this.handle, info, context);
    }
    OnDeserialized(context) {
        return mscorlib.Api.Exception._OnDeserialized(this.handle, context);
    }
    StripFileInfo(stackTrace, isRemoteStackTrace) {
        return readU16(mscorlib.Api.Exception._StripFileInfo(this.handle, stackTrace, isRemoteStackTrace));
    }
    RestoreExceptionDispatchInfo(exceptionDispatchInfo) {
        return mscorlib.Api.Exception._RestoreExceptionDispatchInfo(this.handle, exceptionDispatchInfo);
    }
    get_HResult() {
        return mscorlib.Api.Exception._get_HResult(this.handle);
    }
    set_HResult(value) {
        return mscorlib.Api.Exception._set_HResult(this.handle, value);
    }
    GetType() {
        return mscorlib.Api.Exception._GetType(this.handle);
    }
    static GetMessageFromNativeResources(kind) {
        return readU16(mscorlib.Api.Exception._GetMessageFromNativeResources(kind));
    }
    FixRemotingException() {
        return mscorlib.Api.Exception._FixRemotingException(this.handle);
    }
    static ReportUnhandledException(exception) {
        return mscorlib.Api.Exception._ReportUnhandledException(exception);
    }
    static _cctor() {
        return mscorlib.Api.Exception.__cctor();
    }
}
exports.System_Exception_Impl = System_Exception_Impl;
mscorlib.Exception = System_Exception_Impl;
},{"../class":304}],63:[function(require,module,exports){
"use strict";
},{}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":61,"./class":62,"./export":63}],65:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_UI_FontData_API {
    static get _get_defaultFontData() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_defaultFontData", 0, "pointer", []);
    }
    static get _get_font() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_font", 0, "pointer", ["pointer"]);
    }
    static get _set_font() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_font", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_fontSize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_fontSize", 0, "pointer", ["pointer"]);
    }
    static get _set_fontSize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_fontSize", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_fontStyle() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_fontStyle", 0, "pointer", ["pointer"]);
    }
    static get _set_fontStyle() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_fontStyle", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_bestFit() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_bestFit", 0, "pointer", ["pointer"]);
    }
    static get _set_bestFit() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_bestFit", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_minSize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_minSize", 0, "pointer", ["pointer"]);
    }
    static get _set_minSize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_minSize", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_maxSize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_maxSize", 0, "pointer", ["pointer"]);
    }
    static get _set_maxSize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_maxSize", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_alignment() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_alignment", 0, "pointer", ["pointer"]);
    }
    static get _set_alignment() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_alignment", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_alignByGeometry() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_alignByGeometry", 0, "pointer", ["pointer"]);
    }
    static get _set_alignByGeometry() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_alignByGeometry", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_richText() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_richText", 0, "pointer", ["pointer"]);
    }
    static get _set_richText() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_richText", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_horizontalOverflow() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_horizontalOverflow", 0, "pointer", ["pointer"]);
    }
    static get _set_horizontalOverflow() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_horizontalOverflow", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_verticalOverflow() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_verticalOverflow", 0, "pointer", ["pointer"]);
    }
    static get _set_verticalOverflow() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_verticalOverflow", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_lineSpacing() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "get_lineSpacing", 0, "pointer", ["pointer"]);
    }
    static get _set_lineSpacing() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "set_lineSpacing", 1, "void", ["pointer", "pointer"]);
    }
    static get _UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", 0, "void", ["pointer"]);
    }
    static get _UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", 0, "void", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.FontData", ".ctor", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_defaultFontData", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_font", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_font", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_fontSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_fontSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_fontStyle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_fontStyle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_bestFit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_bestFit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_minSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_minSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_maxSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_maxSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_alignment", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_alignment", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_alignByGeometry", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_alignByGeometry", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_richText", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_richText", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_horizontalOverflow", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_horizontalOverflow", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_verticalOverflow", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_verticalOverflow", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_get_lineSpacing", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_set_lineSpacing", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_FontData_API, "__ctor", null);
Il2Cpp.Api.FontData = UnityEngine_UI_FontData_API;
},{"decorator-cache-getter":338}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_UI_FontData_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_UI_FontData_Impl extends class_1.mscorlib_System_Object_impl {
    m_Font = lfv(this.handle, "m_Font");
    m_FontSize = lfv(this.handle, "m_FontSize");
    m_FontStyle = lfv(this.handle, "m_FontStyle");
    m_BestFit = lfv(this.handle, "m_BestFit");
    m_MinSize = lfv(this.handle, "m_MinSize");
    m_MaxSize = lfv(this.handle, "m_MaxSize");
    m_Alignment = lfv(this.handle, "m_Alignment");
    m_AlignByGeometry = lfv(this.handle, "m_AlignByGeometry");
    m_RichText = lfv(this.handle, "m_RichText");
    m_HorizontalOverflow = lfv(this.handle, "m_HorizontalOverflow");
    m_VerticalOverflow = lfv(this.handle, "m_VerticalOverflow");
    m_LineSpacing = lfv(this.handle, "m_LineSpacing");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_defaultFontData() {
        return Il2Cpp.Api.FontData._get_defaultFontData();
    }
    get_font() {
        return Il2Cpp.Api.FontData._get_font(this.handle);
    }
    set_font(value) {
        return Il2Cpp.Api.FontData._set_font(this.handle, value);
    }
    get_fontSize() {
        return Il2Cpp.Api.FontData._get_fontSize(this.handle);
    }
    set_fontSize(value) {
        return Il2Cpp.Api.FontData._set_fontSize(this.handle, value);
    }
    get_fontStyle() {
        return Il2Cpp.Api.FontData._get_fontStyle(this.handle);
    }
    set_fontStyle(value) {
        return Il2Cpp.Api.FontData._set_fontStyle(this.handle, value);
    }
    get_bestFit() {
        return Il2Cpp.Api.FontData._get_bestFit(this.handle);
    }
    set_bestFit(value) {
        return Il2Cpp.Api.FontData._set_bestFit(this.handle, value);
    }
    get_minSize() {
        return Il2Cpp.Api.FontData._get_minSize(this.handle);
    }
    set_minSize(value) {
        return Il2Cpp.Api.FontData._set_minSize(this.handle, value);
    }
    get_maxSize() {
        return Il2Cpp.Api.FontData._get_maxSize(this.handle);
    }
    set_maxSize(value) {
        return Il2Cpp.Api.FontData._set_maxSize(this.handle, value);
    }
    get_alignment() {
        return Il2Cpp.Api.FontData._get_alignment(this.handle);
    }
    set_alignment(value) {
        return Il2Cpp.Api.FontData._set_alignment(this.handle, value);
    }
    get_alignByGeometry() {
        return Il2Cpp.Api.FontData._get_alignByGeometry(this.handle);
    }
    set_alignByGeometry(value) {
        return Il2Cpp.Api.FontData._set_alignByGeometry(this.handle, value);
    }
    get_richText() {
        return Il2Cpp.Api.FontData._get_richText(this.handle);
    }
    set_richText(value) {
        return Il2Cpp.Api.FontData._set_richText(this.handle, value);
    }
    get_horizontalOverflow() {
        return Il2Cpp.Api.FontData._get_horizontalOverflow(this.handle);
    }
    set_horizontalOverflow(value) {
        return Il2Cpp.Api.FontData._set_horizontalOverflow(this.handle, value);
    }
    get_verticalOverflow() {
        return Il2Cpp.Api.FontData._get_verticalOverflow(this.handle);
    }
    set_verticalOverflow(value) {
        return Il2Cpp.Api.FontData._set_verticalOverflow(this.handle, value);
    }
    get_lineSpacing() {
        return Il2Cpp.Api.FontData._get_lineSpacing(this.handle);
    }
    set_lineSpacing(value) {
        return Il2Cpp.Api.FontData._set_lineSpacing(this.handle, value);
    }
    UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
        return Il2Cpp.Api.FontData._UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize(this.handle);
    }
    UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
        return Il2Cpp.Api.FontData._UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize(this.handle);
    }
    _ctor() {
        return Il2Cpp.Api.FontData.__ctor(this.handle);
    }
}
exports.UnityEngine_UI_FontData_Impl = UnityEngine_UI_FontData_Impl;
},{"../class":304}],67:[function(require,module,exports){
"use strict";
},{}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":65,"./class":66,"./export":67}],69:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_GUI_API {
    static get _get_color() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_color", 0, "pointer", []);
    }
    static get _set_color() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_color", 1, "void", ["pointer"]);
    }
    static get _set_changed() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_changed", 1, "void", ["pointer"]);
    }
    static get _set_depth() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_depth", 1, "void", ["pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", ".cctor", 0, "void", []);
    }
    static get _set_nextScrollStepTime() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_nextScrollStepTime", 1, "void", ["pointer"]);
    }
    static get _set_skin() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_skin", 1, "void", ["pointer"]);
    }
    static get _get_skin() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_skin", 0, "pointer", []);
    }
    static get _DoSetSkin() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "DoSetSkin", 1, "void", ["pointer"]);
    }
    static get _Label() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "Label", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Label_position_content_style() {
        return Il2Cpp.Api.o("UnityEngine.IMGUIModule", "UnityEngine.GUI", "Label", 3, ["UnityEngine.Rect", "UnityEngine.GUIContent", "UnityEngine.GUIStyle"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _DoLabel() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "DoLabel", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_scrollViewStates() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_scrollViewStates", 0, "pointer", []);
    }
    static get _CallWindowDelegate() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "CallWindowDelegate", 8, "void", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _get_color_Injected() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "get_color_Injected", 1, "void", ["pointer"]);
    }
    static get _set_color_Injected() {
        return Il2Cpp.Api.t("UnityEngine.IMGUIModule", "UnityEngine.GUI", "set_color_Injected", 1, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_get_color", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_set_color", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_set_changed", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_set_depth", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_set_nextScrollStepTime", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_set_skin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_get_skin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_DoSetSkin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_Label", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_Label_position_content_style", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_DoLabel", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_get_scrollViewStates", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_CallWindowDelegate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_get_color_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_GUI_API, "_set_color_Injected", null);
Il2Cpp.Api.GUI = UnityEngine_GUI_API;
},{"decorator-cache-getter":338}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_GUI_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_GUI_Impl extends class_1.mscorlib_System_Object_impl {
    s_HotTextField = lfv(this.handle, "s_HotTextField");
    s_BoxHash = lfv(this.handle, "s_BoxHash");
    s_ButonHash = lfv(this.handle, "s_ButonHash");
    s_RepeatButtonHash = lfv(this.handle, "s_RepeatButtonHash");
    s_ToggleHash = lfv(this.handle, "s_ToggleHash");
    s_ButtonGridHash = lfv(this.handle, "s_ButtonGridHash");
    s_SliderHash = lfv(this.handle, "s_SliderHash");
    s_BeginGroupHash = lfv(this.handle, "s_BeginGroupHash");
    s_ScrollviewHash = lfv(this.handle, "s_ScrollviewHash");
    s_Skin = lfv(this.handle, "s_Skin");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static get_color() {
        return Il2Cpp.Api.GUI._get_color();
    }
    static set_color(value) {
        return Il2Cpp.Api.GUI._set_color(value);
    }
    static set_changed(value) {
        return Il2Cpp.Api.GUI._set_changed(value);
    }
    static set_depth(value) {
        return Il2Cpp.Api.GUI._set_depth(value);
    }
    static _cctor() {
        return Il2Cpp.Api.GUI.__cctor();
    }
    static set_nextScrollStepTime(value) {
        return Il2Cpp.Api.GUI._set_nextScrollStepTime(value);
    }
    static set_skin(value) {
        return Il2Cpp.Api.GUI._set_skin(value);
    }
    static get_skin() {
        return Il2Cpp.Api.GUI._get_skin();
    }
    static DoSetSkin(newSkin) {
        return Il2Cpp.Api.GUI._DoSetSkin(newSkin);
    }
    static Label(position, text, style) {
        return Il2Cpp.Api.GUI._Label(position, text, style);
    }
    static Label_3(position, content, style) {
        return Il2Cpp.Api.GUI._Label(position, content, style);
    }
    static DoLabel(position, content, style) {
        return Il2Cpp.Api.GUI._DoLabel(position, content, style);
    }
    static get_scrollViewStates() {
        return Il2Cpp.Api.GUI._get_scrollViewStates();
    }
    static CallWindowDelegate(func, id, instanceID, _skin, forceRect, width, height, style) {
        return Il2Cpp.Api.GUI._CallWindowDelegate(func, id, instanceID, _skin, forceRect, width, height, style);
    }
    static get_color_Injected(ret) {
        return Il2Cpp.Api.GUI._get_color_Injected(ret);
    }
    static set_color_Injected(value) {
        return Il2Cpp.Api.GUI._set_color_Injected(value);
    }
}
exports.UnityEngine_GUI_Impl = UnityEngine_GUI_Impl;
Il2Cpp.GUI = UnityEngine_GUI_Impl;
},{"../class":304}],71:[function(require,module,exports){
"use strict";
},{}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":69,"./class":70,"./export":71}],73:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Input_API {
    static get _GetKeyInt() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyInt", 1, "pointer", ["pointer"]);
    }
    static get _GetKeyUpInt() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyUpInt", 1, "pointer", ["pointer"]);
    }
    static get _GetKeyDownInt() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyDownInt", 1, "pointer", ["pointer"]);
    }
    static get _GetAxis() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetAxis", 1, "pointer", ["pointer"]);
    }
    static get _GetAxisRaw() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetAxisRaw", 1, "pointer", ["pointer"]);
    }
    static get _GetButtonDown() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetButtonDown", 1, "pointer", ["pointer"]);
    }
    static get _GetMouseButton() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetMouseButton", 1, "pointer", ["pointer"]);
    }
    static get _GetMouseButtonDown() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetMouseButtonDown", 1, "pointer", ["pointer"]);
    }
    static get _GetMouseButtonUp() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetMouseButtonUp", 1, "pointer", ["pointer"]);
    }
    static get _GetTouch() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetTouch", 1, "pointer", ["pointer"]);
    }
    static get _GetKey() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKey", 1, "pointer", ["pointer"]);
    }
    static get _GetKeyUp() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyUp", 1, "pointer", ["pointer"]);
    }
    static get _GetKeyDown() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetKeyDown", 1, "pointer", ["pointer"]);
    }
    static get _set_simulateMouseWithTouches() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_simulateMouseWithTouches", 1, "void", ["pointer"]);
    }
    static get _get_mousePosition() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mousePosition", 0, "pointer", []);
    }
    static get _get_mouseScrollDelta() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mouseScrollDelta", 0, "pointer", []);
    }
    static get _get_imeCompositionMode() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_imeCompositionMode", 0, "pointer", []);
    }
    static get _set_imeCompositionMode() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_imeCompositionMode", 1, "void", ["pointer"]);
    }
    static get _get_compositionString() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_compositionString", 0, "pointer", []);
    }
    static get _get_compositionCursorPos() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_compositionCursorPos", 0, "pointer", []);
    }
    static get _set_compositionCursorPos() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_compositionCursorPos", 1, "void", ["pointer"]);
    }
    static get _get_mousePresent() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mousePresent", 0, "pointer", []);
    }
    static get _get_touchCount() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_touchCount", 0, "pointer", []);
    }
    static get _get_touchSupported() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_touchSupported", 0, "pointer", []);
    }
    static get _set_multiTouchEnabled() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_multiTouchEnabled", 1, "void", ["pointer"]);
    }
    static get _get_touches() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_touches", 0, "pointer", []);
    }
    static get _GetTouch_Injected() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "GetTouch_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _get_mousePosition_Injected() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mousePosition_Injected", 1, "void", ["pointer"]);
    }
    static get _get_mouseScrollDelta_Injected() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_mouseScrollDelta_Injected", 1, "void", ["pointer"]);
    }
    static get _get_compositionCursorPos_Injected() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "get_compositionCursorPos_Injected", 1, "void", ["pointer"]);
    }
    static get _set_compositionCursorPos_Injected() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Input", "set_compositionCursorPos_Injected", 1, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetKeyInt", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetKeyUpInt", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetKeyDownInt", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetAxis", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetAxisRaw", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetButtonDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetMouseButton", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetMouseButtonDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetMouseButtonUp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetTouch", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetKey", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetKeyUp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetKeyDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_set_simulateMouseWithTouches", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_mousePosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_mouseScrollDelta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_imeCompositionMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_set_imeCompositionMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_compositionString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_compositionCursorPos", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_set_compositionCursorPos", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_mousePresent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_touchCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_touchSupported", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_set_multiTouchEnabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_touches", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_GetTouch_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_mousePosition_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_mouseScrollDelta_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_get_compositionCursorPos_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Input_API, "_set_compositionCursorPos_Injected", null);
Il2Cpp.Api.Input = UnityEngine_Input_API;
},{"decorator-cache-getter":338}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Input_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Input_Impl extends class_1.mscorlib_System_Object_impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static GetKeyInt(key) {
        return Il2Cpp.Api.Input._GetKeyInt(key);
    }
    static GetKeyUpInt(key) {
        return Il2Cpp.Api.Input._GetKeyUpInt(key);
    }
    static GetKeyDownInt(key) {
        return Il2Cpp.Api.Input._GetKeyDownInt(key);
    }
    static GetAxis(axisName) {
        return Il2Cpp.Api.Input._GetAxis(axisName);
    }
    static GetAxisRaw(axisName) {
        return Il2Cpp.Api.Input._GetAxisRaw(axisName);
    }
    static GetButtonDown(buttonName) {
        return Il2Cpp.Api.Input._GetButtonDown(buttonName);
    }
    static GetMouseButton(button) {
        return Il2Cpp.Api.Input._GetMouseButton(button);
    }
    static GetMouseButtonDown(button) {
        return Il2Cpp.Api.Input._GetMouseButtonDown(button);
    }
    static GetMouseButtonUp(button) {
        return Il2Cpp.Api.Input._GetMouseButtonUp(button);
    }
    static GetTouch(index) {
        return Il2Cpp.Api.Input._GetTouch(index);
    }
    static GetKey(key) {
        return Il2Cpp.Api.Input._GetKey(key);
    }
    static GetKeyUp(key) {
        return Il2Cpp.Api.Input._GetKeyUp(key);
    }
    static GetKeyDown(key) {
        return Il2Cpp.Api.Input._GetKeyDown(key);
    }
    static set_simulateMouseWithTouches(value) {
        return Il2Cpp.Api.Input._set_simulateMouseWithTouches(value);
    }
    static get_mousePosition() {
        return Il2Cpp.Api.Input._get_mousePosition();
    }
    static get_mouseScrollDelta() {
        return Il2Cpp.Api.Input._get_mouseScrollDelta();
    }
    static get_imeCompositionMode() {
        return Il2Cpp.Api.Input._get_imeCompositionMode();
    }
    static set_imeCompositionMode(value) {
        return Il2Cpp.Api.Input._set_imeCompositionMode(value);
    }
    static get_compositionString() {
        return readU16(Il2Cpp.Api.Input._get_compositionString());
    }
    static get_compositionCursorPos() {
        return Il2Cpp.Api.Input._get_compositionCursorPos();
    }
    static set_compositionCursorPos(value) {
        return Il2Cpp.Api.Input._set_compositionCursorPos(value);
    }
    static get_mousePresent() {
        return Il2Cpp.Api.Input._get_mousePresent();
    }
    static get_touchCount() {
        return Il2Cpp.Api.Input._get_touchCount();
    }
    static get_touchSupported() {
        return Il2Cpp.Api.Input._get_touchSupported();
    }
    static set_multiTouchEnabled(value) {
        return Il2Cpp.Api.Input._set_multiTouchEnabled(value);
    }
    static get_touches() {
        return Il2Cpp.Api.Input._get_touches();
    }
    static GetTouch_Injected(index, ret) {
        return Il2Cpp.Api.Input._GetTouch_Injected(index, ret);
    }
    static get_mousePosition_Injected(ret) {
        return Il2Cpp.Api.Input._get_mousePosition_Injected(ret);
    }
    static get_mouseScrollDelta_Injected(ret) {
        return Il2Cpp.Api.Input._get_mouseScrollDelta_Injected(ret);
    }
    static get_compositionCursorPos_Injected(ret) {
        return Il2Cpp.Api.Input._get_compositionCursorPos_Injected(ret);
    }
    static set_compositionCursorPos_Injected(value) {
        return Il2Cpp.Api.Input._set_compositionCursorPos_Injected(value);
    }
}
exports.UnityEngine_Input_Impl = UnityEngine_Input_Impl;
Il2Cpp.Input = UnityEngine_Input_Impl;
},{"../class":304}],75:[function(require,module,exports){
"use strict";
var UnityEngine_KeyCode;
(function (UnityEngine_KeyCode) {
    UnityEngine_KeyCode[UnityEngine_KeyCode["None"] = 0] = "None";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Backspace"] = 8] = "Backspace";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Delete"] = 127] = "Delete";
    UnityEngine_KeyCode[UnityEngine_KeyCode["DownArrow"] = 264] = "DownArrow";
    UnityEngine_KeyCode[UnityEngine_KeyCode["End"] = 35] = "End";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Enter"] = 13] = "Enter";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Escape"] = 27] = "Escape";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Home"] = 36] = "Home";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Insert"] = 45] = "Insert";
    UnityEngine_KeyCode[UnityEngine_KeyCode["LeftArrow"] = 267] = "LeftArrow";
    UnityEngine_KeyCode[UnityEngine_KeyCode["PageDown"] = 260] = "PageDown";
    UnityEngine_KeyCode[UnityEngine_KeyCode["PageUp"] = 259] = "PageUp";
    UnityEngine_KeyCode[UnityEngine_KeyCode["RightArrow"] = 268] = "RightArrow";
    UnityEngine_KeyCode[UnityEngine_KeyCode["UpArrow"] = 266] = "UpArrow";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F1"] = 112] = "F1";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F2"] = 113] = "F2";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F3"] = 114] = "F3";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F4"] = 115] = "F4";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F5"] = 116] = "F5";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F6"] = 117] = "F6";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F7"] = 118] = "F7";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F8"] = 119] = "F8";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F9"] = 120] = "F9";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F10"] = 121] = "F10";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F11"] = 122] = "F11";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F12"] = 123] = "F12";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F13"] = 124] = "F13";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F14"] = 125] = "F14";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F15"] = 126] = "F15";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha0"] = 48] = "Alpha0";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha1"] = 49] = "Alpha1";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha2"] = 50] = "Alpha2";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha3"] = 51] = "Alpha3";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha4"] = 52] = "Alpha4";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha5"] = 53] = "Alpha5";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha6"] = 54] = "Alpha6";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha7"] = 55] = "Alpha7";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha8"] = 56] = "Alpha8";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Alpha9"] = 57] = "Alpha9";
    UnityEngine_KeyCode[UnityEngine_KeyCode["A"] = 65] = "A";
    UnityEngine_KeyCode[UnityEngine_KeyCode["B"] = 66] = "B";
    UnityEngine_KeyCode[UnityEngine_KeyCode["C"] = 67] = "C";
    UnityEngine_KeyCode[UnityEngine_KeyCode["D"] = 68] = "D";
    UnityEngine_KeyCode[UnityEngine_KeyCode["E"] = 69] = "E";
    UnityEngine_KeyCode[UnityEngine_KeyCode["F"] = 70] = "F";
    UnityEngine_KeyCode[UnityEngine_KeyCode["G"] = 71] = "G";
    UnityEngine_KeyCode[UnityEngine_KeyCode["H"] = 72] = "H";
    UnityEngine_KeyCode[UnityEngine_KeyCode["I"] = 73] = "I";
    UnityEngine_KeyCode[UnityEngine_KeyCode["J"] = 74] = "J";
    UnityEngine_KeyCode[UnityEngine_KeyCode["K"] = 75] = "K";
    UnityEngine_KeyCode[UnityEngine_KeyCode["L"] = 76] = "L";
    UnityEngine_KeyCode[UnityEngine_KeyCode["M"] = 77] = "M";
    UnityEngine_KeyCode[UnityEngine_KeyCode["N"] = 78] = "N";
    UnityEngine_KeyCode[UnityEngine_KeyCode["O"] = 79] = "O";
    UnityEngine_KeyCode[UnityEngine_KeyCode["P"] = 80] = "P";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Q"] = 81] = "Q";
    UnityEngine_KeyCode[UnityEngine_KeyCode["R"] = 82] = "R";
    UnityEngine_KeyCode[UnityEngine_KeyCode["S"] = 83] = "S";
    UnityEngine_KeyCode[UnityEngine_KeyCode["T"] = 84] = "T";
    UnityEngine_KeyCode[UnityEngine_KeyCode["U"] = 85] = "U";
    UnityEngine_KeyCode[UnityEngine_KeyCode["V"] = 86] = "V";
    UnityEngine_KeyCode[UnityEngine_KeyCode["W"] = 87] = "W";
    UnityEngine_KeyCode[UnityEngine_KeyCode["X"] = 88] = "X";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Y"] = 89] = "Y";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Z"] = 90] = "Z";
    UnityEngine_KeyCode[UnityEngine_KeyCode["Numlock"] = 300] = "Numlock";
})(UnityEngine_KeyCode || (UnityEngine_KeyCode = {}));
var UnityEngine_IMECompositionMode;
(function (UnityEngine_IMECompositionMode) {
    UnityEngine_IMECompositionMode[UnityEngine_IMECompositionMode["Auto"] = 0] = "Auto";
    UnityEngine_IMECompositionMode[UnityEngine_IMECompositionMode["Off"] = 2] = "Off";
    UnityEngine_IMECompositionMode[UnityEngine_IMECompositionMode["On"] = 1] = "On";
})(UnityEngine_IMECompositionMode || (UnityEngine_IMECompositionMode = {}));
},{}],76:[function(require,module,exports){
"use strict";
},{}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./enum");
require("./class");
require("./export");
},{"./api":73,"./class":74,"./enum":75,"./export":76}],78:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class InvokableCallListAPI {
    static get _ctor_0() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _AddListener() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "AddListener", 1, "void", ["pointer", "pointer"]);
    }
    static get _AddPersistentInvokableCall() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "AddPersistentInvokableCall", 1, "void", ["pointer", "pointer"]);
    }
    static get _ClearPersistent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "ClearPersistent", 0, "void", []);
    }
    static get _PrepareInvoke() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "PrepareInvoke", 0, "pointer", []);
    }
    static get _RemoveListener() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.InvokableCallList", "RemoveListener", 2, "void", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], InvokableCallListAPI, "_ctor_0", null);
__decorate([
    decorator_cache_getter_1.cache
], InvokableCallListAPI, "_AddListener", null);
__decorate([
    decorator_cache_getter_1.cache
], InvokableCallListAPI, "_AddPersistentInvokableCall", null);
__decorate([
    decorator_cache_getter_1.cache
], InvokableCallListAPI, "_ClearPersistent", null);
__decorate([
    decorator_cache_getter_1.cache
], InvokableCallListAPI, "_PrepareInvoke", null);
__decorate([
    decorator_cache_getter_1.cache
], InvokableCallListAPI, "_RemoveListener", null);
mscorlib.Api.InvokableCallList = InvokableCallListAPI;
},{"decorator-cache-getter":338}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_Object_impl = exports.InvokableCallList_impl = void 0;
const packList_1 = require("../../../../bridge/fix/packer/packList");
const class_1 = require("../class");
Object.defineProperty(exports, "mscorlib_System_Object_impl", { enumerable: true, get: function () { return class_1.mscorlib_System_Object_impl; } });
class InvokableCallList_impl extends class_1.mscorlib_System_Object_impl {
    m_ExecutingCalls = new packList_1.PackList(lfv(this.handle, "m_ExecutingCalls", findClass("InvokableCallList")));
    m_NeedsUpdate = lfv(this.handle, "m_NeedsUpdate", findClass("InvokableCallList"));
    m_PersistentCalls = new packList_1.PackList(lfv(this.handle, "m_PersistentCalls", findClass("InvokableCallList")));
    m_RuntimeCalls = new packList_1.PackList(lfv(this.handle, "m_RuntimeCalls", findClass("InvokableCallList")));
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static get ctor_0() {
        return new InvokableCallList_impl(mscorlib.Api.InvokableCallList._ctor_0(alloc()));
    }
    AddListener(call) {
        return new mscorlib.Api.InvokableCallList._AddListener(this.handle, call);
    }
    ClearPersistent() {
        return new mscorlib.Api.InvokableCallList._ClearPersistent(this.handle);
    }
    PrepareInvoke() {
        return new mscorlib.Api.InvokableCallList._PrepareInvoke(this.handle);
    }
    RemoveListener_2(target, method) {
        return new mscorlib.Api.InvokableCallList._RemoveListener(this.handle, target, method);
    }
}
exports.InvokableCallList_impl = InvokableCallList_impl;
mscorlib.InvokableCallList = InvokableCallList_impl;
},{"../../../../bridge/fix/packer/packList":23,"../class":304}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":78,"./class":79}],81:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Logger_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", ".ctor", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_logHandler() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "get_logHandler", 0, "pointer", ["pointer"]);
    }
    static get _set_logHandler() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "set_logHandler", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_logEnabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "get_logEnabled", 0, "pointer", ["pointer"]);
    }
    static get _set_logEnabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "set_logEnabled", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_filterLogType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "get_filterLogType", 0, "pointer", ["pointer"]);
    }
    static get _set_filterLogType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "set_filterLogType", 1, "void", ["pointer", "pointer"]);
    }
    static get _IsLogTypeAllowed() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "IsLogTypeAllowed", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "GetString", 1, "pointer", ["pointer"]);
    }
    static get _Log() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "Log", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Log_logType_message_context() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Logger", "Log", 3, ["UnityEngine.LogType", "System.Object", "UnityEngine.Object"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _LogFormat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "LogFormat", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _LogFormat_logType_context_format_args() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Logger", "LogFormat", 4, ["UnityEngine.LogType", "UnityEngine.Object", "System.String", "System.Object[]"], "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _LogException() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Logger", "LogException", 2, "void", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_get_logHandler", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_set_logHandler", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_get_logEnabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_set_logEnabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_get_filterLogType", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_set_filterLogType", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_IsLogTypeAllowed", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_GetString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_Log", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_Log_logType_message_context", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_LogFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_LogFormat_logType_context_format_args", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Logger_API, "_LogException", null);
Il2Cpp.Api.Logger = UnityEngine_Logger_API;
},{"decorator-cache-getter":338}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Logger_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Logger_Impl extends class_1.mscorlib_System_Object_impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor(logHandler) {
        return Il2Cpp.Api.Logger.__ctor(this.handle, logHandler);
    }
    get_logHandler() {
        return Il2Cpp.Api.Logger._get_logHandler(this.handle);
    }
    set_logHandler(value) {
        return Il2Cpp.Api.Logger._set_logHandler(this.handle, value);
    }
    get_logEnabled() {
        return Il2Cpp.Api.Logger._get_logEnabled(this.handle);
    }
    set_logEnabled(value) {
        return Il2Cpp.Api.Logger._set_logEnabled(this.handle, value);
    }
    get_filterLogType() {
        return Il2Cpp.Api.Logger._get_filterLogType(this.handle);
    }
    set_filterLogType(value) {
        return Il2Cpp.Api.Logger._set_filterLogType(this.handle, value);
    }
    IsLogTypeAllowed(logType) {
        return Il2Cpp.Api.Logger._IsLogTypeAllowed(this.handle, logType);
    }
    static GetString(message) {
        return readU16(Il2Cpp.Api.Logger._GetString(message));
    }
    Log(logType, message) {
        return Il2Cpp.Api.Logger._Log(this.handle, logType, message);
    }
    Log_3(logType, message, context) {
        return Il2Cpp.Api.Logger._Log(this.handle, logType, message, context);
    }
    LogFormat(logType, format, args) {
        return Il2Cpp.Api.Logger._LogFormat(this.handle, logType, format, args);
    }
    LogFormat_4(logType, context, format, args) {
        return Il2Cpp.Api.Logger._LogFormat(this.handle, logType, context, format, args);
    }
    LogException(exception, context) {
        return Il2Cpp.Api.Logger._LogException(this.handle, exception, context);
    }
}
exports.UnityEngine_Logger_Impl = UnityEngine_Logger_Impl;
Il2Cpp.Logger = UnityEngine_Logger_Impl;
},{"../class":304}],83:[function(require,module,exports){
"use strict";
var UnityEngine_LogType;
(function (UnityEngine_LogType) {
    UnityEngine_LogType[UnityEngine_LogType["Assert"] = 1] = "Assert";
    UnityEngine_LogType[UnityEngine_LogType["Error"] = 0] = "Error";
    UnityEngine_LogType[UnityEngine_LogType["Exception"] = 4] = "Exception";
    UnityEngine_LogType[UnityEngine_LogType["Log"] = 3] = "Log";
    UnityEngine_LogType[UnityEngine_LogType["Warning"] = 2] = "Warning";
})(UnityEngine_LogType || (UnityEngine_LogType = {}));
},{}],84:[function(require,module,exports){
"use strict";
},{}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
require("./enum");
},{"./api":81,"./class":82,"./enum":83,"./export":84}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ModuleApi {
    static get _cctor() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "cctor", 0, "void", []);
    }
    static get _ctor() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", ".ctor", 0, "void", ["pointer"]);
    }
    static get _CreateNIE() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "CreateNIE", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "Equals", 0, "bool", ["pointer", "pointer"]);
    }
    static get _filter_by_type_name() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "filter_by_type_name", 2, "bool", ["pointer", "pointer", "pointer"]);
    }
    static get _filter_by_type_name_ignore_case() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "filter_by_type_name_ignore_case", 2, "bool", ["pointer", "pointer", "pointer"]);
    }
    static get _GetCustomAttributes() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetCustomAttributes", 1, "pointer", ["pointer", "bool"]);
    }
    static get _GetCustomAttributes_1() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetCustomAttributes", 2, "pointer", ["pointer", "pointer", "bool"]);
    }
    static get _GetGuidInternal() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetGuidInternal", 0, "pointer", ["pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetHashCode", 0, "int32", ["pointer"]);
    }
    static get _GetModuleVersionId() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetModuleVersionId", 0, "pointer", ["pointer"]);
    }
    static get _GetObjectData() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "GetObjectData", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _IsDefined() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "IsDefined", 2, "bool", ["pointer", "pointer", "bool"]);
    }
    static get _IsResource() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "IsResource", 0, "bool", ["pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "op_Equality", 2, "bool", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _get_Assembly() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Assembly", 0, "pointer", ["pointer"]);
    }
    static get _get_ModuleVersionId() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_ModuleVersionId", 0, "pointer", ["pointer"]);
    }
    static get _get_ScopeName() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_ScopeName", 0, "pointer", ["pointer"]);
    }
}
mscorlib.Api.Module = ModuleApi;
},{}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_Reflection_Module_impl = void 0;
const class_1 = require("../Type/class");
class mscorlib_System_Reflection_Module_impl extends class_1.mscorlib_System_Type_impl {
    inter = lfv(this.handle, "_impl");
    assembly = lfv(this.handle, "assembly", findClass("Module", ["mscorlib"]));
    defaultBindingFlags = lfv(this.handle, "defaultBindingFlags");
    FilterTypeName = lfv(this.handle, "FilterTypeName");
    FilterTypeNameIgnoreCase = lfv(this.handle, "FilterTypeNameIgnoreCase");
    fqname = readU16(lfv(this.handle, "fqname"));
    is_resource = lfv(this.handle, "is_resource");
    _name = readU16(lfv(this.handle, "name"));
    scopename = readU16(lfv(this.handle, "scopename"));
    token = lfv(this.handle, "token");
    static get ctor() {
        return new mscorlib_System_Reflection_Module_impl(mscorlib.Api.Module._ctor(alloc()));
    }
    static get _cctor() {
        return new mscorlib_System_Reflection_Module_impl(mscorlib.Api.Module._cctor(alloc()));
    }
    CreateNIE() {
        return mscorlib.Api.Module._CreateNIE(this.handle);
    }
    Equals(other) {
        return mscorlib.Api.Module._Equals(this.handle, other);
    }
    filter_by_type_name(type, obj) {
        return mscorlib.Api.Module._filter_by_type_name(this.handle, type.handle, obj);
    }
    filter_by_type_name_ignore_case(type, obj) {
        return mscorlib.Api.Module._filter_by_type_name_ignore_case(this.handle, type.handle, obj);
    }
    GetCustomAttributes_1(inherit) {
        return mscorlib.Api.Module._GetCustomAttributes(this.handle, inherit);
    }
    GetCustomAttributes_2(type, inherit) {
        return mscorlib.Api.Module._GetCustomAttributes_1(this.handle, type.handle, inherit);
    }
    GetGuidInternal() {
        return readU16(mscorlib.Api.Module._GetGuidInternal(this.handle));
    }
    GetHashCode() {
        return mscorlib.Api.Module._GetHashCode(this.handle);
    }
    GetModuleVersionId() {
        return mscorlib.Api.Module._GetModuleVersionId(this.handle);
    }
    GetObjectData(info, context) {
        return mscorlib.Api.Module._GetObjectData(this.handle, info, context);
    }
    IsDefined(type, inherit) {
        return mscorlib.Api.Module._IsDefined(this.handle, type.handle, inherit);
    }
    IsResource() {
        return mscorlib.Api.Module._IsResource(this.handle);
    }
    op_Equality(other) {
        return mscorlib.Api.Module._op_Equality(this.handle, other.handle);
    }
    ToString() {
        return readU16(mscorlib.Api.Module._ToString(this.handle));
    }
    get_Assembly() {
        return mscorlib.Api.Module._get_Assembly(this.handle);
    }
    get_ModuleVersionId() {
        return mscorlib.Api.Module._get_ModuleVersionId(this.handle);
    }
    get_ScopeName() {
        return readU16(mscorlib.Api.Module._get_ScopeName(this.handle));
    }
}
exports.mscorlib_System_Reflection_Module_impl = mscorlib_System_Reflection_Module_impl;
mscorlib.Module = mscorlib_System_Reflection_Module_impl;
},{"../Type/class":216}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":86,"./class":87}],89:[function(require,module,exports){
"use strict";
},{}],90:[function(require,module,exports){
"use strict";
},{}],91:[function(require,module,exports){
"use strict";
},{}],92:[function(require,module,exports){
"use strict";
},{}],93:[function(require,module,exports){
"use strict";
},{}],94:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Camera_API {
    static get _get_nearClipPlane() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_nearClipPlane", 0, "pointer", ["pointer"]);
    }
    static get _set_nearClipPlane() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_nearClipPlane", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_farClipPlane() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_farClipPlane", 0, "pointer", ["pointer"]);
    }
    static get _set_farClipPlane() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_farClipPlane", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_fieldOfView() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_fieldOfView", 0, "pointer", ["pointer"]);
    }
    static get _set_fieldOfView() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_fieldOfView", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_orthographicSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_orthographicSize", 0, "pointer", ["pointer"]);
    }
    static get _set_orthographicSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_orthographicSize", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_orthographic() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_orthographic", 0, "pointer", ["pointer"]);
    }
    static get _get_depth() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_depth", 0, "pointer", ["pointer"]);
    }
    static get _get_aspect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_aspect", 0, "pointer", ["pointer"]);
    }
    static get _set_aspect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_aspect", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_cullingMask() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_cullingMask", 0, "pointer", ["pointer"]);
    }
    static get _get_eventMask() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_eventMask", 0, "pointer", ["pointer"]);
    }
    static get _get_backgroundColor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_backgroundColor", 0, "pointer", ["pointer"]);
    }
    static get _set_backgroundColor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_backgroundColor", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_clearFlags() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_clearFlags", 0, "pointer", ["pointer"]);
    }
    static get _set_depthTextureMode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_depthTextureMode", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_usePhysicalProperties() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_usePhysicalProperties", 0, "pointer", ["pointer"]);
    }
    static get _set_usePhysicalProperties() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_usePhysicalProperties", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_sensorSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_sensorSize", 0, "pointer", ["pointer"]);
    }
    static get _get_lensShift() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_lensShift", 0, "pointer", ["pointer"]);
    }
    static get _set_lensShift() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_lensShift", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_rect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_rect", 0, "pointer", ["pointer"]);
    }
    static get _set_rect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_rect", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_pixelRect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelRect", 0, "pointer", ["pointer"]);
    }
    static get _set_pixelRect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_pixelRect", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_pixelWidth() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelWidth", 0, "pointer", ["pointer"]);
    }
    static get _get_pixelHeight() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelHeight", 0, "pointer", ["pointer"]);
    }
    static get _get_targetTexture() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_targetTexture", 0, "pointer", ["pointer"]);
    }
    static get _get_targetDisplay() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_targetDisplay", 0, "pointer", ["pointer"]);
    }
    static get _get_cameraToWorldMatrix() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_cameraToWorldMatrix", 0, "pointer", ["pointer"]);
    }
    static get _get_projectionMatrix() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_projectionMatrix", 0, "pointer", ["pointer"]);
    }
    static get _WorldToScreenPoint() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "WorldToScreenPoint", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ViewportToWorldPoint() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportToWorldPoint", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ScreenToWorldPoint() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToWorldPoint", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _WorldToScreenPoint_position() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "WorldToScreenPoint", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _ViewportToWorldPoint_position() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportToWorldPoint", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _ScreenToWorldPoint_position() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToWorldPoint", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _ScreenToViewportPoint() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToViewportPoint", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _ViewportPointToRay() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ViewportPointToRay_pos_eye() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay", 2, ["UnityEngine.Vector3", "UnityEngine.Camera.MonoOrStereoscopicEye"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ViewportPointToRay_pos() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _ScreenPointToRay() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ScreenPointToRay_pos_eye() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay", 2, ["UnityEngine.Vector3", "UnityEngine.Camera.MonoOrStereoscopicEye"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ScreenPointToRay_pos() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _get_main() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_main", 0, "pointer", []);
    }
    static get _get_current() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_current", 0, "pointer", []);
    }
    static get _get_stereoEnabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_stereoEnabled", 0, "pointer", ["pointer"]);
    }
    static get _GetAllCamerasCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "GetAllCamerasCount", 0, "pointer", []);
    }
    static get _GetAllCamerasImpl() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "GetAllCamerasImpl", 1, "pointer", ["pointer"]);
    }
    static get _get_allCamerasCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_allCamerasCount", 0, "pointer", []);
    }
    static get _GetAllCameras() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "GetAllCameras", 1, "pointer", ["pointer"]);
    }
    static get _FireOnPreCull() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "FireOnPreCull", 1, "void", ["pointer"]);
    }
    static get _FireOnPreRender() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "FireOnPreRender", 1, "void", ["pointer"]);
    }
    static get _FireOnPostRender() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "FireOnPostRender", 1, "void", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", ".ctor", 0, "void", ["pointer"]);
    }
    static get _get_backgroundColor_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_backgroundColor_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _set_backgroundColor_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_backgroundColor_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_sensorSize_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_sensorSize_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_lensShift_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_lensShift_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _set_lensShift_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_lensShift_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_rect_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_rect_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _set_rect_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_rect_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_pixelRect_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_pixelRect_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _set_pixelRect_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "set_pixelRect_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_cameraToWorldMatrix_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_cameraToWorldMatrix_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_projectionMatrix_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "get_projectionMatrix_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _WorldToScreenPoint_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "WorldToScreenPoint_Injected", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ViewportToWorldPoint_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportToWorldPoint_Injected", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ScreenToWorldPoint_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToWorldPoint_Injected", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ScreenToViewportPoint_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenToViewportPoint_Injected", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _ViewportPointToRay_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ViewportPointToRay_Injected", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ScreenPointToRay_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Camera", "ScreenPointToRay_Injected", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_nearClipPlane", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_nearClipPlane", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_farClipPlane", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_farClipPlane", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_fieldOfView", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_fieldOfView", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_orthographicSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_orthographicSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_orthographic", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_depth", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_aspect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_aspect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_cullingMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_eventMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_backgroundColor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_backgroundColor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_clearFlags", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_depthTextureMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_usePhysicalProperties", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_usePhysicalProperties", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_sensorSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_lensShift", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_lensShift", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_rect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_rect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_pixelRect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_pixelRect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_pixelWidth", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_pixelHeight", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_targetTexture", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_targetDisplay", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_cameraToWorldMatrix", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_projectionMatrix", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_WorldToScreenPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportToWorldPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenToWorldPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_WorldToScreenPoint_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportToWorldPoint_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenToWorldPoint_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenToViewportPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportPointToRay", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportPointToRay_pos_eye", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportPointToRay_pos", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenPointToRay", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenPointToRay_pos_eye", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenPointToRay_pos", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_main", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_current", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_stereoEnabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_GetAllCamerasCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_GetAllCamerasImpl", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_allCamerasCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_GetAllCameras", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_FireOnPreCull", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_FireOnPreRender", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_FireOnPostRender", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_backgroundColor_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_backgroundColor_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_sensorSize_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_lensShift_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_lensShift_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_rect_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_rect_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_pixelRect_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_set_pixelRect_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_cameraToWorldMatrix_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_get_projectionMatrix_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_WorldToScreenPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportToWorldPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenToWorldPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenToViewportPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ViewportPointToRay_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Camera_API, "_ScreenPointToRay_Injected", null);
Il2Cpp.Api.Camera = UnityEngine_Camera_API;
},{"decorator-cache-getter":338}],95:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Camera_Impl = void 0;
const class_1 = require("../../../../ValueType/Color/class");
const class_2 = require("../../../../ValueType/Matrix4x4/class");
const class_3 = require("../../../../ValueType/Vector2/class");
const class_4 = require("../../../../ValueType/Vector3/class");
const class_5 = require("../class");
class UnityEngine_Camera_Impl extends class_5.UnityEngine_Behaviour_Impl {
    onPreCull = lfv(this.handle, "onPreCull");
    onPreRender = lfv(this.handle, "onPreRender");
    onPostRender = lfv(this.handle, "onPostRender");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_nearClipPlane() {
        return Il2Cpp.Api.Camera._get_nearClipPlane(this.handle);
    }
    set_nearClipPlane(value) {
        return Il2Cpp.Api.Camera._set_nearClipPlane(this.handle, value);
    }
    get_farClipPlane() {
        return Il2Cpp.Api.Camera._get_farClipPlane(this.handle);
    }
    set_farClipPlane(value) {
        return Il2Cpp.Api.Camera._set_farClipPlane(this.handle, value);
    }
    get_fieldOfView() {
        return Il2Cpp.Api.Camera._get_fieldOfView(this.handle);
    }
    set_fieldOfView(value) {
        return Il2Cpp.Api.Camera._set_fieldOfView(this.handle, value);
    }
    get_orthographicSize() {
        return Il2Cpp.Api.Camera._get_orthographicSize(this.handle);
    }
    set_orthographicSize(value) {
        return Il2Cpp.Api.Camera._set_orthographicSize(this.handle, value);
    }
    get_orthographic() {
        return Il2Cpp.Api.Camera._get_orthographic(this.handle);
    }
    get_depth() {
        return Il2Cpp.Api.Camera._get_depth(this.handle);
    }
    get_aspect() {
        return Il2Cpp.Api.Camera._get_aspect(this.handle);
    }
    set_aspect(value) {
        return Il2Cpp.Api.Camera._set_aspect(this.handle, value);
    }
    get_cullingMask() {
        return Il2Cpp.Api.Camera._get_cullingMask(this.handle);
    }
    get_eventMask() {
        return Il2Cpp.Api.Camera._get_eventMask(this.handle);
    }
    get_backgroundColor() {
        return new class_1.UnityEngine_Color_Impl(Il2Cpp.Api.Camera._get_backgroundColor(this.handle));
    }
    set_backgroundColor(value) {
        return Il2Cpp.Api.Camera._set_backgroundColor(this.handle, value.handle);
    }
    get_clearFlags() {
        return Il2Cpp.Api.Camera._get_clearFlags(this.handle);
    }
    set_depthTextureMode(value) {
        return Il2Cpp.Api.Camera._set_depthTextureMode(this.handle, value);
    }
    get_usePhysicalProperties() {
        return Il2Cpp.Api.Camera._get_usePhysicalProperties(this.handle);
    }
    set_usePhysicalProperties(value) {
        return Il2Cpp.Api.Camera._set_usePhysicalProperties(this.handle, value);
    }
    get_sensorSize() {
        return new class_3.UnityEngine_Vector2_Impl(Il2Cpp.Api.Camera._get_sensorSize(this.handle));
    }
    get_lensShift() {
        return new class_3.UnityEngine_Vector2_Impl(Il2Cpp.Api.Camera._get_lensShift(this.handle));
    }
    set_lensShift(value) {
        return Il2Cpp.Api.Camera._set_lensShift(this.handle, value.handle);
    }
    get_rect() {
        return Il2Cpp.Api.Camera._get_rect(this.handle);
    }
    set_rect(value) {
        return Il2Cpp.Api.Camera._set_rect(this.handle, value);
    }
    get_pixelRect() {
        return Il2Cpp.Api.Camera._get_pixelRect(this.handle);
    }
    set_pixelRect(value) {
        return Il2Cpp.Api.Camera._set_pixelRect(this.handle, value);
    }
    get_pixelWidth() {
        return Il2Cpp.Api.Camera._get_pixelWidth(this.handle);
    }
    get_pixelHeight() {
        return Il2Cpp.Api.Camera._get_pixelHeight(this.handle);
    }
    get_targetTexture() {
        return Il2Cpp.Api.Camera._get_targetTexture(this.handle);
    }
    get_targetDisplay() {
        return Il2Cpp.Api.Camera._get_targetDisplay(this.handle);
    }
    get_cameraToWorldMatrix() {
        return new class_2.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Camera._get_cameraToWorldMatrix(this.handle));
    }
    get_projectionMatrix() {
        return new class_2.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Camera._get_projectionMatrix(this.handle));
    }
    WorldToScreenPoint(position, eye) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._WorldToScreenPoint(this.handle, position, eye));
    }
    ViewportToWorldPoint(position, eye) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ViewportToWorldPoint(this.handle, position, eye));
    }
    ScreenToWorldPoint(position, eye) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ScreenToWorldPoint(this.handle, position, eye));
    }
    WorldToScreenPoint_1(position) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._WorldToScreenPoint(this.handle, position));
    }
    ViewportToWorldPoint_1(position) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ViewportToWorldPoint(this.handle, position));
    }
    ScreenToWorldPoint_1(position) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ScreenToWorldPoint(this.handle, position));
    }
    ScreenToViewportPoint(position) {
        return new class_4.UnityEngine_Vector3_Impl(Il2Cpp.Api.Camera._ScreenToViewportPoint(this.handle, position));
    }
    ViewportPointToRay(pos, eye) {
        return Il2Cpp.Api.Camera._ViewportPointToRay(this.handle, pos, eye);
    }
    ViewportPointToRay_2(pos, eye) {
        return Il2Cpp.Api.Camera._ViewportPointToRay(this.handle, pos, eye);
    }
    ViewportPointToRay_1(pos) {
        return Il2Cpp.Api.Camera._ViewportPointToRay(this.handle, pos);
    }
    ScreenPointToRay(pos, eye) {
        return Il2Cpp.Api.Camera._ScreenPointToRay(this.handle, pos, eye);
    }
    ScreenPointToRay_2(pos, eye) {
        return Il2Cpp.Api.Camera._ScreenPointToRay(this.handle, pos, eye);
    }
    ScreenPointToRay_1(pos) {
        return Il2Cpp.Api.Camera._ScreenPointToRay(this.handle, pos);
    }
    static get_main() {
        return Il2Cpp.Api.Camera._get_main();
    }
    static get_current() {
        return Il2Cpp.Api.Camera._get_current();
    }
    get_stereoEnabled() {
        return Il2Cpp.Api.Camera._get_stereoEnabled(this.handle);
    }
    static GetAllCamerasCount() {
        return Il2Cpp.Api.Camera._GetAllCamerasCount();
    }
    static GetAllCamerasImpl(cam) {
        return Il2Cpp.Api.Camera._GetAllCamerasImpl(cam);
    }
    static get_allCamerasCount() {
        return Il2Cpp.Api.Camera._get_allCamerasCount();
    }
    static GetAllCameras(cameras) {
        return Il2Cpp.Api.Camera._GetAllCameras(cameras);
    }
    static FireOnPreCull(cam) {
        return Il2Cpp.Api.Camera._FireOnPreCull(cam);
    }
    static FireOnPreRender(cam) {
        return Il2Cpp.Api.Camera._FireOnPreRender(cam);
    }
    static FireOnPostRender(cam) {
        return Il2Cpp.Api.Camera._FireOnPostRender(cam);
    }
    _ctor() {
        return Il2Cpp.Api.Camera.__ctor(this.handle);
    }
    get_backgroundColor_Injected(ret) {
        return Il2Cpp.Api.Camera._get_backgroundColor_Injected(this.handle, ret);
    }
    set_backgroundColor_Injected(value) {
        return Il2Cpp.Api.Camera._set_backgroundColor_Injected(this.handle, value);
    }
    get_sensorSize_Injected(ret) {
        return Il2Cpp.Api.Camera._get_sensorSize_Injected(this.handle, ret);
    }
    get_lensShift_Injected(ret) {
        return Il2Cpp.Api.Camera._get_lensShift_Injected(this.handle, ret);
    }
    set_lensShift_Injected(value) {
        return Il2Cpp.Api.Camera._set_lensShift_Injected(this.handle, value);
    }
    get_rect_Injected(ret) {
        return Il2Cpp.Api.Camera._get_rect_Injected(this.handle, ret);
    }
    set_rect_Injected(value) {
        return Il2Cpp.Api.Camera._set_rect_Injected(this.handle, value);
    }
    get_pixelRect_Injected(ret) {
        return Il2Cpp.Api.Camera._get_pixelRect_Injected(this.handle, ret);
    }
    set_pixelRect_Injected(value) {
        return Il2Cpp.Api.Camera._set_pixelRect_Injected(this.handle, value);
    }
    get_cameraToWorldMatrix_Injected(ret) {
        return Il2Cpp.Api.Camera._get_cameraToWorldMatrix_Injected(this.handle, ret);
    }
    get_projectionMatrix_Injected(ret) {
        return Il2Cpp.Api.Camera._get_projectionMatrix_Injected(this.handle, ret);
    }
    WorldToScreenPoint_Injected(position, eye, ret) {
        return Il2Cpp.Api.Camera._WorldToScreenPoint_Injected(this.handle, position, eye, ret);
    }
    ViewportToWorldPoint_Injected(position, eye, ret) {
        return Il2Cpp.Api.Camera._ViewportToWorldPoint_Injected(this.handle, position, eye, ret);
    }
    ScreenToWorldPoint_Injected(position, eye, ret) {
        return Il2Cpp.Api.Camera._ScreenToWorldPoint_Injected(this.handle, position, eye, ret);
    }
    ScreenToViewportPoint_Injected(position, ret) {
        return Il2Cpp.Api.Camera._ScreenToViewportPoint_Injected(this.handle, position, ret);
    }
    ViewportPointToRay_Injected(pos, eye, ret) {
        return Il2Cpp.Api.Camera._ViewportPointToRay_Injected(this.handle, pos, eye, ret);
    }
    ScreenPointToRay_Injected(pos, eye, ret) {
        return Il2Cpp.Api.Camera._ScreenPointToRay_Injected(this.handle, pos, eye, ret);
    }
}
exports.UnityEngine_Camera_Impl = UnityEngine_Camera_Impl;
Il2Cpp.Camera = UnityEngine_Camera_Impl;
},{"../../../../ValueType/Color/class":235,"../../../../ValueType/Matrix4x4/class":258,"../../../../ValueType/Vector2/class":282,"../../../../ValueType/Vector3/class":286,"../class":123}],96:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Camera_MonoOrStereoscopicEye = exports.UnityEngine_DepthTextureMode = exports.UnityEngine_CameraClearFlags = void 0;
var UnityEngine_CameraClearFlags;
(function (UnityEngine_CameraClearFlags) {
    UnityEngine_CameraClearFlags[UnityEngine_CameraClearFlags["Color"] = 2] = "Color";
    UnityEngine_CameraClearFlags[UnityEngine_CameraClearFlags["Depth"] = 3] = "Depth";
    UnityEngine_CameraClearFlags[UnityEngine_CameraClearFlags["Nothing"] = 4] = "Nothing";
    UnityEngine_CameraClearFlags[UnityEngine_CameraClearFlags["Skybox"] = 1] = "Skybox";
    UnityEngine_CameraClearFlags[UnityEngine_CameraClearFlags["SolidColor"] = 2] = "SolidColor";
})(UnityEngine_CameraClearFlags = exports.UnityEngine_CameraClearFlags || (exports.UnityEngine_CameraClearFlags = {}));
var UnityEngine_DepthTextureMode;
(function (UnityEngine_DepthTextureMode) {
    UnityEngine_DepthTextureMode[UnityEngine_DepthTextureMode["Depth"] = 1] = "Depth";
    UnityEngine_DepthTextureMode[UnityEngine_DepthTextureMode["DepthNormals"] = 2] = "DepthNormals";
    UnityEngine_DepthTextureMode[UnityEngine_DepthTextureMode["MotionVectors"] = 4] = "MotionVectors";
    UnityEngine_DepthTextureMode[UnityEngine_DepthTextureMode["None"] = 0] = "None";
})(UnityEngine_DepthTextureMode = exports.UnityEngine_DepthTextureMode || (exports.UnityEngine_DepthTextureMode = {}));
var UnityEngine_Camera_MonoOrStereoscopicEye;
(function (UnityEngine_Camera_MonoOrStereoscopicEye) {
    UnityEngine_Camera_MonoOrStereoscopicEye[UnityEngine_Camera_MonoOrStereoscopicEye["Left"] = 0] = "Left";
    UnityEngine_Camera_MonoOrStereoscopicEye[UnityEngine_Camera_MonoOrStereoscopicEye["Mono"] = 2] = "Mono";
    UnityEngine_Camera_MonoOrStereoscopicEye[UnityEngine_Camera_MonoOrStereoscopicEye["Right"] = 1] = "Right";
})(UnityEngine_Camera_MonoOrStereoscopicEye = exports.UnityEngine_Camera_MonoOrStereoscopicEye || (exports.UnityEngine_Camera_MonoOrStereoscopicEye = {}));
},{}],97:[function(require,module,exports){
"use strict";
},{}],98:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./enum");
require("./class");
require("./export");
},{"./api":94,"./class":95,"./enum":96,"./export":97}],99:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Canvas_API {
    static get _add_willRenderCanvases() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "add_willRenderCanvases", 1, ["UnityEngine.Canvas.WillRenderCanvases"], "void", ["pointer"]);
    }
    static get _remove_willRenderCanvases() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "remove_willRenderCanvases", 1, ["UnityEngine.Canvas.WillRenderCanvases"], "void", ["pointer"]);
    }
    static get _get_renderMode() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_renderMode", 0, [], "pointer", ["pointer"]);
    }
    static get _set_renderMode() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_renderMode", 1, ["UnityEngine.RenderMode"], "void", ["pointer", "pointer"]);
    }
    static get _get_isRootCanvas() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_isRootCanvas", 0, [], "pointer", ["pointer"]);
    }
    static get _get_scaleFactor() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_scaleFactor", 0, [], "pointer", ["pointer"]);
    }
    static get _set_scaleFactor() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_scaleFactor", 1, ["System.Single"], "void", ["pointer", "pointer"]);
    }
    static get _get_referencePixelsPerUnit() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_referencePixelsPerUnit", 0, [], "pointer", ["pointer"]);
    }
    static get _set_referencePixelsPerUnit() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_referencePixelsPerUnit", 1, ["System.Single"], "void", ["pointer", "pointer"]);
    }
    static get _get_pixelPerfect() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_pixelPerfect", 0, [], "pointer", ["pointer"]);
    }
    static get _get_renderOrder() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_renderOrder", 0, [], "pointer", ["pointer"]);
    }
    static get _get_overrideSorting() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_overrideSorting", 0, [], "pointer", ["pointer"]);
    }
    static get _set_overrideSorting() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_overrideSorting", 1, ["System.Boolean"], "void", ["pointer", "pointer"]);
    }
    static get _get_sortingOrder() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_sortingOrder", 0, [], "pointer", ["pointer"]);
    }
    static get _set_sortingOrder() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_sortingOrder", 1, ["System.Int32"], "void", ["pointer", "pointer"]);
    }
    static get _get_targetDisplay() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_targetDisplay", 0, [], "pointer", ["pointer"]);
    }
    static get _get_sortingLayerID() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_sortingLayerID", 0, [], "pointer", ["pointer"]);
    }
    static get _set_sortingLayerID() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_sortingLayerID", 1, ["System.Int32"], "void", ["pointer", "pointer"]);
    }
    static get _get_additionalShaderChannels() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_additionalShaderChannels", 0, [], "pointer", ["pointer"]);
    }
    static get _set_additionalShaderChannels() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_additionalShaderChannels", 1, ["UnityEngine.AdditionalCanvasShaderChannels"], "void", ["pointer", "pointer"]);
    }
    static get _get_rootCanvas() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_rootCanvas", 0, [], "pointer", ["pointer"]);
    }
    static get _get_worldCamera() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "get_worldCamera", 0, [], "pointer", ["pointer"]);
    }
    static get _set_worldCamera() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "set_worldCamera", 1, ["UnityEngine.Camera"], "void", ["pointer", "pointer"]);
    }
    static get _GetDefaultCanvasMaterial() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "GetDefaultCanvasMaterial", 0, [], "pointer", []);
    }
    static get _GetETC1SupportedCanvasMaterial() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "GetETC1SupportedCanvasMaterial", 0, [], "pointer", []);
    }
    static get _ForceUpdateCanvases() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "ForceUpdateCanvases", 0, [], "void", []);
    }
    static get _SendWillRenderCanvases() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", "SendWillRenderCanvases", 0, [], "void", []);
    }
    static get __ctor() {
        return Il2Cpp.Api.o("UnityEngine.UIModule", "UnityEngine.Canvas", ".ctor", 0, [], "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_add_willRenderCanvases", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_remove_willRenderCanvases", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_renderMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_renderMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_isRootCanvas", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_scaleFactor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_scaleFactor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_referencePixelsPerUnit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_referencePixelsPerUnit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_pixelPerfect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_renderOrder", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_overrideSorting", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_overrideSorting", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_sortingOrder", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_sortingOrder", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_targetDisplay", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_sortingLayerID", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_sortingLayerID", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_additionalShaderChannels", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_additionalShaderChannels", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_rootCanvas", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_get_worldCamera", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_set_worldCamera", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_GetDefaultCanvasMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_GetETC1SupportedCanvasMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_ForceUpdateCanvases", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "_SendWillRenderCanvases", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Canvas_API, "__ctor", null);
Il2Cpp.Api.Canvas = UnityEngine_Canvas_API;
},{"decorator-cache-getter":338}],100:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Canvas_Impl = void 0;
const class_1 = require("../../../Material/class");
const class_2 = require("../Camera/class");
const class_3 = require("../class");
class UnityEngine_Canvas_Impl extends class_3.UnityEngine_Behaviour_Impl {
    willRenderCanvases = lfv(this.handle, "willRenderCanvases");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static add_willRenderCanvases(value) {
        return Il2Cpp.Api.Canvas._add_willRenderCanvases(value);
    }
    static remove_willRenderCanvases(value) {
        return Il2Cpp.Api.Canvas._remove_willRenderCanvases(value);
    }
    get_renderMode() {
        return Il2Cpp.Api.Canvas._get_renderMode(this.handle);
    }
    set_renderMode(value) {
        return Il2Cpp.Api.Canvas._set_renderMode(this.handle, value);
    }
    get_isRootCanvas() {
        return Il2Cpp.Api.Canvas._get_isRootCanvas(this.handle);
    }
    get_scaleFactor() {
        return Il2Cpp.Api.Canvas._get_scaleFactor(this.handle);
    }
    set_scaleFactor(value) {
        return Il2Cpp.Api.Canvas._set_scaleFactor(this.handle, value);
    }
    get_referencePixelsPerUnit() {
        return Il2Cpp.Api.Canvas._get_referencePixelsPerUnit(this.handle);
    }
    set_referencePixelsPerUnit(value) {
        return Il2Cpp.Api.Canvas._set_referencePixelsPerUnit(this.handle, value);
    }
    get_pixelPerfect() {
        return Il2Cpp.Api.Canvas._get_pixelPerfect(this.handle);
    }
    get_renderOrder() {
        return Il2Cpp.Api.Canvas._get_renderOrder(this.handle);
    }
    get_overrideSorting() {
        return Il2Cpp.Api.Canvas._get_overrideSorting(this.handle);
    }
    set_overrideSorting(value) {
        return Il2Cpp.Api.Canvas._set_overrideSorting(this.handle, value);
    }
    get_sortingOrder() {
        return Il2Cpp.Api.Canvas._get_sortingOrder(this.handle);
    }
    set_sortingOrder(value) {
        return Il2Cpp.Api.Canvas._set_sortingOrder(this.handle, value);
    }
    get_targetDisplay() {
        return Il2Cpp.Api.Canvas._get_targetDisplay(this.handle);
    }
    get_sortingLayerID() {
        return Il2Cpp.Api.Canvas._get_sortingLayerID(this.handle);
    }
    set_sortingLayerID(value) {
        return Il2Cpp.Api.Canvas._set_sortingLayerID(this.handle, value);
    }
    get_additionalShaderChannels() {
        return Il2Cpp.Api.Canvas._get_additionalShaderChannels(this.handle);
    }
    set_additionalShaderChannels(value) {
        return Il2Cpp.Api.Canvas._set_additionalShaderChannels(this.handle, value);
    }
    get_rootCanvas() {
        return new UnityEngine_Canvas_Impl(Il2Cpp.Api.Canvas._get_rootCanvas(this.handle));
    }
    get_worldCamera() {
        return new class_2.UnityEngine_Camera_Impl(Il2Cpp.Api.Canvas._get_worldCamera(this.handle));
    }
    set_worldCamera(value) {
        return Il2Cpp.Api.Canvas._set_worldCamera(this.handle, value.handle);
    }
    static GetDefaultCanvasMaterial() {
        return new class_1.UnityEngine_Material_Impl(Il2Cpp.Api.Canvas._GetDefaultCanvasMaterial());
    }
    static GetETC1SupportedCanvasMaterial() {
        return new class_1.UnityEngine_Material_Impl(Il2Cpp.Api.Canvas._GetETC1SupportedCanvasMaterial());
    }
    static ForceUpdateCanvases() {
        return Il2Cpp.Api.Canvas._ForceUpdateCanvases();
    }
    static SendWillRenderCanvases() {
        return Il2Cpp.Api.Canvas._SendWillRenderCanvases();
    }
    _ctor() {
        return Il2Cpp.Api.Canvas.__ctor(alloc());
    }
}
exports.UnityEngine_Canvas_Impl = UnityEngine_Canvas_Impl;
Il2Cpp.Canvas = UnityEngine_Canvas_Impl;
},{"../../../Material/class":163,"../Camera/class":95,"../class":123}],101:[function(require,module,exports){
"use strict";
},{}],102:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":99,"./class":100,"./export":101}],103:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Light_API {
    static get _get_type() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_type", 0, "pointer", ["pointer"]);
    }
    static get _get_spotAngle() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_spotAngle", 0, "pointer", ["pointer"]);
    }
    static get _get_color() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_color", 0, "pointer", ["pointer"]);
    }
    static get _set_color() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "set_color", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_intensity() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_intensity", 0, "pointer", ["pointer"]);
    }
    static get _set_intensity() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "set_intensity", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_bounceIntensity() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_bounceIntensity", 0, "pointer", ["pointer"]);
    }
    static get _get_range() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_range", 0, "pointer", ["pointer"]);
    }
    static get _get_bakingOutput() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_bakingOutput", 0, "pointer", ["pointer"]);
    }
    static get _get_shadows() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_shadows", 0, "pointer", ["pointer"]);
    }
    static get _get_cookieSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_cookieSize", 0, "pointer", ["pointer"]);
    }
    static get _get_cookie() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_cookie", 0, "pointer", ["pointer"]);
    }
    static get _get_color_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_color_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _set_color_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "set_color_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_bakingOutput_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Light", "get_bakingOutput_Injected", 1, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_type", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_spotAngle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_color", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_set_color", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_intensity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_set_intensity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_bounceIntensity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_range", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_bakingOutput", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_shadows", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_cookieSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_cookie", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_color_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_set_color_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Light_API, "_get_bakingOutput_Injected", null);
Il2Cpp.Api.Light = UnityEngine_Light_API;
},{"decorator-cache-getter":338}],104:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Light_Impl = void 0;
const class_1 = require("../../../../ValueType/Color/class");
const class_2 = require("../../../Texture/class");
const class_3 = require("../class");
class UnityEngine_Light_Impl extends class_3.UnityEngine_Behaviour_Impl {
    m_BakedIndex = lfv(this.handle, "m_BakedIndex");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_type() {
        return Il2Cpp.Api.Light._get_type(this.handle);
    }
    get_spotAngle() {
        return Il2Cpp.Api.Light._get_spotAngle(this.handle);
    }
    get_color() {
        return new class_1.UnityEngine_Color_Impl(Il2Cpp.Api.Light._get_color(this.handle));
    }
    set_color(value) {
        return Il2Cpp.Api.Light._set_color(this.handle, value.handle);
    }
    get_intensity() {
        return Il2Cpp.Api.Light._get_intensity(this.handle);
    }
    set_intensity(value) {
        return Il2Cpp.Api.Light._set_intensity(this.handle, value);
    }
    get_bounceIntensity() {
        return Il2Cpp.Api.Light._get_bounceIntensity(this.handle);
    }
    get_range() {
        return Il2Cpp.Api.Light._get_range(this.handle);
    }
    get_bakingOutput() {
        return Il2Cpp.Api.Light._get_bakingOutput(this.handle);
    }
    get_shadows() {
        return Il2Cpp.Api.Light._get_shadows(this.handle);
    }
    get_cookieSize() {
        return Il2Cpp.Api.Light._get_cookieSize(this.handle);
    }
    get_cookie() {
        return new class_2.UnityEngine_Texture_Impl(Il2Cpp.Api.Light._get_cookie(this.handle));
    }
    get_color_Injected(ret) {
        return Il2Cpp.Api.Light._get_color_Injected(this.handle, ret.handle);
    }
    set_color_Injected(value) {
        return Il2Cpp.Api.Light._set_color_Injected(this.handle, value.handle);
    }
    get_bakingOutput_Injected(ret) {
        return Il2Cpp.Api.Light._get_bakingOutput_Injected(this.handle, ret);
    }
}
exports.UnityEngine_Light_Impl = UnityEngine_Light_Impl;
Il2Cpp.Light = UnityEngine_Light_Impl;
},{"../../../../ValueType/Color/class":235,"../../../Texture/class":173,"../class":123}],105:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_LightType = void 0;
var UnityEngine_LightType;
(function (UnityEngine_LightType) {
    UnityEngine_LightType[UnityEngine_LightType["Area"] = 3] = "Area";
    UnityEngine_LightType[UnityEngine_LightType["Directional"] = 1] = "Directional";
    UnityEngine_LightType[UnityEngine_LightType["Disc"] = 4] = "Disc";
    UnityEngine_LightType[UnityEngine_LightType["Point"] = 2] = "Point";
    UnityEngine_LightType[UnityEngine_LightType["Rectangle"] = 3] = "Rectangle";
    UnityEngine_LightType[UnityEngine_LightType["Spot"] = 0] = "Spot";
})(UnityEngine_LightType = exports.UnityEngine_LightType || (exports.UnityEngine_LightType = {}));
},{}],106:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./enum");
},{"./api":103,"./class":104,"./enum":105}],107:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class ButtonAPI {
    static get _ctor() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _OnFinishSubmit() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "OnFinishSubmit", 0, "pointer", ["pointer"]);
    }
    static get _OnPointerClick() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "OnPointerClick", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _OnSubmit() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "OnSubmit", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Press() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "Press", 0, "pointer", ["pointer"]);
    }
    static get _set_onClick() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "set_onClick", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _get_onClick() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Button", "get_onClick", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_OnFinishSubmit", null);
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_OnPointerClick", null);
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_OnSubmit", null);
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_Press", null);
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_set_onClick", null);
__decorate([
    decorator_cache_getter_1.cache
], ButtonAPI, "_get_onClick", null);
Il2Cpp.Api.Button = ButtonAPI;
},{"decorator-cache-getter":338}],108:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ButtonImpl = void 0;
const class_1 = require("../../../../../../UnityEventBase/UnityEvent/ButtonClickedEvent/class");
const class_2 = require("../class");
class ButtonImpl extends class_2.UnityEngine_UI_Selectable_Impl {
    m_OnClick = new class_1.UnityEngine_UI_Button_ButtonClickedEvent_Impl(lfv(this.handle, "m_OnClick"));
    static get ctor_0() {
        return new Il2Cpp.Button(Il2Cpp.Api.Button._ctor(alloc()));
    }
    OnFinishSubmit() {
        return Il2Cpp.Api.Button._OnFinishSubmit(this.handle);
    }
    OnPointerClick(PointerEventData) {
        return Il2Cpp.Api.Button._OnPointerClick(this.handle, PointerEventData.handle);
    }
    OnSubmit(BaseEventData) {
        return Il2Cpp.Api.Button._OnSubmit(this.handle, BaseEventData);
    }
    Press() {
        return Il2Cpp.Api.Button._Press(this.handle);
    }
    get_onClick() {
        return new class_1.UnityEngine_UI_Button_ButtonClickedEvent_Impl(Il2Cpp.Api.Button._get_onClick(this.handle));
    }
    set_onClick(ButtonClickedEvent) {
        return Il2Cpp.Api.Button._set_onClick(this.handle, ButtonClickedEvent);
    }
}
exports.ButtonImpl = ButtonImpl;
Il2Cpp.Button = ButtonImpl;
},{"../../../../../../UnityEventBase/UnityEvent/ButtonClickedEvent/class":219,"../class":112}],109:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HideClickedObj = exports.OnButtonClick = exports.OnPointerClick = void 0;
const class_1 = require("../../../../../../AbstractEventData/BaseEventData/PointerEventData/class");
const class_2 = require("../../../../../../Delegate/MulticastDelegate/UnityAction/class");
const class_3 = require("./class");
function OnPointerClick() {
    let funcAddr = undefined;
    switch (arguments[0]) {
        default:
            funcAddr = ptr(Il2Cpp.Api.Button._OnPointerClick);
            if (funcAddr == undefined || funcAddr.isNull())
                break;
            LOGE("\nEnable Hook OnPointerClick at " + funcAddr + "(" + funcAddr.sub(soAddr) + ")" + "\n");
            A(Il2Cpp.Api.Button._OnPointerClick, (args) => {
                LOGW("\n" + getLine(38));
                LOGD("public void OnPointerClick( " + args[0] + " , " + args[1] + " )");
                FakePointerEventData(args[1]);
            });
            break;
        case 0:
            funcAddr = find_method("UnityEngine.UI", "PointerInputModule", "DeselectIfSelectionChanged", 2);
            if (funcAddr.isNull())
                break;
            LOGE("\nEnable Hook DeselectIfSelectionChanged at " + funcAddr + "(" + funcAddr.sub(soAddr) + ")" + "\n");
            A(funcAddr, (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected void DeselectIfSelectionChanged(Ins = " + args[0] + " , GameObject = " + args[1] + " , BaseEventData(" + findClass("BaseEventData") + ") = " + args[2] + " )");
                if (!args[1].isNull())
                    showGameObject(args[1]);
            });
            break;
        case 1:
            funcAddr = find_method("UnityEngine.UI", "ScrollRect", "OnInitializePotentialDrag", 1);
            if (funcAddr.isNull())
                break;
            LOGE("\nEnable Hook OnInitializePotentialDrag at " + funcAddr + "(" + funcAddr.sub(soAddr) + ")" + "\n");
            A(funcAddr, (args) => {
                LOGW("\n" + getLine(38));
                LOGD("public void OnInitializePotentialDrag( " + args[0] + " , " + args[1] + " )");
                FakePointerEventData(args[1]);
            });
            break;
        case 2:
            A(find_method("UnityEngine.UI", "PointerInputModule", "ProcessMove", 1), (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected virtual Void ProcessMove( " + (args[1]) + " )");
                FakePointerEventData(args[1]);
            });
            break;
        case 3:
            A(find_method("UnityEngine.UI", "PointerInputModule", "ProcessDrag", 1), (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected virtual Void ProcessDrag( " + (args[1]) + " )");
                FakePointerEventData(args[1]);
            });
            break;
        case 4:
            A(find_method("UnityEngine.UI", "BaseInputModule", "HandlePointerExitAndEnter", 2), (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected virtual Void HandlePointerExitAndEnter( " + (args[1]) + " , " + (args[2]) + ")");
                FakePointerEventData(args[1]);
            });
            break;
        case 5:
            A(find_method("UnityEngine.UI", "PointerEventData", "set_pointerPress", 1), (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected virtual Void set_pointerPress( " + (args[1]) + " )");
                showGameObject(args[1]);
            });
            break;
        case 6:
            A(find_method("UnityEngine.UI", "PointerInputModule", "GetPointerData", 3), (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected virtual Void GetPointerData( " + (args[2]) + " )");
                showGameObject(args[1]);
                showEventData(args[2]);
            });
            break;
        case 7:
            A(find_method("UnityEngine.UI", "EventSystem", "RaycastAll", 2), (args) => {
                LOGW("\n" + getLine(38));
                LOGD(`protected virtual Void RaycastAll( ${args[0]} , ${args[1]} , ${args[2]} )`);
                FakePointerEventData(args[1]);
            });
            break;
        case 8:
            A(find_method("UnityEngine.UI", "PointerInputModule", "GetTouchPointerEventData", 3), (args) => { }, (ret) => {
                LOGW("\n" + getLine(38));
                LOGD(`protected virtual Void GetTouchPointerEventData `);
                FakePointerEventData(ret);
            });
        case 9:
            A(find_method("UnityEngine.UI", "Selectable", "OnPointerExit", 1), (args) => {
                LOGW("\n" + getLine(38));
                LOGD("protected virtual Void OnPointerExit( " + (args[1]) + " )");
                FakePointerEventData(args[1]);
            });
            break;
    }
    function FakePointerEventData(eventData) {
        if (eventData.isNull())
            return;
        let gameObj = new class_1.UnityEngine_EventSystems_PointerEventData_Impl(eventData).get_pointerEnter();
        if (!gameObj.handle.isNull())
            showGameObject(gameObj.handle);
    }
}
exports.OnPointerClick = OnPointerClick;
const OnButtonClick = () => {
    A(Il2Cpp.Api.Button._OnPointerClick, (args) => {
        let currentGameobj = getGameObjectPack(args[0]);
        let button = new class_3.ButtonImpl(args[0]);
        let pointerEventData = new class_1.UnityEngine_EventSystems_PointerEventData_Impl(args[1]);
        let buttonOnclickEvent = button.get_onClick();
        LOGD(`\n[*] ${pointerEventData.handle} ---> ${currentGameobj.get_name()} { G:${currentGameobj.handle} | T:${currentGameobj.get_transform().handle} }`);
        let exeCalls = buttonOnclickEvent.m_Calls.m_ExecutingCalls;
        let persistentCalls = buttonOnclickEvent.m_Calls.m_PersistentCalls;
        let runtimeCalls = buttonOnclickEvent.m_Calls.m_RuntimeCalls;
        let callsArray = [exeCalls, persistentCalls, runtimeCalls];
        setTimeout(() => {
            callsArray.forEach((callList) => {
                if (callList.get_Count() != 0)
                    LOGZ(`\t[+] ${callList}`);
                callList.forEach((instance, index) => {
                    let action = instance.field('Delegate').value;
                    let unityAction = new class_2.UnityEngine_Events_UnityAction_Impl(action.handle);
                    let method;
                    if (!unityAction.method.isNull()) {
                        method = new Il2Cpp.Method(unityAction.method);
                    }
                    else if (!unityAction.method_ptr.isNull()) {
                        method = AddressToMethod(unityAction.method_ptr, false);
                    }
                    else
                        throw new Error("unityAction.method is null");
                    LOGW(`\t\t[${index}] ${method.handle} -> ${method.relativeVirtualAddress} | ${method.class.image.assembly.name}.${method.class.name}.${method.name}`);
                });
            });
        });
    });
};
exports.OnButtonClick = OnButtonClick;
const HideClickedObj = (x, y) => {
    let m_ptr = find_method("UnityEngine.UI", "Button", "OnPointerClick", 1);
    let srcFunc = new NativeFunction(m_ptr, 'void', ['pointer', 'pointer', 'pointer', 'pointer']);
    Interceptor.revert(m_ptr);
    Interceptor.replace(m_ptr, new NativeCallback(function (arg0, pointerEventData, arg2, arg3) {
        srcFunc(arg0, pointerEventData, arg2, arg3);
        if (pointerEventData.isNull())
            return;
        let gameObj = new class_1.UnityEngine_EventSystems_PointerEventData_Impl(pointerEventData).get_pointerEnter();
        if (gameObj.get_name() === "Settings Button") {
        }
    }, 'void', ['pointer', 'pointer', 'pointer', 'pointer']));
    setClick(x, y);
};
exports.HideClickedObj = HideClickedObj;
globalThis.HookOnPointerClick = OnPointerClick;
globalThis.B_Button = OnButtonClick;
globalThis.HideClickedObj = HideClickedObj;
},{"../../../../../../AbstractEventData/BaseEventData/PointerEventData/class":30,"../../../../../../Delegate/MulticastDelegate/UnityAction/class":53,"./class":108}],110:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./export");
require("./class");
},{"./api":107,"./class":108,"./export":109}],111:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_UI_Selectable_API {
    static get _get_allSelectablesArray() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_allSelectablesArray", 0, "pointer", []);
    }
    static get _get_allSelectableCount() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_allSelectableCount", 0, "pointer", []);
    }
    static get _get_allSelectables() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_allSelectables", 0, "pointer", []);
    }
    static get _AllSelectablesNoAlloc() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "AllSelectablesNoAlloc", 1, "pointer", ["pointer"]);
    }
    static get _get_navigation() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_navigation", 0, "pointer", ["pointer"]);
    }
    static get _set_navigation() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_navigation", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_transition() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_transition", 0, "pointer", ["pointer"]);
    }
    static get _set_transition() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_transition", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_colors() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_colors", 0, "pointer", ["pointer"]);
    }
    static get _set_colors() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_colors", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_spriteState() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_spriteState", 0, "pointer", ["pointer"]);
    }
    static get _set_spriteState() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_spriteState", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_animationTriggers() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_animationTriggers", 0, "pointer", ["pointer"]);
    }
    static get _set_animationTriggers() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_animationTriggers", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_targetGraphic() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_targetGraphic", 0, "pointer", ["pointer"]);
    }
    static get _set_targetGraphic() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_targetGraphic", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_interactable() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_interactable", 0, "pointer", ["pointer"]);
    }
    static get _set_interactable() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_interactable", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_isPointerInside() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_isPointerInside", 0, "pointer", ["pointer"]);
    }
    static get _set_isPointerInside() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_isPointerInside", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_isPointerDown() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_isPointerDown", 0, "pointer", ["pointer"]);
    }
    static get _set_isPointerDown() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_isPointerDown", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_hasSelection() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_hasSelection", 0, "pointer", ["pointer"]);
    }
    static get _set_hasSelection() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_hasSelection", 1, "void", ["pointer", "pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", ".ctor", 0, "void", ["pointer"]);
    }
    static get _get_image() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_image", 0, "pointer", ["pointer"]);
    }
    static get _set_image() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "set_image", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_animator() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_animator", 0, "pointer", ["pointer"]);
    }
    static get _Awake() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "Awake", 0, "void", ["pointer"]);
    }
    static get _OnCanvasGroupChanged() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnCanvasGroupChanged", 0, "void", ["pointer"]);
    }
    static get _IsInteractable() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "IsInteractable", 0, "pointer", ["pointer"]);
    }
    static get _OnDidApplyAnimationProperties() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnDidApplyAnimationProperties", 0, "void", ["pointer"]);
    }
    static get _OnEnable() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnEnable", 0, "void", ["pointer"]);
    }
    static get _OnTransformParentChanged() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnTransformParentChanged", 0, "void", ["pointer"]);
    }
    static get _OnSetProperty() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnSetProperty", 0, "void", ["pointer"]);
    }
    static get _OnDisable() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnDisable", 0, "void", ["pointer"]);
    }
    static get _get_currentSelectionState() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "get_currentSelectionState", 0, "pointer", ["pointer"]);
    }
    static get _InstantClearState() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "InstantClearState", 0, "void", ["pointer"]);
    }
    static get _DoStateTransition() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "DoStateTransition", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _FindSelectable() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectable", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetPointOnRectEdge() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "GetPointOnRectEdge", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Navigate() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "Navigate", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _FindSelectableOnLeft() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnLeft", 0, "pointer", ["pointer"]);
    }
    static get _FindSelectableOnRight() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnRight", 0, "pointer", ["pointer"]);
    }
    static get _FindSelectableOnUp() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnUp", 0, "pointer", ["pointer"]);
    }
    static get _FindSelectableOnDown() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "FindSelectableOnDown", 0, "pointer", ["pointer"]);
    }
    static get _OnMove() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnMove", 1, "void", ["pointer", "pointer"]);
    }
    static get _StartColorTween() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "StartColorTween", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _DoSpriteSwap() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "DoSpriteSwap", 1, "void", ["pointer", "pointer"]);
    }
    static get _TriggerAnimation() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "TriggerAnimation", 1, "void", ["pointer", "pointer"]);
    }
    static get _IsHighlighted() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "IsHighlighted", 0, "pointer", ["pointer"]);
    }
    static get _IsPressed() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "IsPressed", 0, "pointer", ["pointer"]);
    }
    static get _EvaluateAndTransitionToSelectionState() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "EvaluateAndTransitionToSelectionState", 0, "void", ["pointer"]);
    }
    static get _OnPointerDown() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerDown", 1, "void", ["pointer", "pointer"]);
    }
    static get _OnPointerUp() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerUp", 1, "void", ["pointer", "pointer"]);
    }
    static get _OnPointerEnter() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerEnter", 1, "void", ["pointer", "pointer"]);
    }
    static get _OnPointerExit() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnPointerExit", 1, "void", ["pointer", "pointer"]);
    }
    static get _OnSelect() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnSelect", 1, "void", ["pointer", "pointer"]);
    }
    static get _OnDeselect() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "OnDeselect", 1, "void", ["pointer", "pointer"]);
    }
    static get _Select() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", "Select", 0, "void", ["pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.UI", "UnityEngine.UI.Selectable", ".cctor", 0, "void", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_allSelectablesArray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_allSelectableCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_allSelectables", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_AllSelectablesNoAlloc", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_navigation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_navigation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_transition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_transition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_colors", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_colors", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_spriteState", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_spriteState", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_animationTriggers", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_animationTriggers", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_targetGraphic", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_targetGraphic", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_interactable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_interactable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_isPointerInside", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_isPointerInside", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_isPointerDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_isPointerDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_hasSelection", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_hasSelection", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_image", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_set_image", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_animator", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_Awake", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnCanvasGroupChanged", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_IsInteractable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnDidApplyAnimationProperties", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnEnable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnTransformParentChanged", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnSetProperty", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnDisable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_get_currentSelectionState", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_InstantClearState", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_DoStateTransition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_FindSelectable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_GetPointOnRectEdge", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_Navigate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_FindSelectableOnLeft", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_FindSelectableOnRight", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_FindSelectableOnUp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_FindSelectableOnDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnMove", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_StartColorTween", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_DoSpriteSwap", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_TriggerAnimation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_IsHighlighted", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_IsPressed", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_EvaluateAndTransitionToSelectionState", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnPointerDown", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnPointerUp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnPointerEnter", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnPointerExit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnSelect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_OnDeselect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "_Select", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_UI_Selectable_API, "__cctor", null);
Il2Cpp.Api.Selectable = UnityEngine_UI_Selectable_API;
},{"decorator-cache-getter":338}],112:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_UI_Selectable_Impl = void 0;
const class_1 = require("../UIBehaviour/class");
class UnityEngine_UI_Selectable_Impl extends class_1.UnityEngine_EventSystems_UIBehaviour_Impl {
    s_SelectableCount = lfv(this.handle, "s_SelectableCount");
    m_EnableCalled = lfv(this.handle, "m_EnableCalled");
    m_Navigation = lfv(this.handle, "m_Navigation");
    m_Transition = lfv(this.handle, "m_Transition");
    m_Colors = lfv(this.handle, "m_Colors");
    m_SpriteState = lfv(this.handle, "m_SpriteState");
    m_AnimationTriggers = lfv(this.handle, "m_AnimationTriggers");
    m_Interactable = lfv(this.handle, "m_Interactable");
    m_TargetGraphic = lfv(this.handle, "m_TargetGraphic");
    m_GroupsAllowInteraction = lfv(this.handle, "m_GroupsAllowInteraction");
    m_CurrentIndex = lfv(this.handle, "m_CurrentIndex");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static get_allSelectablesArray() {
        return Il2Cpp.Api.Selectable._get_allSelectablesArray();
    }
    static get_allSelectableCount() {
        return Il2Cpp.Api.Selectable._get_allSelectableCount();
    }
    static get_allSelectables() {
        return Il2Cpp.Api.Selectable._get_allSelectables();
    }
    static AllSelectablesNoAlloc(selectables) {
        return Il2Cpp.Api.Selectable._AllSelectablesNoAlloc(selectables);
    }
    get_navigation() {
        return Il2Cpp.Api.Selectable._get_navigation(this.handle);
    }
    set_navigation(value) {
        return Il2Cpp.Api.Selectable._set_navigation(this.handle, value);
    }
    get_transition() {
        return Il2Cpp.Api.Selectable._get_transition(this.handle);
    }
    set_transition(value) {
        return Il2Cpp.Api.Selectable._set_transition(this.handle, value);
    }
    get_colors() {
        return Il2Cpp.Api.Selectable._get_colors(this.handle);
    }
    set_colors(value) {
        return Il2Cpp.Api.Selectable._set_colors(this.handle, value);
    }
    get_spriteState() {
        return Il2Cpp.Api.Selectable._get_spriteState(this.handle);
    }
    set_spriteState(value) {
        return Il2Cpp.Api.Selectable._set_spriteState(this.handle, value);
    }
    get_animationTriggers() {
        return Il2Cpp.Api.Selectable._get_animationTriggers(this.handle);
    }
    set_animationTriggers(value) {
        return Il2Cpp.Api.Selectable._set_animationTriggers(this.handle, value);
    }
    get_targetGraphic() {
        return Il2Cpp.Api.Selectable._get_targetGraphic(this.handle);
    }
    set_targetGraphic(value) {
        return Il2Cpp.Api.Selectable._set_targetGraphic(this.handle, value);
    }
    get_interactable() {
        return Il2Cpp.Api.Selectable._get_interactable(this.handle);
    }
    set_interactable(value) {
        return Il2Cpp.Api.Selectable._set_interactable(this.handle, value);
    }
    get_isPointerInside() {
        return Il2Cpp.Api.Selectable._get_isPointerInside(this.handle);
    }
    set_isPointerInside(value) {
        return Il2Cpp.Api.Selectable._set_isPointerInside(this.handle, value);
    }
    get_isPointerDown() {
        return Il2Cpp.Api.Selectable._get_isPointerDown(this.handle);
    }
    set_isPointerDown(value) {
        return Il2Cpp.Api.Selectable._set_isPointerDown(this.handle, value);
    }
    get_hasSelection() {
        return Il2Cpp.Api.Selectable._get_hasSelection(this.handle);
    }
    set_hasSelection(value) {
        return Il2Cpp.Api.Selectable._set_hasSelection(this.handle, value);
    }
    _ctor() {
        return Il2Cpp.Api.Selectable.__ctor(this.handle);
    }
    get_image() {
        return Il2Cpp.Api.Selectable._get_image(this.handle);
    }
    set_image(value) {
        return Il2Cpp.Api.Selectable._set_image(this.handle, value);
    }
    get_animator() {
        return Il2Cpp.Api.Selectable._get_animator(this.handle);
    }
    Awake() {
        return Il2Cpp.Api.Selectable._Awake(this.handle);
    }
    OnCanvasGroupChanged() {
        return Il2Cpp.Api.Selectable._OnCanvasGroupChanged(this.handle);
    }
    IsInteractable() {
        return Il2Cpp.Api.Selectable._IsInteractable(this.handle);
    }
    OnDidApplyAnimationProperties() {
        return Il2Cpp.Api.Selectable._OnDidApplyAnimationProperties(this.handle);
    }
    OnEnable() {
        return Il2Cpp.Api.Selectable._OnEnable(this.handle);
    }
    OnTransformParentChanged() {
        return Il2Cpp.Api.Selectable._OnTransformParentChanged(this.handle);
    }
    OnSetProperty() {
        return Il2Cpp.Api.Selectable._OnSetProperty(this.handle);
    }
    OnDisable() {
        return Il2Cpp.Api.Selectable._OnDisable(this.handle);
    }
    get_currentSelectionState() {
        return Il2Cpp.Api.Selectable._get_currentSelectionState(this.handle);
    }
    InstantClearState() {
        return Il2Cpp.Api.Selectable._InstantClearState(this.handle);
    }
    DoStateTransition(state, instant) {
        return Il2Cpp.Api.Selectable._DoStateTransition(this.handle, state, instant);
    }
    FindSelectable(dir) {
        return Il2Cpp.Api.Selectable._FindSelectable(this.handle, dir);
    }
    static GetPointOnRectEdge(rect, dir) {
        return Il2Cpp.Api.Selectable._GetPointOnRectEdge(rect, dir);
    }
    Navigate(eventData, sel) {
        return Il2Cpp.Api.Selectable._Navigate(this.handle, eventData, sel);
    }
    FindSelectableOnLeft() {
        return Il2Cpp.Api.Selectable._FindSelectableOnLeft(this.handle);
    }
    FindSelectableOnRight() {
        return Il2Cpp.Api.Selectable._FindSelectableOnRight(this.handle);
    }
    FindSelectableOnUp() {
        return Il2Cpp.Api.Selectable._FindSelectableOnUp(this.handle);
    }
    FindSelectableOnDown() {
        return Il2Cpp.Api.Selectable._FindSelectableOnDown(this.handle);
    }
    OnMove(eventData) {
        return Il2Cpp.Api.Selectable._OnMove(this.handle, eventData);
    }
    StartColorTween(targetColor, instant) {
        return Il2Cpp.Api.Selectable._StartColorTween(this.handle, targetColor, instant);
    }
    DoSpriteSwap(newSprite) {
        return Il2Cpp.Api.Selectable._DoSpriteSwap(this.handle, newSprite);
    }
    TriggerAnimation(triggername) {
        return Il2Cpp.Api.Selectable._TriggerAnimation(this.handle, triggername);
    }
    IsHighlighted() {
        return Il2Cpp.Api.Selectable._IsHighlighted(this.handle);
    }
    IsPressed() {
        return Il2Cpp.Api.Selectable._IsPressed(this.handle);
    }
    EvaluateAndTransitionToSelectionState() {
        return Il2Cpp.Api.Selectable._EvaluateAndTransitionToSelectionState(this.handle);
    }
    OnPointerDown(eventData) {
        return Il2Cpp.Api.Selectable._OnPointerDown(this.handle, eventData);
    }
    OnPointerUp(eventData) {
        return Il2Cpp.Api.Selectable._OnPointerUp(this.handle, eventData);
    }
    OnPointerEnter(eventData) {
        return Il2Cpp.Api.Selectable._OnPointerEnter(this.handle, eventData);
    }
    OnPointerExit(eventData) {
        return Il2Cpp.Api.Selectable._OnPointerExit(this.handle, eventData);
    }
    OnSelect(eventData) {
        return Il2Cpp.Api.Selectable._OnSelect(this.handle, eventData);
    }
    OnDeselect(eventData) {
        return Il2Cpp.Api.Selectable._OnDeselect(this.handle, eventData);
    }
    Select() {
        return Il2Cpp.Api.Selectable._Select(this.handle);
    }
    static _cctor() {
        return Il2Cpp.Api.Selectable.__cctor();
    }
}
exports.UnityEngine_UI_Selectable_Impl = UnityEngine_UI_Selectable_Impl;
Il2Cpp.Selectable = UnityEngine_UI_Selectable_Impl;
},{"../UIBehaviour/class":115}],113:[function(require,module,exports){
"use strict";
},{}],114:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./Button/include");
require("./class");
require("./export");
require("./api");
},{"./Button/include":110,"./api":111,"./class":112,"./export":113}],115:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_EventSystems_UIBehaviour_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_EventSystems_UIBehaviour_Impl extends class_1.UnityEngine_MonoBehaviour_Impl {
    constructor(handle) {
        super(handle);
    }
    Awake() {
        return Il2Cpp.Api.UIBehaviour._Awake(this.handle);
    }
    OnEnable() {
        return Il2Cpp.Api.UIBehaviour._OnEnable(this.handle);
    }
    Start() {
        return Il2Cpp.Api.UIBehaviour._Start(this.handle);
    }
    OnDisable() {
        return Il2Cpp.Api.UIBehaviour._OnDisable(this.handle);
    }
    OnDestroy() {
        return Il2Cpp.Api.UIBehaviour._OnDestroy(this.handle);
    }
    IsActive() {
        return Il2Cpp.Api.UIBehaviour._IsActive(this.handle);
    }
    OnRectTransformDimensionsChange() {
        return Il2Cpp.Api.UIBehaviour._OnRectTransformDimensionsChange(this.handle);
    }
    OnBeforeTransformParentChanged() {
        return Il2Cpp.Api.UIBehaviour._OnBeforeTransformParentChanged(this.handle);
    }
    OnTransformParentChanged() {
        return Il2Cpp.Api.UIBehaviour._OnTransformParentChanged(this.handle);
    }
    OnDidApplyAnimationProperties() {
        return Il2Cpp.Api.UIBehaviour._OnDidApplyAnimationProperties(this.handle);
    }
    OnCanvasGroupChanged() {
        return Il2Cpp.Api.UIBehaviour._OnCanvasGroupChanged(this.handle);
    }
    OnCanvasHierarchyChanged() {
        return Il2Cpp.Api.UIBehaviour._OnCanvasHierarchyChanged(this.handle);
    }
    IsDestroyed() {
        return Il2Cpp.Api.UIBehaviour._IsDestroyed(this.handle);
    }
    _ctor() {
        return Il2Cpp.Api.UIBehaviour.__ctor(this.handle);
    }
}
exports.UnityEngine_EventSystems_UIBehaviour_Impl = UnityEngine_EventSystems_UIBehaviour_Impl;
},{"../class":117}],116:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class MonoBehaviourAPI {
    static get _ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _CancelInvoke() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "CancelInvoke", 0, "void", ["pointer"]);
    }
    static get _CancelInvoke_String() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "CancelInvoke", 1, "void", ["pointer", "pointer"]);
    }
    static get _InvokeRepeating() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "InvokeRepeating", 3, "void", ["pointer", "float", "float", "float"]);
    }
    static get _Invoke() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "Invoke", 2, "void", ["pointer", "float", "float"]);
    }
    static get _IsInvoking_String() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "IsInvoking", 1, "bool", ["pointer", "pointer"]);
    }
    static get _IsInvoking_0() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "IsInvoking", 0, "bool", ["pointer"]);
    }
    static get _print() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "print", 1, "void", ["pointer", "pointer"]);
    }
    static get _StartCoroutine_IEnumerator() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine", 1, ["System.Collections.IEnumerator"], "pointer", ["pointer", "pointer"]);
    }
    static get _StartCoroutine_String() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine", 1, ["System.String"], "pointer", ["pointer", "pointer"]);
    }
    static get _StartCoroutine_String_Object() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine", 2, ["System.String", "System.Object"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _StartCoroutine_Auto() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StartCoroutine_Auto", 1, ["System.Collections.IEnumerator"], "pointer", ["pointer", "pointer"]);
    }
    static get _StopAllCoroutines() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopAllCoroutines", 0, "void", ["pointer"]);
    }
    static get _StopCoroutine_Coroutine() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopCoroutine", 1, ["System.Collections.IEnumerator"], "void", ["pointer", "pointer"]);
    }
    static get _StopCoroutine_String() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopCoroutine", 1, ["System.String"], "void", ["pointer", "pointer"]);
    }
    static get _StopCoroutine_IEnumerator() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "StopCoroutine", 1, ["System.Collections.IEnumerator"], "void", ["pointer", "pointer"]);
    }
    static get _set_useGUILayout() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "set_useGUILayout", 1, "void", ["pointer", "bool"]);
    }
    static get _get_useGUILayout() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MonoBehaviour", "get_useGUILayout", 0, "bool", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_CancelInvoke", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_CancelInvoke_String", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_InvokeRepeating", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_Invoke", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_IsInvoking_String", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_IsInvoking_0", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_print", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StartCoroutine_IEnumerator", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StartCoroutine_String", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StartCoroutine_String_Object", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StartCoroutine_Auto", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StopAllCoroutines", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StopCoroutine_Coroutine", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StopCoroutine_String", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_StopCoroutine_IEnumerator", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_set_useGUILayout", null);
__decorate([
    decorator_cache_getter_1.cache
], MonoBehaviourAPI, "_get_useGUILayout", null);
Il2Cpp.Api.MonoBehaviour = MonoBehaviourAPI;
},{"decorator-cache-getter":338}],117:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_MonoBehaviour_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_MonoBehaviour_Impl extends class_1.UnityEngine_Behaviour_Impl {
    m_Transition = lfv(this.handle, "m_Transition");
    s_SelectableCount = lfv(this.handle, "s_SelectableCount");
    s_Selectables = lfv(this.handle, "s_Selectables");
    m_TargetGraphic = lfv(this.handle, "m_TargetGraphic");
    m_SpriteState = lfv(this.handle, "m_SpriteState");
    m_Navigation = lfv(this.handle, "m_Navigation");
    m_Interactable = lfv(this.handle, "m_Interactable");
    m_GroupsAllowInteraction = lfv(this.handle, "m_GroupsAllowInteraction");
    m_EnableCalled = lfv(this.handle, "m_EnableCalled");
    m_CurrentIndex = lfv(this.handle, "m_CurrentIndex");
    m_Colors = lfv(this.handle, "m_Colors");
    m_CanvasGroupCache = lfv(this.handle, "m_CanvasGroupCache");
    ctor_0() {
        return new UnityEngine_MonoBehaviour_Impl(Il2Cpp.Api.MonoBehaviour._ctor(alloc()));
    }
    CancelInvoke_0() {
        return Il2Cpp.Api.MonoBehaviour._CancelInvoke(this.handle);
    }
    CancelInvoke_methodName(methodName) {
        return Il2Cpp.Api.MonoBehaviour._CancelInvoke_String(this.handle, allocCStr(methodName));
    }
    InvokeRepeating(methodName, time, repeatRate) {
        return Il2Cpp.Api.MonoBehaviour._InvokeRepeating(this.handle, allocCStr(methodName), time, repeatRate);
    }
    Invoke(methodName, time) {
        return Il2Cpp.Api.MonoBehaviour._Invoke(this.handle, allocCStr(methodName), time);
    }
    IsInvoking_methodName(methodName) {
        return Il2Cpp.Api.MonoBehaviour._IsInvoking_String(this.handle, allocCStr(methodName));
    }
    IsInvoking_0() {
        return Il2Cpp.Api.MonoBehaviour._IsInvoking_0(this.handle);
    }
    print(obj) {
        return Il2Cpp.Api.MonoBehaviour._print(this.handle, obj);
    }
    StartCoroutine_enumerator(enumerator) {
        return Il2Cpp.Api.MonoBehaviour._StartCoroutine_IEnumerator(this.handle, enumerator);
    }
    StartCoroutine_methodName(methodName) {
        return Il2Cpp.Api.MonoBehaviour._StartCoroutine_String(this.handle, allocCStr(methodName));
    }
    StartCoroutine_methodName_obj(methodName, obj) {
        return Il2Cpp.Api.MonoBehaviour._StartCoroutine_String_Object(this.handle, allocCStr(methodName), obj);
    }
    StartCoroutine_Auto(enumerator) {
        return Il2Cpp.Api.MonoBehaviour._StartCoroutine_Auto(this.handle, enumerator);
    }
    StopAllCoroutines() {
        return Il2Cpp.Api.MonoBehaviour._StopAllCoroutines(this.handle);
    }
    StopCoroutine_coroutine(coroutine) {
        return Il2Cpp.Api.MonoBehaviour._StopCoroutine_Coroutine(this.handle, coroutine);
    }
    StopCoroutine_methodName(methodName) {
        return Il2Cpp.Api.MonoBehaviour._StopCoroutine_String(this.handle, allocCStr(methodName));
    }
    StopCoroutine_enumerator(enumerator) {
        return Il2Cpp.Api.MonoBehaviour._StopCoroutine_IEnumerator(this.handle, enumerator);
    }
    set_useGUILayout(value) {
        return Il2Cpp.Api.MonoBehaviour._set_useGUILayout(this.handle, value);
    }
    get_useGUILayout() {
        return Il2Cpp.Api.MonoBehaviour._get_useGUILayout(this.handle);
    }
}
exports.UnityEngine_MonoBehaviour_Impl = UnityEngine_MonoBehaviour_Impl;
Il2Cpp.MonoBehaviour = UnityEngine_MonoBehaviour_Impl;
},{"../class":123}],118:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
},{}],119:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./Selectable/include");
require("./api");
require("./class");
require("./export");
require("./interface");
},{"./Selectable/include":114,"./api":116,"./class":117,"./export":118,"./interface":120}],120:[function(require,module,exports){
"use strict";
},{}],121:[function(require,module,exports){
"use strict";
},{}],122:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Behaviour_API {
    static get _get_enabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", "get_enabled", 0, "pointer", ["pointer"]);
    }
    static get _set_enabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", "set_enabled", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_isActiveAndEnabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", "get_isActiveAndEnabled", 0, "pointer", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Behaviour", ".ctor", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Behaviour_API, "_get_enabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Behaviour_API, "_set_enabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Behaviour_API, "_get_isActiveAndEnabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Behaviour_API, "__ctor", null);
Il2Cpp.Api.Behaviour = UnityEngine_Behaviour_API;
},{"decorator-cache-getter":338}],123:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Behaviour_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Behaviour_Impl extends class_1.UnityEngine_Component_Impl {
    constructor(handle) {
        super(handle);
    }
    get_enabled() {
        return !Il2Cpp.Api.Behaviour._get_enabled(this.handle).isNull();
    }
    set_enabled(value) {
        return Il2Cpp.Api.Behaviour._set_enabled(this.handle, value ? ptr(1) : ptr(0));
    }
    get_isActiveAndEnabled() {
        return !Il2Cpp.Api.Behaviour._get_isActiveAndEnabled(this.handle).isNull();
    }
    _ctor() {
        return Il2Cpp.Api.Behaviour.__ctor(alloc());
    }
}
exports.UnityEngine_Behaviour_Impl = UnityEngine_Behaviour_Impl;
Il2Cpp.Behaviour = UnityEngine_Behaviour_Impl;
},{"../class":154}],124:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./Animation/include");
require("./Animator/include");
require("./AudioSourse/include");
require("./Camera/include");
require("./Canvas/include");
require("./Light/include");
require("./MonoBehaviour/include");
require("./NetworkView/include");
},{"./Animation/include":91,"./Animator/include":92,"./AudioSourse/include":93,"./Camera/include":98,"./Canvas/include":102,"./Light/include":106,"./MonoBehaviour/include":119,"./NetworkView/include":121,"./api":122,"./class":123}],125:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class UnityEngine_CharacterController_API {
}
Il2Cpp.Api.CharacterController = UnityEngine_CharacterController_API;
},{}],126:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_CharacterController_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_CharacterController_Impl extends class_1.UnityEngine_Collider_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
}
exports.UnityEngine_CharacterController_Impl = UnityEngine_CharacterController_Impl;
Il2Cpp.CharacterController = UnityEngine_CharacterController_Impl;
},{"../class":129}],127:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":125,"./class":126}],128:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Collider_API {
    static get _get_enabled() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_enabled", 0, "pointer", ["pointer"]);
    }
    static get _set_enabled() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "set_enabled", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_attachedRigidbody() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_attachedRigidbody", 0, "pointer", ["pointer"]);
    }
    static get _set_isTrigger() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "set_isTrigger", 1, "void", ["pointer", "pointer"]);
    }
    static get _ClosestPoint() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "ClosestPoint", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _get_bounds() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_bounds", 0, "pointer", ["pointer"]);
    }
    static get _Raycast() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "Raycast", 3, "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_hitInfo_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Collider", "Raycast", 3, ["UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ClosestPoint_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "ClosestPoint_Injected", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_bounds_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "get_bounds_Injected", 1, "void", ["pointer", "pointer"]);
    }
    static get _Raycast_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Collider", "Raycast_Injected", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_get_enabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_set_enabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_get_attachedRigidbody", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_set_isTrigger", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_ClosestPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_get_bounds", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_Raycast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_Raycast_ray_hitInfo_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_ClosestPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_get_bounds_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Collider_API, "_Raycast_Injected", null);
Il2Cpp.Api.Collider = UnityEngine_Collider_API;
},{"decorator-cache-getter":338}],129:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Collider_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Collider_Impl extends class_1.UnityEngine_Component_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_enabled() {
        return Il2Cpp.Api.Collider._get_enabled(this.handle);
    }
    set_enabled(value) {
        return Il2Cpp.Api.Collider._set_enabled(this.handle, value);
    }
    get_attachedRigidbody() {
        return Il2Cpp.Api.Collider._get_attachedRigidbody(this.handle);
    }
    set_isTrigger(value) {
        return Il2Cpp.Api.Collider._set_isTrigger(this.handle, value);
    }
    ClosestPoint(position) {
        return Il2Cpp.Api.Collider._ClosestPoint(this.handle, position);
    }
    get_bounds() {
        return Il2Cpp.Api.Collider._get_bounds(this.handle);
    }
    Raycast(ray, maxDistance, hasHit) {
        return Il2Cpp.Api.Collider._Raycast(this.handle, ray, maxDistance, hasHit);
    }
    Raycast_3(ray, hitInfo, maxDistance) {
        return Il2Cpp.Api.Collider._Raycast(this.handle, ray, hitInfo, maxDistance);
    }
    ClosestPoint_Injected(position, ret) {
        return Il2Cpp.Api.Collider._ClosestPoint_Injected(this.handle, position, ret);
    }
    get_bounds_Injected(ret) {
        return Il2Cpp.Api.Collider._get_bounds_Injected(this.handle, ret);
    }
    Raycast_Injected(ray, maxDistance, hasHit, ret) {
        return Il2Cpp.Api.Collider._Raycast_Injected(this.handle, ray, maxDistance, hasHit, ret);
    }
}
exports.UnityEngine_Collider_Impl = UnityEngine_Collider_Impl;
Il2Cpp.Collider = UnityEngine_Collider_Impl;
},{"../class":154}],130:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./CharacterController/include");
},{"./CharacterController/include":127,"./api":128,"./class":129}],131:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_ParticleSystem_API {
    static get _Emit() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 5, "void", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Emit_particle() {
        return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 1, ["UnityEngine.ParticleSystem.Particle"], "void", ["pointer", "pointer"]);
    }
    static get _get_isPlaying() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "get_isPlaying", 0, "pointer", ["pointer"]);
    }
    static get _Play() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Play", 1, "void", ["pointer", "pointer"]);
    }
    static get _Play_() {
        return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Play", 0, [], "void", ["pointer"]);
    }
    static get _Stop() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Stop", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Stop_withChildren() {
        return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Stop", 1, ["System.Boolean"], "void", ["pointer", "pointer"]);
    }
    static get _Stop_() {
        return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Stop", 0, [], "void", ["pointer"]);
    }
    static get _Emit_count() {
        return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 1, ["System.Int32"], "void", ["pointer", "pointer"]);
    }
    static get _Emit_Internal() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit_Internal", 1, "void", ["pointer", "pointer"]);
    }
    static get _Emit_emitParams_count() {
        return Il2Cpp.Api.o("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit", 2, ["UnityEngine.ParticleSystem.EmitParams", "System.Int32"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _EmitOld_Internal() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "EmitOld_Internal", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_main() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "get_main", 0, "pointer", ["pointer"]);
    }
    static get _Emit_Injected() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "UnityEngine.ParticleSystem", "Emit_Injected", 2, "void", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Emit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Emit_particle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_get_isPlaying", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Play", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Play_", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Stop", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Stop_withChildren", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Stop_", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Emit_count", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Emit_Internal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Emit_emitParams_count", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_EmitOld_Internal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_get_main", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_ParticleSystem_API, "_Emit_Injected", null);
Il2Cpp.Api.ParticleSystem = UnityEngine_ParticleSystem_API;
},{"decorator-cache-getter":338}],132:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_ParticleSystem_Impl = void 0;
const class_1 = require("../../../ValueType/MainModule/class");
const class_2 = require("../class");
class UnityEngine_ParticleSystem_Impl extends class_2.UnityEngine_Component_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    Emit(position, velocity, size, lifetime, color) {
        return Il2Cpp.Api.ParticleSystem._Emit(this.handle, position, velocity, size, lifetime, color.handle);
    }
    Emit_particle(particle) {
        return Il2Cpp.Api.ParticleSystem._Emit(this.handle, particle.handle);
    }
    get_isPlaying() {
        return Il2Cpp.Api.ParticleSystem._get_isPlaying(this.handle);
    }
    Play(withChildren) {
        return Il2Cpp.Api.ParticleSystem._Play(this.handle, withChildren);
    }
    Play_0() {
        return Il2Cpp.Api.ParticleSystem._Play(this.handle);
    }
    Stop(withChildren, stopBehavior) {
        return Il2Cpp.Api.ParticleSystem._Stop(this.handle, withChildren, stopBehavior);
    }
    Stop_1(withChildren) {
        return Il2Cpp.Api.ParticleSystem._Stop(this.handle, withChildren);
    }
    Stop_0() {
        return Il2Cpp.Api.ParticleSystem._Stop(this.handle);
    }
    Emit_count(count) {
        return Il2Cpp.Api.ParticleSystem._Emit(this.handle, count);
    }
    Emit_Internal(count) {
        return Il2Cpp.Api.ParticleSystem._Emit_Internal(this.handle, count);
    }
    Emit_2(emitParams, count) {
        return Il2Cpp.Api.ParticleSystem._Emit(this.handle, emitParams, count);
    }
    EmitOld_Internal(particle) {
        return Il2Cpp.Api.ParticleSystem._EmitOld_Internal(this.handle, particle);
    }
    get_main() {
        return new class_1.UnityEngine_ParticleSystem_MainModule_Impl(Il2Cpp.Api.ParticleSystem._get_main(this.handle));
    }
    Emit_Injected(emitParams, count) {
        return Il2Cpp.Api.ParticleSystem._Emit_Injected(this.handle, emitParams, count);
    }
}
exports.UnityEngine_ParticleSystem_Impl = UnityEngine_ParticleSystem_Impl;
Il2Cpp.ParticleSystem = UnityEngine_ParticleSystem_Impl;
},{"../../../ValueType/MainModule/class":254,"../class":154}],133:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_ParticleSystemGradientMode = exports.UnityEngine_ParticleSystemStopBehavior = void 0;
var UnityEngine_ParticleSystemStopBehavior;
(function (UnityEngine_ParticleSystemStopBehavior) {
    UnityEngine_ParticleSystemStopBehavior[UnityEngine_ParticleSystemStopBehavior["StopEmitting"] = 1] = "StopEmitting";
    UnityEngine_ParticleSystemStopBehavior[UnityEngine_ParticleSystemStopBehavior["StopEmittingAndClear"] = 0] = "StopEmittingAndClear";
})(UnityEngine_ParticleSystemStopBehavior = exports.UnityEngine_ParticleSystemStopBehavior || (exports.UnityEngine_ParticleSystemStopBehavior = {}));
var UnityEngine_ParticleSystemGradientMode;
(function (UnityEngine_ParticleSystemGradientMode) {
    UnityEngine_ParticleSystemGradientMode[UnityEngine_ParticleSystemGradientMode["Color"] = 0] = "Color";
    UnityEngine_ParticleSystemGradientMode[UnityEngine_ParticleSystemGradientMode["Gradient"] = 1] = "Gradient";
    UnityEngine_ParticleSystemGradientMode[UnityEngine_ParticleSystemGradientMode["RandomColor"] = 4] = "RandomColor";
    UnityEngine_ParticleSystemGradientMode[UnityEngine_ParticleSystemGradientMode["TwoColors"] = 2] = "TwoColors";
    UnityEngine_ParticleSystemGradientMode[UnityEngine_ParticleSystemGradientMode["TwoGradients"] = 3] = "TwoGradients";
})(UnityEngine_ParticleSystemGradientMode = exports.UnityEngine_ParticleSystemGradientMode || (exports.UnityEngine_ParticleSystemGradientMode = {}));
},{}],134:[function(require,module,exports){
"use strict";
},{}],135:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./enum");
require("./class");
require("./export");
},{"./api":131,"./class":132,"./enum":133,"./export":134}],136:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_MeshRenderer_API {
    static get _DontStripMeshRenderer() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.MeshRenderer", "DontStripMeshRenderer", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_MeshRenderer_API, "_DontStripMeshRenderer", null);
Il2Cpp.Api.MeshRenderer = UnityEngine_MeshRenderer_API;
},{"decorator-cache-getter":338}],137:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_MeshRenderer_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_MeshRenderer_Impl extends class_1.UnityEngine_Renderer_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    DontStripMeshRenderer() {
        return Il2Cpp.Api.MeshRenderer._DontStripMeshRenderer(this.handle);
    }
}
exports.UnityEngine_MeshRenderer_Impl = UnityEngine_MeshRenderer_Impl;
Il2Cpp.MeshRenderer = UnityEngine_MeshRenderer_Impl;
},{"../class":141}],138:[function(require,module,exports){
"use strict";
},{}],139:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":136,"./class":137,"./export":138}],140:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Renderer_API {
    static get _get_bounds() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_bounds", 0, "pointer", ["pointer"]);
    }
    static get _GetMaterial() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetMaterial", 0, "pointer", ["pointer"]);
    }
    static get _GetSharedMaterial() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetSharedMaterial", 0, "pointer", ["pointer"]);
    }
    static get _SetMaterial() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "SetMaterial", 1, "void", ["pointer", "pointer"]);
    }
    static get _GetMaterialArray() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetMaterialArray", 0, "pointer", ["pointer"]);
    }
    static get _SetMaterialArray() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "SetMaterialArray", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_enabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_enabled", 0, "pointer", ["pointer"]);
    }
    static get _set_enabled() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_enabled", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_isVisible() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_isVisible", 0, "pointer", ["pointer"]);
    }
    static get _set_shadowCastingMode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_shadowCastingMode", 1, "void", ["pointer", "pointer"]);
    }
    static get _set_receiveShadows() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_receiveShadows", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_sortingLayerID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sortingLayerID", 0, "pointer", ["pointer"]);
    }
    static get _set_sortingLayerID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sortingLayerID", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_sortingOrder() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sortingOrder", 0, "pointer", ["pointer"]);
    }
    static get _set_sortingOrder() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sortingOrder", 1, "void", ["pointer", "pointer"]);
    }
    static get _GetSharedMaterialArray() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "GetSharedMaterialArray", 0, "pointer", ["pointer"]);
    }
    static get _get_materials() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_materials", 0, "pointer", ["pointer"]);
    }
    static get _set_materials() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_materials", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_material() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_material", 0, "pointer", ["pointer"]);
    }
    static get _set_material() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_material", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_sharedMaterial() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sharedMaterial", 0, "pointer", ["pointer"]);
    }
    static get _set_sharedMaterial() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sharedMaterial", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_sharedMaterials() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_sharedMaterials", 0, "pointer", ["pointer"]);
    }
    static get _set_sharedMaterials() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "set_sharedMaterials", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_bounds_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Renderer", "get_bounds_Injected", 1, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_bounds", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_GetMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_GetSharedMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_SetMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_GetMaterialArray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_SetMaterialArray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_enabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_enabled", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_isVisible", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_shadowCastingMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_receiveShadows", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_sortingLayerID", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_sortingLayerID", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_sortingOrder", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_sortingOrder", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_GetSharedMaterialArray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_materials", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_materials", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_material", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_material", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_sharedMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_sharedMaterial", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_sharedMaterials", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_set_sharedMaterials", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Renderer_API, "_get_bounds_Injected", null);
Il2Cpp.Api.Renderer = UnityEngine_Renderer_API;
},{"decorator-cache-getter":338}],141:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Renderer_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Renderer_Impl extends class_1.UnityEngine_Component_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_bounds() {
        return Il2Cpp.Api.Renderer._get_bounds(this.handle);
    }
    GetMaterial() {
        return Il2Cpp.Api.Renderer._GetMaterial(this.handle);
    }
    GetSharedMaterial() {
        return Il2Cpp.Api.Renderer._GetSharedMaterial(this.handle);
    }
    SetMaterial(m) {
        return Il2Cpp.Api.Renderer._SetMaterial(this.handle, m);
    }
    GetMaterialArray() {
        return Il2Cpp.Api.Renderer._GetMaterialArray(this.handle);
    }
    SetMaterialArray(m) {
        return Il2Cpp.Api.Renderer._SetMaterialArray(this.handle, m);
    }
    get_enabled() {
        return Il2Cpp.Api.Renderer._get_enabled(this.handle);
    }
    set_enabled(value) {
        return Il2Cpp.Api.Renderer._set_enabled(this.handle, value);
    }
    get_isVisible() {
        return Il2Cpp.Api.Renderer._get_isVisible(this.handle);
    }
    set_shadowCastingMode(value) {
        return Il2Cpp.Api.Renderer._set_shadowCastingMode(this.handle, value);
    }
    set_receiveShadows(value) {
        return Il2Cpp.Api.Renderer._set_receiveShadows(this.handle, value);
    }
    get_sortingLayerID() {
        return Il2Cpp.Api.Renderer._get_sortingLayerID(this.handle);
    }
    set_sortingLayerID(value) {
        return Il2Cpp.Api.Renderer._set_sortingLayerID(this.handle, value);
    }
    get_sortingOrder() {
        return Il2Cpp.Api.Renderer._get_sortingOrder(this.handle);
    }
    set_sortingOrder(value) {
        return Il2Cpp.Api.Renderer._set_sortingOrder(this.handle, value);
    }
    GetSharedMaterialArray() {
        return Il2Cpp.Api.Renderer._GetSharedMaterialArray(this.handle);
    }
    get_materials() {
        return Il2Cpp.Api.Renderer._get_materials(this.handle);
    }
    set_materials(value) {
        return Il2Cpp.Api.Renderer._set_materials(this.handle, value);
    }
    get_material() {
        return Il2Cpp.Api.Renderer._get_material(this.handle);
    }
    set_material(value) {
        return Il2Cpp.Api.Renderer._set_material(this.handle, value);
    }
    get_sharedMaterial() {
        return Il2Cpp.Api.Renderer._get_sharedMaterial(this.handle);
    }
    set_sharedMaterial(value) {
        return Il2Cpp.Api.Renderer._set_sharedMaterial(this.handle, value);
    }
    get_sharedMaterials() {
        return Il2Cpp.Api.Renderer._get_sharedMaterials(this.handle);
    }
    set_sharedMaterials(value) {
        return Il2Cpp.Api.Renderer._set_sharedMaterials(this.handle, value);
    }
    get_bounds_Injected(ret) {
        return Il2Cpp.Api.Renderer._get_bounds_Injected(this.handle, ret);
    }
}
exports.UnityEngine_Renderer_Impl = UnityEngine_Renderer_Impl;
Il2Cpp.Renderer = UnityEngine_Renderer_Impl;
},{"../class":154}],142:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Rendering_ShadowCastingMode = void 0;
var UnityEngine_Rendering_ShadowCastingMode;
(function (UnityEngine_Rendering_ShadowCastingMode) {
    UnityEngine_Rendering_ShadowCastingMode[UnityEngine_Rendering_ShadowCastingMode["Off"] = 0] = "Off";
    UnityEngine_Rendering_ShadowCastingMode[UnityEngine_Rendering_ShadowCastingMode["On"] = 1] = "On";
    UnityEngine_Rendering_ShadowCastingMode[UnityEngine_Rendering_ShadowCastingMode["ShadowsOnly"] = 3] = "ShadowsOnly";
    UnityEngine_Rendering_ShadowCastingMode[UnityEngine_Rendering_ShadowCastingMode["TwoSided"] = 2] = "TwoSided";
})(UnityEngine_Rendering_ShadowCastingMode = exports.UnityEngine_Rendering_ShadowCastingMode || (exports.UnityEngine_Rendering_ShadowCastingMode = {}));
},{}],143:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./enum");
require("./class");
require("./MeshRenderer/include");
},{"./MeshRenderer/include":139,"./api":140,"./class":141,"./enum":142}],144:[function(require,module,exports){
"use strict";
},{}],145:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_RectTransform_API {
    static get _add_reapplyDrivenProperties() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "add_reapplyDrivenProperties", 1, ["UnityEngine.RectTransform.ReapplyDrivenProperties"], "void", ["pointer"]);
    }
    static get _remove_reapplyDrivenProperties() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "remove_reapplyDrivenProperties", 1, ["UnityEngine.RectTransform.ReapplyDrivenProperties"], "void", ["pointer"]);
    }
    static get _get_rect() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_rect", 0, [], "pointer", ["pointer"]);
    }
    static get _get_anchorMin() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMin", 0, [], "pointer", ["pointer"]);
    }
    static get _set_anchorMin() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMin", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_anchorMax() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMax", 0, [], "pointer", ["pointer"]);
    }
    static get _set_anchorMax() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMax", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_anchoredPosition() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchoredPosition", 0, [], "pointer", ["pointer"]);
    }
    static get _set_anchoredPosition() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchoredPosition", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_sizeDelta() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_sizeDelta", 0, [], "pointer", ["pointer"]);
    }
    static get _set_sizeDelta() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_sizeDelta", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_pivot() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_pivot", 0, [], "pointer", ["pointer"]);
    }
    static get _set_pivot() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_pivot", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_anchoredPosition3D() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchoredPosition3D", 0, [], "pointer", ["pointer"]);
    }
    static get _set_anchoredPosition3D() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchoredPosition3D", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_offsetMin() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_offsetMin", 0, [], "pointer", ["pointer"]);
    }
    static get _set_offsetMin() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_offsetMin", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _get_offsetMax() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_offsetMax", 0, [], "pointer", ["pointer"]);
    }
    static get _set_offsetMax() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_offsetMax", 1, ["UnityEngine.Vector2"], "void", ["pointer", "pointer"]);
    }
    static get _ForceUpdateRectTransforms() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "ForceUpdateRectTransforms", 0, [], "void", ["pointer"]);
    }
    static get _GetLocalCorners() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "GetLocalCorners", 1, ["UnityEngine.Vector3[]"], "void", ["pointer", "pointer"]);
    }
    static get _GetWorldCorners() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "GetWorldCorners", 1, ["UnityEngine.Vector3[]"], "void", ["pointer", "pointer"]);
    }
    static get _SetSizeWithCurrentAnchors() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "SetSizeWithCurrentAnchors", 2, ["UnityEngine.RectTransform.Axis", "System.Single"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _SendReapplyDrivenProperties() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "SendReapplyDrivenProperties", 1, ["UnityEngine.RectTransform"], "void", ["pointer"]);
    }
    static get _GetParentSize() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "GetParentSize", 0, [], "pointer", ["pointer"]);
    }
    static get _get_rect_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_rect_Injected", 1, ["UnityEngine.Rect&"], "void", ["pointer", "pointer"]);
    }
    static get _get_anchorMin_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMin_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _set_anchorMin_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMin_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _get_anchorMax_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchorMax_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _set_anchorMax_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchorMax_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _get_anchoredPosition_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_anchoredPosition_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _set_anchoredPosition_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_anchoredPosition_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _get_sizeDelta_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_sizeDelta_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _set_sizeDelta_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_sizeDelta_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _get_pivot_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "get_pivot_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
    static get _set_pivot_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.RectTransform", "set_pivot_Injected", 1, ["UnityEngine.Vector2&"], "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_add_reapplyDrivenProperties", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_remove_reapplyDrivenProperties", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_rect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchorMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchorMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchorMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchorMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchoredPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchoredPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_sizeDelta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_sizeDelta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_pivot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_pivot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchoredPosition3D", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchoredPosition3D", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_offsetMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_offsetMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_offsetMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_offsetMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_ForceUpdateRectTransforms", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_GetLocalCorners", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_GetWorldCorners", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_SetSizeWithCurrentAnchors", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_SendReapplyDrivenProperties", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_GetParentSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_rect_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchorMin_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchorMin_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchorMax_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchorMax_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_anchoredPosition_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_anchoredPosition_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_sizeDelta_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_sizeDelta_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_get_pivot_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_RectTransform_API, "_set_pivot_Injected", null);
Il2Cpp.Api.RectTransform = UnityEngine_RectTransform_API;
},{"decorator-cache-getter":338}],146:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_RectTransform_Impl = void 0;
const class_1 = require("../../../../ValueType/Rect/class");
const class_2 = require("../../../../ValueType/Vector2/class");
const class_3 = require("../../../../ValueType/Vector3/class");
const class_4 = require("../class");
class UnityEngine_RectTransform_Impl extends class_4.UnityEngine_Transform_Impl {
    reapplyDrivenProperties = lfv(this.handle, "reapplyDrivenProperties");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static add_reapplyDrivenProperties(value) {
        return Il2Cpp.Api.RectTransform._add_reapplyDrivenProperties(value);
    }
    static remove_reapplyDrivenProperties(value) {
        return Il2Cpp.Api.RectTransform._remove_reapplyDrivenProperties(value);
    }
    get_rect() {
        return new class_1.UnityEngine_Rect_Impl(Il2Cpp.Api.RectTransform._get_rect(this.handle));
    }
    get_anchorMin() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_anchorMin(this.handle));
    }
    set_anchorMin(value) {
        return Il2Cpp.Api.RectTransform._set_anchorMin(this.handle, value.handle);
    }
    get_anchorMax() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_anchorMax(this.handle));
    }
    set_anchorMax(value) {
        return Il2Cpp.Api.RectTransform._set_anchorMax(this.handle, value.handle);
    }
    get_anchoredPosition() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_anchoredPosition(this.handle));
    }
    set_anchoredPosition(value) {
        return Il2Cpp.Api.RectTransform._set_anchoredPosition(this.handle, value.handle);
    }
    get_sizeDelta() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_sizeDelta(this.handle));
    }
    set_sizeDelta(value) {
        return Il2Cpp.Api.RectTransform._set_sizeDelta(this.handle, value.handle);
    }
    get_pivot() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_pivot(this.handle));
    }
    set_pivot(value) {
        return Il2Cpp.Api.RectTransform._set_pivot(this.handle, value.handle);
    }
    get_anchoredPosition3D() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.RectTransform._get_anchoredPosition3D(this.handle));
    }
    set_anchoredPosition3D(value) {
        return Il2Cpp.Api.RectTransform._set_anchoredPosition3D(this.handle, value.handle);
    }
    get_offsetMin() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_offsetMin(this.handle));
    }
    set_offsetMin(value) {
        return Il2Cpp.Api.RectTransform._set_offsetMin(this.handle, value.handle);
    }
    get_offsetMax() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._get_offsetMax(this.handle));
    }
    set_offsetMax(value) {
        return Il2Cpp.Api.RectTransform._set_offsetMax(this.handle, value.handle);
    }
    ForceUpdateRectTransforms() {
        return Il2Cpp.Api.RectTransform._ForceUpdateRectTransforms(this.handle);
    }
    GetLocalCorners(fourCornersArray) {
        return Il2Cpp.Api.RectTransform._GetLocalCorners(this.handle, fourCornersArray);
    }
    GetWorldCorners(fourCornersArray) {
        return Il2Cpp.Api.RectTransform._GetWorldCorners(this.handle, fourCornersArray);
    }
    SetSizeWithCurrentAnchors(axis, size) {
        return Il2Cpp.Api.RectTransform._SetSizeWithCurrentAnchors(this.handle, axis, size);
    }
    static SendReapplyDrivenProperties(driven) {
        return Il2Cpp.Api.RectTransform._SendReapplyDrivenProperties(driven);
    }
    GetParentSize() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.RectTransform._GetParentSize(this.handle));
    }
    get_rect_Injected(ret) {
        return Il2Cpp.Api.RectTransform._get_rect_Injected(this.handle, ret.handle);
    }
    get_anchorMin_Injected(ret) {
        return Il2Cpp.Api.RectTransform._get_anchorMin_Injected(this.handle, ret.handle);
    }
    set_anchorMin_Injected(value) {
        return Il2Cpp.Api.RectTransform._set_anchorMin_Injected(this.handle, value.handle);
    }
    get_anchorMax_Injected(ret) {
        return Il2Cpp.Api.RectTransform._get_anchorMax_Injected(this.handle, ret.handle);
    }
    set_anchorMax_Injected(value) {
        return Il2Cpp.Api.RectTransform._set_anchorMax_Injected(this.handle, value.handle);
    }
    get_anchoredPosition_Injected(ret) {
        return Il2Cpp.Api.RectTransform._get_anchoredPosition_Injected(this.handle, ret.handle);
    }
    set_anchoredPosition_Injected(value) {
        return Il2Cpp.Api.RectTransform._set_anchoredPosition_Injected(this.handle, value.handle);
    }
    get_sizeDelta_Injected(ret) {
        return Il2Cpp.Api.RectTransform._get_sizeDelta_Injected(this.handle, ret.handle);
    }
    set_sizeDelta_Injected(value) {
        return Il2Cpp.Api.RectTransform._set_sizeDelta_Injected(this.handle, value.handle);
    }
    get_pivot_Injected(ret) {
        return Il2Cpp.Api.RectTransform._get_pivot_Injected(this.handle, ret.handle);
    }
    set_pivot_Injected(value) {
        return Il2Cpp.Api.RectTransform._set_pivot_Injected(this.handle, value.handle);
    }
}
exports.UnityEngine_RectTransform_Impl = UnityEngine_RectTransform_Impl;
Il2Cpp.RectTransform = UnityEngine_RectTransform_Impl;
},{"../../../../ValueType/Rect/class":269,"../../../../ValueType/Vector2/class":282,"../../../../ValueType/Vector3/class":286,"../class":150}],147:[function(require,module,exports){
"use strict";
},{}],148:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":145,"./class":146,"./export":147}],149:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Transform_API {
    static get __ctor() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", ".ctor", 0, [], "void", ["pointer"]);
    }
    static get _get_position() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_position", 0, [], "pointer", ["pointer"]);
    }
    static get _set_position() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_position", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_localPosition() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localPosition", 0, [], "pointer", ["pointer"]);
    }
    static get _set_localPosition() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localPosition", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_eulerAngles() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_eulerAngles", 0, [], "pointer", ["pointer"]);
    }
    static get _set_eulerAngles() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_eulerAngles", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_localEulerAngles() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localEulerAngles", 0, [], "pointer", ["pointer"]);
    }
    static get _get_up() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_up", 0, [], "pointer", ["pointer"]);
    }
    static get _get_forward() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_forward", 0, [], "pointer", ["pointer"]);
    }
    static get _set_forward() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_forward", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_rotation() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_rotation", 0, [], "pointer", ["pointer"]);
    }
    static get _set_rotation() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_rotation", 1, ["UnityEngine.Quaternion"], "void", ["pointer", "pointer"]);
    }
    static get _get_localRotation() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localRotation", 0, [], "pointer", ["pointer"]);
    }
    static get _set_localRotation() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localRotation", 1, ["UnityEngine.Quaternion"], "void", ["pointer", "pointer"]);
    }
    static get _get_localScale() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localScale", 0, [], "pointer", ["pointer"]);
    }
    static get _set_localScale() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localScale", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _get_parent() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_parent", 0, [], "pointer", ["pointer"]);
    }
    static get _set_parent() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_parent", 1, ["UnityEngine.Transform"], "void", ["pointer", "pointer"]);
    }
    static get _get_parentInternal() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_parentInternal", 0, [], "pointer", ["pointer"]);
    }
    static get _set_parentInternal() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_parentInternal", 1, ["UnityEngine.Transform"], "void", ["pointer", "pointer"]);
    }
    static get _GetParent() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "GetParent", 0, [], "pointer", ["pointer"]);
    }
    static get _SetParent() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetParent", 1, ["UnityEngine.Transform"], "void", ["pointer", "pointer"]);
    }
    static get _SetParent_parent_worldPositionStays() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetParent", 2, ["UnityEngine.Transform", "System.Boolean"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_worldToLocalMatrix() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_worldToLocalMatrix", 0, [], "pointer", ["pointer"]);
    }
    static get _get_localToWorldMatrix() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localToWorldMatrix", 0, [], "pointer", ["pointer"]);
    }
    static get _SetPositionAndRotation() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetPositionAndRotation", 2, ["UnityEngine.Vector3", "UnityEngine.Quaternion"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Translate() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Translate", 2, ["UnityEngine.Vector3", "UnityEngine.Space"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Rotate() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Rotate", 2, ["UnityEngine.Vector3", "UnityEngine.Space"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Rotate_eulers() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Rotate", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _Rotate_xAngle_yAngle_zAngle() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Rotate", 3, ["System.Single", "System.Single", "System.Single"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RotateAroundInternal() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "RotateAroundInternal", 2, ["UnityEngine.Vector3", "System.Single"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _RotateAround() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "RotateAround", 3, ["UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _LookAt() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "LookAt", 1, ["UnityEngine.Transform"], "void", ["pointer", "pointer"]);
    }
    static get _LookAt_worldPosition_worldUp() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "LookAt", 2, ["UnityEngine.Vector3", "UnityEngine.Vector3"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _LookAt_worldPosition() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "LookAt", 1, ["UnityEngine.Vector3"], "void", ["pointer", "pointer"]);
    }
    static get _Internal_LookAt() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Internal_LookAt", 2, ["UnityEngine.Vector3", "UnityEngine.Vector3"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _TransformDirection() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformDirection", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _TransformDirection_x_y_z() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformDirection", 3, ["System.Single", "System.Single", "System.Single"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _InverseTransformDirection() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformDirection", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _TransformVector() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformVector", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _InverseTransformVector() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformVector", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _TransformPoint() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformPoint", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _InverseTransformPoint() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformPoint", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _get_childCount() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_childCount", 0, [], "pointer", ["pointer"]);
    }
    static get _SetAsFirstSibling() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetAsFirstSibling", 0, [], "void", ["pointer"]);
    }
    static get _FindRelativeTransformWithPath() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "FindRelativeTransformWithPath", 3, ["UnityEngine.Transform", "System.String", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Find() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Find", 1, ["System.String"], "pointer", ["pointer", "pointer"]);
    }
    static get _get_lossyScale() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_lossyScale", 0, [], "pointer", ["pointer"]);
    }
    static get _IsChildOf() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "IsChildOf", 1, ["UnityEngine.Transform"], "pointer", ["pointer", "pointer"]);
    }
    static get _set_hasChanged() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_hasChanged", 1, ["System.Boolean"], "void", ["pointer", "pointer"]);
    }
    static get _GetEnumerator() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "GetEnumerator", 0, [], "pointer", ["pointer"]);
    }
    static get _GetChild() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "GetChild", 1, ["System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _get_position_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_position_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
    static get _set_position_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_position_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
    static get _get_localPosition_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localPosition_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
    static get _set_localPosition_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localPosition_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
    static get _get_rotation_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_rotation_Injected", 1, ["UnityEngine.Quaternion&"], "void", ["pointer", "pointer"]);
    }
    static get _set_rotation_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_rotation_Injected", 1, ["UnityEngine.Quaternion&"], "void", ["pointer", "pointer"]);
    }
    static get _get_localRotation_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localRotation_Injected", 1, ["UnityEngine.Quaternion&"], "void", ["pointer", "pointer"]);
    }
    static get _set_localRotation_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localRotation_Injected", 1, ["UnityEngine.Quaternion&"], "void", ["pointer", "pointer"]);
    }
    static get _get_localScale_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localScale_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
    static get _set_localScale_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "set_localScale_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
    static get _get_worldToLocalMatrix_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_worldToLocalMatrix_Injected", 1, ["UnityEngine.Matrix4x4&"], "void", ["pointer", "pointer"]);
    }
    static get _get_localToWorldMatrix_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_localToWorldMatrix_Injected", 1, ["UnityEngine.Matrix4x4&"], "void", ["pointer", "pointer"]);
    }
    static get _SetPositionAndRotation_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "SetPositionAndRotation_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Quaternion&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _RotateAroundInternal_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "RotateAroundInternal_Injected", 2, ["UnityEngine.Vector3&", "System.Single"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Internal_LookAt_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "Internal_LookAt_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _TransformDirection_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformDirection_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _InverseTransformDirection_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformDirection_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _TransformVector_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformVector_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _InverseTransformVector_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformVector_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _TransformPoint_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "TransformPoint_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _InverseTransformPoint_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "InverseTransformPoint_Injected", 2, ["UnityEngine.Vector3&", "UnityEngine.Vector3&"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_lossyScale_Injected() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Transform", "get_lossyScale_Injected", 1, ["UnityEngine.Vector3&"], "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_localPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_eulerAngles", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_eulerAngles", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localEulerAngles", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_up", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_forward", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_forward", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_rotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_rotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localRotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_localRotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localScale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_localScale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_parent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_parent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_parentInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_parentInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_GetParent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_SetParent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_SetParent_parent_worldPositionStays", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_worldToLocalMatrix", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localToWorldMatrix", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_SetPositionAndRotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Translate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Rotate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Rotate_eulers", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Rotate_xAngle_yAngle_zAngle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_RotateAroundInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_RotateAround", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_LookAt", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_LookAt_worldPosition_worldUp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_LookAt_worldPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Internal_LookAt", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformDirection", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformDirection_x_y_z", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_InverseTransformDirection", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformVector", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_InverseTransformVector", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_InverseTransformPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_childCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_SetAsFirstSibling", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_FindRelativeTransformWithPath", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Find", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_lossyScale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_IsChildOf", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_hasChanged", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_GetEnumerator", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_GetChild", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_position_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_position_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localPosition_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_localPosition_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_rotation_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_rotation_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localRotation_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_localRotation_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localScale_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_set_localScale_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_worldToLocalMatrix_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_localToWorldMatrix_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_SetPositionAndRotation_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_RotateAroundInternal_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_Internal_LookAt_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformDirection_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_InverseTransformDirection_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformVector_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_InverseTransformVector_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_TransformPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_InverseTransformPoint_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Transform_API, "_get_lossyScale_Injected", null);
Il2Cpp.Api.Transform = UnityEngine_Transform_API;
},{"decorator-cache-getter":338}],150:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Transform_Impl = void 0;
const class_1 = require("../../../ValueType/Matrix4x4/class");
const class_2 = require("../../../ValueType/Quaternion/class");
const class_3 = require("../../../ValueType/Vector3/class");
const class_4 = require("../class");
class UnityEngine_Transform_Impl extends class_4.UnityEngine_Component_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor() {
        return Il2Cpp.Api.Transform.__ctor(alloc());
    }
    get_position() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_position(this.handle));
    }
    set_position(value) {
        return Il2Cpp.Api.Transform._set_position(this.handle, value.handle);
    }
    get_localPosition() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_localPosition(this.handle));
    }
    set_localPosition(value) {
        return Il2Cpp.Api.Transform._set_localPosition(this.handle, value.handle);
    }
    get_eulerAngles() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_eulerAngles(this.handle));
    }
    set_eulerAngles(value) {
        return Il2Cpp.Api.Transform._set_eulerAngles(this.handle, value.handle);
    }
    get_localEulerAngles() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_localEulerAngles(this.handle));
    }
    get_up() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_up(this.handle));
    }
    get_forward() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_forward(this.handle));
    }
    set_forward(value) {
        return Il2Cpp.Api.Transform._set_forward(this.handle, value.handle);
    }
    get_rotation() {
        return new class_2.UnityEngine_Quaternion_Impl(Il2Cpp.Api.Transform._get_rotation(this.handle));
    }
    set_rotation(value) {
        return Il2Cpp.Api.Transform._set_rotation(this.handle, value.handle);
    }
    get_localRotation() {
        return new class_2.UnityEngine_Quaternion_Impl(Il2Cpp.Api.Transform._get_localRotation(this.handle));
    }
    set_localRotation(value) {
        return Il2Cpp.Api.Transform._set_localRotation(this.handle, value.handle);
    }
    get_localScale() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_localScale(this.handle));
    }
    set_localScale(value) {
        return Il2Cpp.Api.Transform._set_localScale(this.handle, value.handle);
    }
    get_parent() {
        return new UnityEngine_Transform_Impl(Il2Cpp.Api.Transform._get_parent(this.handle));
    }
    set_parent(value) {
        return Il2Cpp.Api.Transform._set_parent(this.handle, value.handle);
    }
    get_parentInternal() {
        return new UnityEngine_Transform_Impl(Il2Cpp.Api.Transform._get_parentInternal(this.handle));
    }
    set_parentInternal(value) {
        return Il2Cpp.Api.Transform._set_parentInternal(this.handle, value.handle);
    }
    GetParent() {
        return new UnityEngine_Transform_Impl(Il2Cpp.Api.Transform._GetParent(this.handle));
    }
    SetParent(p) {
        return Il2Cpp.Api.Transform._SetParent(this.handle, p.handle);
    }
    SetParent_2(parent, worldPositionStays) {
        return Il2Cpp.Api.Transform._SetParent(this.handle, parent.handle, worldPositionStays);
    }
    get_worldToLocalMatrix() {
        return new class_1.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Transform._get_worldToLocalMatrix(this.handle));
    }
    get_localToWorldMatrix() {
        return new class_1.UnityEngine_Matrix4x4_Impl(Il2Cpp.Api.Transform._get_localToWorldMatrix(this.handle));
    }
    SetPositionAndRotation(position, rotation) {
        return Il2Cpp.Api.Transform._SetPositionAndRotation(this.handle, position.handle, rotation.handle);
    }
    Translate(translation, relativeTo) {
        return Il2Cpp.Api.Transform._Translate(this.handle, translation.handle, relativeTo);
    }
    Rotate(eulers, relativeTo) {
        return Il2Cpp.Api.Transform._Rotate(this.handle, eulers.handle, relativeTo);
    }
    Rotate_1(eulers) {
        return Il2Cpp.Api.Transform._Rotate(this.handle, eulers.handle);
    }
    Rotate_3(xAngle, yAngle, zAngle) {
        return Il2Cpp.Api.Transform._Rotate(this.handle, xAngle, yAngle, zAngle);
    }
    RotateAroundInternal(axis, angle) {
        return Il2Cpp.Api.Transform._RotateAroundInternal(this.handle, axis.handle, angle);
    }
    RotateAround(point, axis, angle) {
        return Il2Cpp.Api.Transform._RotateAround(this.handle, point.handle, axis.handle, angle);
    }
    LookAt(target) {
        return Il2Cpp.Api.Transform._LookAt(this.handle, target.handle);
    }
    LookAt_2(worldPosition, worldUp) {
        return Il2Cpp.Api.Transform._LookAt(this.handle, worldPosition.handle, worldUp.handle);
    }
    LookAt_1(worldPosition) {
        return Il2Cpp.Api.Transform._LookAt(this.handle, worldPosition.handle);
    }
    Internal_LookAt(worldPosition, worldUp) {
        return Il2Cpp.Api.Transform._Internal_LookAt(this.handle, worldPosition.handle, worldUp.handle);
    }
    TransformDirection(direction) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformDirection(this.handle, direction.handle));
    }
    TransformDirection_3(x, y, z) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformDirection(this.handle, x, y, z));
    }
    InverseTransformDirection(direction) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._InverseTransformDirection(this.handle, direction));
    }
    TransformVector(vector) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformVector(this.handle, vector.handle));
    }
    InverseTransformVector(vector) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._InverseTransformVector(this.handle, vector.handle));
    }
    TransformPoint(position) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._TransformPoint(this.handle, position.handle));
    }
    InverseTransformPoint(position) {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._InverseTransformPoint(this.handle, position.handle));
    }
    get_childCount() {
        return Il2Cpp.Api.Transform._get_childCount(this.handle);
    }
    SetAsFirstSibling() {
        return Il2Cpp.Api.Transform._SetAsFirstSibling(this.handle);
    }
    static FindRelativeTransformWithPath(transform, path, isActiveOnly) {
        return new UnityEngine_Transform_Impl(Il2Cpp.Api.Transform._FindRelativeTransformWithPath(transform, path, isActiveOnly));
    }
    Find(name) {
        return new UnityEngine_Transform_Impl(Il2Cpp.Api.Transform._Find(this.handle, allocUStr(name)));
    }
    get_lossyScale() {
        return new class_3.UnityEngine_Vector3_Impl(Il2Cpp.Api.Transform._get_lossyScale(this.handle));
    }
    IsChildOf(parent) {
        return !Il2Cpp.Api.Transform._IsChildOf(this.handle, parent.handle).isNull();
    }
    set_hasChanged(value) {
        return Il2Cpp.Api.Transform._set_hasChanged(this.handle, value);
    }
    GetChild(index) {
        return Il2Cpp.Api.Transform._GetChild(this.handle, index);
    }
    get_position_Injected(ret) {
        return Il2Cpp.Api.Transform._get_position_Injected(this.handle, ret.handle);
    }
    set_position_Injected(value) {
        return Il2Cpp.Api.Transform._set_position_Injected(this.handle, value.handle);
    }
    get_localPosition_Injected(ret) {
        return Il2Cpp.Api.Transform._get_localPosition_Injected(this.handle, ret.handle);
    }
    set_localPosition_Injected(value) {
        return Il2Cpp.Api.Transform._set_localPosition_Injected(this.handle, value.handle);
    }
    get_rotation_Injected(ret) {
        return Il2Cpp.Api.Transform._get_rotation_Injected(this.handle, ret.handle);
    }
    set_rotation_Injected(value) {
        return Il2Cpp.Api.Transform._set_rotation_Injected(this.handle, value.handle);
    }
    get_localRotation_Injected(ret) {
        return Il2Cpp.Api.Transform._get_localRotation_Injected(this.handle, ret.handle);
    }
    set_localRotation_Injected(value) {
        return Il2Cpp.Api.Transform._set_localRotation_Injected(this.handle, value.handle);
    }
    get_localScale_Injected(ret) {
        return Il2Cpp.Api.Transform._get_localScale_Injected(this.handle, ret.handle);
    }
    set_localScale_Injected(value) {
        return Il2Cpp.Api.Transform._set_localScale_Injected(this.handle, value.handle);
    }
    get_worldToLocalMatrix_Injected(ret) {
        return Il2Cpp.Api.Transform._get_worldToLocalMatrix_Injected(this.handle, ret.handle);
    }
    get_localToWorldMatrix_Injected(ret) {
        return Il2Cpp.Api.Transform._get_localToWorldMatrix_Injected(this.handle, ret.handle);
    }
    SetPositionAndRotation_Injected(position, rotation) {
        return Il2Cpp.Api.Transform._SetPositionAndRotation_Injected(this.handle, position.handle, rotation.handle);
    }
    RotateAroundInternal_Injected(axis, angle) {
        return Il2Cpp.Api.Transform._RotateAroundInternal_Injected(this.handle, axis.handle, angle);
    }
    Internal_LookAt_Injected(worldPosition, worldUp) {
        return Il2Cpp.Api.Transform._Internal_LookAt_Injected(this.handle, worldPosition.handle, worldUp.handle);
    }
    TransformDirection_Injected(direction, ret) {
        return Il2Cpp.Api.Transform._TransformDirection_Injected(this.handle, direction.handle, ret.handle);
    }
    InverseTransformDirection_Injected(direction, ret) {
        return Il2Cpp.Api.Transform._InverseTransformDirection_Injected(this.handle, direction.handle, ret.handle);
    }
    TransformVector_Injected(vector, ret) {
        return Il2Cpp.Api.Transform._TransformVector_Injected(this.handle, vector.handle, ret.handle);
    }
    InverseTransformVector_Injected(vector, ret) {
        return Il2Cpp.Api.Transform._InverseTransformVector_Injected(this.handle, vector.handle, ret.handle);
    }
    TransformPoint_Injected(position, ret) {
        return Il2Cpp.Api.Transform._TransformPoint_Injected(this.handle, position.handle, ret.handle);
    }
    InverseTransformPoint_Injected(position, ret) {
        return Il2Cpp.Api.Transform._InverseTransformPoint_Injected(this.handle, position.handle, ret.handle);
    }
    get_lossyScale_Injected(ret) {
        return Il2Cpp.Api.Transform._get_lossyScale_Injected(this.handle, ret.handle);
    }
}
exports.UnityEngine_Transform_Impl = UnityEngine_Transform_Impl;
Il2Cpp.Transform = UnityEngine_Transform_Impl;
},{"../../../ValueType/Matrix4x4/class":258,"../../../ValueType/Quaternion/class":262,"../../../ValueType/Vector3/class":286,"../class":154}],151:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const class_1 = require("../../GameObject/class");
const class_2 = require("./class");
globalThis.showTransform = (transform) => {
    if (typeof transform == "number")
        transform = ptr(transform);
    LOGO(`${getLine(15)} Transform ${getLine(15)}`);
    let trsIns = new Il2Cpp.Transform(transform);
    LOGD(`childCount\t--->\t${trsIns.get_childCount()}\t(${trsIns.get_name()})`);
    PrintHierarchy(transform, 1, true);
    LOGD("get_position\t(" + trsIns.get_position().toString() + ")");
};
globalThis.PrintHierarchy = (mPtr, level = 2, inCall = false) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (mPtr.isNull())
        return;
    let trsIns;
    if (getTypeName(mPtr) == "GameObject")
        mPtr = new Il2Cpp.GameObject(mPtr).get_transform().handle;
    trsIns = new Il2Cpp.Transform(mPtr);
    if (level == 10)
        LOGO(`${getLine(75)}\n`);
    let baseLevel = getLevel(trsIns);
    getChild(trsIns);
    if (level == 10)
        LOGO(`${getLine(75)}\n`);
    function getChild(trsInsLocal) {
        for (let index = 0; index < trsInsLocal.get_childCount(); ++index) {
            let child_transform = trsInsLocal.GetChild(index);
            let levelC = getLevel(child_transform) - baseLevel;
            if (levelC > 0 && levelC <= level)
                LOGD((inCall != undefined ? "\t" : "") +
                    getLine(levelC - 1, "\t") +
                    child_transform.handle + " : " +
                    child_transform.get_name());
            getChild(child_transform);
        }
    }
    function getLevel(trsInsLocal) {
        for (let level = 0; level < 10; ++level) {
            try {
                if (trsInsLocal.handle.isNull())
                    return level;
                trsInsLocal = trsInsLocal.get_parent();
            }
            catch (e) {
                return level;
            }
        }
        return 0;
    }
};
globalThis.getGameObject = (transform, inCall = false) => {
    transform = checkCmdInput(transform);
    if (inCall) {
        showGameObject(transform);
    }
    else {
        return new class_2.UnityEngine_Transform_Impl(transform).get_gameObject().handle;
    }
};
globalThis.getGameObjectPack = (mPtr) => {
    return new class_1.GameObjectImpl(getGameObject(mPtr));
};
},{"../../GameObject/class":159,"./class":150}],152:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./export");
require("./class");
require("./RectTransform/include");
},{"./RectTransform/include":148,"./api":149,"./class":150,"./export":151}],153:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class ComponentAPI {
    static get _ctor_0() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _CompareTag() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "CompareTag", 1, "bool", ["pointer", "pointer"]);
    }
    static get _GetComponent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponent", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetComponentInChildren() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponentInChildren", 2, "pointer", ["pointer", "pointer", "bool"]);
    }
    static get _GetComponentInParent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponentInParent", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetComponents() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "GetComponents", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_gameObject() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "get_gameObject", 0, "pointer", ["pointer"]);
    }
    static get _set_tag() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "set_tag", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_transform() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Component", "get_transform", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_ctor_0", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_CompareTag", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_GetComponent", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_GetComponentInChildren", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_GetComponentInParent", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_GetComponents", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_get_gameObject", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_set_tag", null);
__decorate([
    decorator_cache_getter_1.cache
], ComponentAPI, "_get_transform", null);
Il2Cpp.Api.Component = ComponentAPI;
},{"decorator-cache-getter":338}],154:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Component_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Component_Impl extends class_1.UnityEngine_Object {
    __ctor__() {
        return new Il2Cpp.Component(Il2Cpp.Api.Component._ctor_0(this.handle, allocP(1)));
    }
    CompareTag(tag) {
        return Il2Cpp.Api.Component._CompareTag(this.handle, allocUStr(tag));
    }
    GetComponent(type) {
        return new Il2Cpp.Component(Il2Cpp.Api.Component._GetComponent(this.handle, type));
    }
    GetComponentInChildren(t, includeInactive) {
        return new Il2Cpp.Component(Il2Cpp.Api.Component._GetComponentInChildren(this.handle, t.handle, includeInactive));
    }
    GetComponentInParent(t) {
        return new Il2Cpp.Component(Il2Cpp.Api.Component._GetComponentInParent(this.handle, t.handle));
    }
    GetComponents(type, results) {
        return Il2Cpp.Api.Component._GetComponents(this.handle, type, results);
    }
    get_gameObject() {
        return new Il2Cpp.GameObject(Il2Cpp.Api.Component._get_gameObject(this.handle));
    }
    set_tag(value) {
        return Il2Cpp.Api.Component._set_tag(this.handle, allocUStr(value));
    }
    get_transform() {
        return Il2Cpp.Api.Component._get_transform(this.handle);
    }
}
exports.UnityEngine_Component_Impl = UnityEngine_Component_Impl;
Il2Cpp.Component = UnityEngine_Component_Impl;
},{"../class":175}],155:[function(require,module,exports){
"use strict";
},{}],156:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./Behavior/include");
require("./Collider/include");
require("./ParticleSystem/include");
require("./Renderer/include");
require("./Rigidbody/include");
require("./Renderer/include");
require("./Transform/include");
require("./api");
require("./class");
require("./export");
require("./interface");
},{"./Behavior/include":124,"./Collider/include":130,"./ParticleSystem/include":135,"./Renderer/include":143,"./Rigidbody/include":144,"./Transform/include":152,"./api":153,"./class":154,"./export":155,"./interface":157}],157:[function(require,module,exports){
"use strict";
},{}],158:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class GameObjectAPI {
    static get _ctor_0() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _ctor_1() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", ".ctor", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _ctor_2() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", ".ctor", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _AddComponent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "AddComponent", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetComponent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponent", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetComponentInChildren() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponentInChildren", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetComponentInParent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponentInParent", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetComponentsInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "GetComponentsInternal", 6, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SendMessage() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "SendMessage", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SetActive() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "SetActive", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetComponentFastPath() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "TryGetComponentFastPath", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _CompareTag() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "CompareTag", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _get_transform() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_transform", 0, "pointer", ["pointer"]);
    }
    static get _get_tag() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_tag", 0, "pointer", ["pointer"]);
    }
    static get _get_layer() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_layer", 0, "pointer", ["pointer"]);
    }
    static get _set_layer() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "set_layer", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _get_gameObject() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_gameObject", 0, "pointer", ["pointer"]);
    }
    static get _get_activeSelf() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "get_activeSelf", 0, "bool", ["pointer"]);
    }
    static get _Find() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "Find", 1, "pointer", ["pointer"]);
    }
    static get _FindGameObjectsWithTag_A() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "FindGameObjectsWithTag", 1, "pointer", ["pointer"]);
    }
    static get _FindGameObjectWithTag() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "FindGameObjectWithTag", 1, "pointer", ["pointer"]);
    }
    static get _FindWithTag() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.GameObject", "FindWithTag", 1, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_ctor_0", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_ctor_1", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_ctor_2", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_AddComponent", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_GetComponent", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_GetComponentInChildren", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_GetComponentInParent", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_GetComponentsInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_SendMessage", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_SetActive", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_GetComponentFastPath", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_CompareTag", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_get_transform", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_get_tag", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_get_layer", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_set_layer", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_get_gameObject", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_get_activeSelf", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_Find", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_FindGameObjectsWithTag_A", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_FindGameObjectWithTag", null);
__decorate([
    decorator_cache_getter_1.cache
], GameObjectAPI, "_FindWithTag", null);
Il2Cpp.Api.GameObject = GameObjectAPI;
},{"decorator-cache-getter":338}],159:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameObjectImpl = void 0;
const class_1 = require("../class");
class GameObjectImpl extends class_1.UnityEngine_Object {
    constructor(handle) {
        super(handle);
    }
    ctor_0() {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._ctor_0(allocP(1)));
    }
    ctor_1(name) {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._ctor_1(allocP(1), allocUStr(name)));
    }
    ctor_2(name, type) {
        let types = Il2Cpp.Array.from(type[0].class, type.length);
        return Il2Cpp.Api.GameObject._ctor_2(this.handle, allocP(1), allocUStr(name), types);
    }
    AddComponent(componentType) {
        return Il2Cpp.Api.GameObject._AddComponent(this.handle, componentType);
    }
    GetComponent(type) {
        return Il2Cpp.Api.GameObject._GetComponent(this.handle, type);
    }
    GetComponentInChildren(type, includeInactive) {
        return Il2Cpp.Api.GameObject._GetComponentInChildren(this.handle, type.handle, ptr(includeInactive));
    }
    GetComponentInParent(type, includeInactive) {
        return Il2Cpp.Api.GameObject._GetComponentInParent(this.handle, type.handle, ptr(includeInactive));
    }
    GetComponentsInternal(type, useSearchTypeAsArrayReturnType, recursive, includeInactive, reverse, resultList) {
        return Il2Cpp.Api.GameObject._GetComponentsInternal(this.handle, type.handle, ptr(useSearchTypeAsArrayReturnType), ptr(recursive), ptr(includeInactive), ptr(reverse), ptr(resultList));
    }
    SendMessage(methodName, options) {
        return Il2Cpp.Api.GameObject._SendMessage(this.handle, allocUStr(methodName), options);
    }
    SetActive(value) {
        return Il2Cpp.Api.GameObject._SetActive(this.handle, ptr(value));
    }
    GetComponentFastPath(type, oneFurtherThanResultValue) {
        return Il2Cpp.Api.GameObject._GetComponentFastPath(this.handle, type, oneFurtherThanResultValue);
    }
    CompareTag(tag) {
        return Il2Cpp.Api.GameObject._CompareTag(this.handle, allocUStr(tag));
    }
    get_transform() {
        if (this.handle == ptr(0))
            throw new Error("get_transform : GameObject is null");
        return new Il2Cpp.Transform(Il2Cpp.Api.GameObject._get_transform(this.handle));
    }
    get_tag() {
        return Il2Cpp.Api.GameObject._get_tag(this.handle);
    }
    set_layer(value) {
        return Il2Cpp.Api.GameObject._set_layer(this.handle, ptr(value));
    }
    get_layer() {
        return Il2Cpp.Api.GameObject._get_layer(this.handle);
    }
    get_gameObject() {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._get_gameObject(this.handle));
    }
    get_activeSelf() {
        return Il2Cpp.Api.GameObject._get_activeSelf(this.handle);
    }
    get_activeInHierarchy() {
        return Il2Cpp.Api.GameObject._get_activeSelf(this.handle);
    }
    static Find(name) {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._Find(allocUStr(name)));
    }
    static FindGameObjectsWithTag_A(tag) {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._FindGameObjectsWithTag_A(allocUStr(tag)));
    }
    static FindGameObjectWithTag(tag) {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._FindGameObjectWithTag(allocUStr(tag)));
    }
    static FindWithTag(tag) {
        return new Il2Cpp.GameObject(Il2Cpp.Api.GameObject._FindWithTag(allocUStr(tag)));
    }
    showSelf() {
        if (!this.handle.isNull())
            showGameObject(this.handle);
    }
}
exports.GameObjectImpl = GameObjectImpl;
Il2Cpp.GameObject = GameObjectImpl;
},{"../class":175}],160:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransform = exports.HookSetActive = exports.showGameObject = void 0;
const common_1 = require("../../../../../utils/common");
globalThis.HookSetActive = (defaltActive = 1) => {
    A(Il2Cpp.Api.GameObject._SetActive, (args, ctx, passValue) => {
        if (args[0].isNull())
            return;
        let gameObject = new Il2Cpp.GameObject(args[0]);
        if ((0, common_1.filterDuplicateOBJ)(gameObject.toString()) == -1)
            return;
        if (defaltActive == 2 || args[1].toInt32() == defaltActive) {
            let strTmp = "public extern void SetActive( " + (args[1].toInt32() == 0 ? "false" : "true") + " );  LR:" + checkCtx(ctx);
            LOGW("\n" + getLine(strTmp.length));
            LOGD(strTmp);
            LOGO(getLine(strTmp.length / 2));
            showGameObject(args[0]);
        }
    });
};
globalThis.showGameObject = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    let gameObject;
    if (getTypeName(mPtr) == "GameObject") {
        gameObject = new Il2Cpp.GameObject(mPtr);
    }
    else if (getTypeName(mPtr) == "RectTransform") {
        gameObject = new Il2Cpp.Transform(mPtr).get_gameObject();
    }
    else {
        throw new Error("showGameObject: mPtr is not GameObject or Transform");
    }
    LOGO("--------- GameObject ---------");
    LOGD("gameObj\t\t--->\t" + gameObject.handle);
    LOGD("getName\t\t--->\t" + gameObject.get_name());
    LOGD("getLayer\t--->\t" + gameObject.get_layer());
    let m_transform = gameObject.get_transform();
    LOGD("getTransform\t--->\t" + m_transform.handle);
    let layerNames = "";
    for (var i = 0; i < 10; i++) {
        if (m_transform.handle.isNull())
            break;
        let getName = m_transform.get_gameObject().get_name();
        let handle = m_transform.handle;
        let spl = layerNames == "" ? "" : " <--- ";
        layerNames = layerNames + spl + getName + "(" + handle + ")";
        m_transform = m_transform.get_parent();
    }
    LOGD("hierarchy\t--->\t" + layerNames);
};
globalThis.getTransform = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    let gameObject;
    try {
        if (getTypeName(mPtr) == "GameObject") {
            gameObject = new Il2Cpp.GameObject(mPtr);
        }
        else {
            gameObject = new Il2Cpp.Component(mPtr).get_gameObject();
        }
    }
    catch {
        throw new Error("getTransform: mPtr is not GameObject or Transform");
    }
    return gameObject.get_transform().handle;
};
},{"../../../../../utils/common":329}],161:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
require("./interface");
},{"./api":158,"./class":159,"./export":160,"./interface":162}],162:[function(require,module,exports){
"use strict";
},{}],163:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Material_Impl = void 0;
const class_1 = require("../../ValueType/Color/class");
const class_2 = require("../../ValueType/Vector2/class");
const class_3 = require("../../ValueType/Vector4/class");
const class_4 = require("../class");
const class_5 = require("../Texture/class");
class UnityEngine_Material_Impl extends class_4.UnityEngine_Object {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static CreateWithShader(self, shader) {
        return Il2Cpp.Api.Material._CreateWithShader(self.handle, shader.handle);
    }
    static CreateWithMaterial(self, source) {
        return Il2Cpp.Api.Material._CreateWithMaterial(self.handle, source.handle);
    }
    static CreateWithString(self) {
        return Il2Cpp.Api.Material._CreateWithString(self.handle);
    }
    _ctor(shader) {
        return Il2Cpp.Api.Material.__ctor(this.handle, shader.handle);
    }
    _ctor_source(source) {
        return Il2Cpp.Api.Material.__ctor(this.handle, source.handle);
    }
    _ctor_contents(contents) {
        return Il2Cpp.Api.Material.__ctor(this.handle, allocUStr(contents));
    }
    set_shader(value) {
        return Il2Cpp.Api.Material._set_shader(this.handle, value.handle);
    }
    get_color() {
        return new class_1.UnityEngine_Color_Impl(Il2Cpp.Api.Material._get_color(this.handle));
    }
    set_color(value) {
        return Il2Cpp.Api.Material._set_color(this.handle, value.handle);
    }
    get_mainTexture() {
        return new class_5.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._get_mainTexture(this.handle));
    }
    set_mainTextureScale(value) {
        return Il2Cpp.Api.Material._set_mainTextureScale(this.handle, value.handle);
    }
    GetFirstPropertyNameIdByAttribute(attributeFlag) {
        return Il2Cpp.Api.Material._GetFirstPropertyNameIdByAttribute(this.handle, attributeFlag);
    }
    HasProperty(nameID) {
        return Il2Cpp.Api.Material._HasProperty(this.handle, nameID);
    }
    HasProperty_1(name) {
        return Il2Cpp.Api.Material._HasProperty(this.handle, allocUStr(name));
    }
    set_renderQueue(value) {
        return Il2Cpp.Api.Material._set_renderQueue(this.handle, value);
    }
    EnableKeyword(keyword) {
        return Il2Cpp.Api.Material._EnableKeyword(this.handle, allocUStr(keyword));
    }
    DisableKeyword(keyword) {
        return Il2Cpp.Api.Material._DisableKeyword(this.handle, allocUStr(keyword));
    }
    get_passCount() {
        return Il2Cpp.Api.Material._get_passCount(this.handle);
    }
    SetPass(pass) {
        return Il2Cpp.Api.Material._SetPass(this.handle, pass);
    }
    CopyPropertiesFromMaterial(mat) {
        return Il2Cpp.Api.Material._CopyPropertiesFromMaterial(this.handle, mat.handle);
    }
    GetShaderKeywords() {
        return Il2Cpp.Api.Material._GetShaderKeywords(this.handle);
    }
    SetShaderKeywords(names) {
        return Il2Cpp.Api.Material._SetShaderKeywords(this.handle, names);
    }
    get_shaderKeywords() {
        return Il2Cpp.Api.Material._get_shaderKeywords(this.handle);
    }
    set_shaderKeywords(value) {
        return Il2Cpp.Api.Material._set_shaderKeywords(this.handle, value);
    }
    ComputeCRC() {
        return Il2Cpp.Api.Material._ComputeCRC(this.handle);
    }
    SetFloatImpl(name, value) {
        return Il2Cpp.Api.Material._SetFloatImpl(this.handle, name, value);
    }
    SetColorImpl(name, value) {
        return Il2Cpp.Api.Material._SetColorImpl(this.handle, name, value.handle);
    }
    SetMatrixImpl(name, value) {
        return Il2Cpp.Api.Material._SetMatrixImpl(this.handle, name, value.handle);
    }
    SetTextureImpl(name, value) {
        return Il2Cpp.Api.Material._SetTextureImpl(this.handle, name, value.handle);
    }
    GetFloatImpl(name) {
        return Il2Cpp.Api.Material._GetFloatImpl(this.handle, name);
    }
    GetColorImpl(name) {
        return new class_1.UnityEngine_Color_Impl(Il2Cpp.Api.Material._GetColorImpl(this.handle, name));
    }
    GetTextureImpl(name) {
        return new class_5.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._GetTextureImpl(this.handle, name));
    }
    GetTextureScaleAndOffsetImpl(name) {
        return new class_3.UnityEngine_Vector4_Impl(Il2Cpp.Api.Material._GetTextureScaleAndOffsetImpl(this.handle, name));
    }
    SetTextureOffsetImpl(name, offset) {
        return Il2Cpp.Api.Material._SetTextureOffsetImpl(this.handle, name, offset.handle);
    }
    SetTextureScaleImpl(name, scale) {
        return Il2Cpp.Api.Material._SetTextureScaleImpl(this.handle, name, scale.handle);
    }
    SetFloat(name, value) {
        return Il2Cpp.Api.Material._SetFloat(this.handle, allocUStr(name), value);
    }
    SetFloat_2(nameID, value) {
        return Il2Cpp.Api.Material._SetFloat(this.handle, nameID, value);
    }
    SetInt(name, value) {
        return Il2Cpp.Api.Material._SetInt(this.handle, allocUStr(name), value);
    }
    SetColor(name, value) {
        return Il2Cpp.Api.Material._SetColor(this.handle, allocUStr(name), value.handle);
    }
    SetColor_2(nameID, value) {
        return Il2Cpp.Api.Material._SetColor(this.handle, nameID, value.handle);
    }
    SetVector(name, value) {
        return Il2Cpp.Api.Material._SetVector(this.handle, allocUStr(name), value.handle);
    }
    SetVector_2(nameID, value) {
        return Il2Cpp.Api.Material._SetVector(this.handle, nameID, value.handle);
    }
    SetMatrix(name, value) {
        return Il2Cpp.Api.Material._SetMatrix(this.handle, allocUStr(name), value.handle);
    }
    SetMatrix_2(nameID, value) {
        return Il2Cpp.Api.Material._SetMatrix(this.handle, nameID, value.handle);
    }
    SetTexture(name, value) {
        return Il2Cpp.Api.Material._SetTexture(this.handle, allocUStr(name), value.handle);
    }
    SetTexture_2(nameID, value) {
        return Il2Cpp.Api.Material._SetTexture(this.handle, nameID, value.handle);
    }
    GetFloat(name) {
        return Il2Cpp.Api.Material._GetFloat(this.handle, allocUStr(name));
    }
    GetFloat_1(nameID) {
        return Il2Cpp.Api.Material._GetFloat(this.handle, nameID);
    }
    GetColor(name) {
        return new class_1.UnityEngine_Color_Impl(Il2Cpp.Api.Material._GetColor(this.handle, allocUStr(name)));
    }
    GetColor_1(nameID) {
        return new class_1.UnityEngine_Color_Impl(Il2Cpp.Api.Material._GetColor(this.handle, nameID));
    }
    GetVector(nameID) {
        return new class_3.UnityEngine_Vector4_Impl(Il2Cpp.Api.Material._GetVector(this.handle, nameID));
    }
    GetTexture(name) {
        return new class_5.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._GetTexture(this.handle, allocUStr(name)));
    }
    GetTexture_1(nameID) {
        return new class_5.UnityEngine_Texture_Impl(Il2Cpp.Api.Material._GetTexture(this.handle, nameID));
    }
    SetTextureOffset(nameID, value) {
        return Il2Cpp.Api.Material._SetTextureOffset(this.handle, nameID, value.handle);
    }
    SetTextureScale(name, value) {
        return Il2Cpp.Api.Material._SetTextureScale(this.handle, allocUStr(name), value.handle);
    }
    SetTextureScale_2(nameID, value) {
        return Il2Cpp.Api.Material._SetTextureScale(this.handle, nameID, value.handle);
    }
    GetTextureOffset(nameID) {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.Material._GetTextureOffset(this.handle, nameID));
    }
    GetTextureScale(nameID) {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.Material._GetTextureScale(this.handle, nameID));
    }
    SetColorImpl_Injected(name, value) {
        return Il2Cpp.Api.Material._SetColorImpl_Injected(this.handle, name, value.handle);
    }
    SetMatrixImpl_Injected(name, value) {
        return Il2Cpp.Api.Material._SetMatrixImpl_Injected(this.handle, name, value.handle);
    }
    GetColorImpl_Injected(name, ret) {
        return Il2Cpp.Api.Material._GetColorImpl_Injected(this.handle, name, ret.handle);
    }
    GetTextureScaleAndOffsetImpl_Injected(name, ret) {
        return Il2Cpp.Api.Material._GetTextureScaleAndOffsetImpl_Injected(this.handle, name, ret.handle);
    }
    SetTextureOffsetImpl_Injected(name, offset) {
        return Il2Cpp.Api.Material._SetTextureOffsetImpl_Injected(this.handle, name, offset.handle);
    }
    SetTextureScaleImpl_Injected(name, scale) {
        return Il2Cpp.Api.Material._SetTextureScaleImpl_Injected(this.handle, name, scale.handle);
    }
}
exports.UnityEngine_Material_Impl = UnityEngine_Material_Impl;
Il2Cpp.Material = UnityEngine_Material_Impl;
},{"../../ValueType/Color/class":235,"../../ValueType/Vector2/class":282,"../../ValueType/Vector4/class":290,"../Texture/class":173,"../class":175}],164:[function(require,module,exports){
"use strict";
},{}],165:[function(require,module,exports){
"use strict";
},{}],166:[function(require,module,exports){
"use strict";
},{}],167:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Shader_API {
    static get _Find() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Shader", "Find", 1, "pointer", ["pointer"]);
    }
    static get _PropertyToID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Shader", "PropertyToID", 1, "pointer", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Shader", ".ctor", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Shader_API, "_Find", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Shader_API, "_PropertyToID", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Shader_API, "__ctor", null);
Il2Cpp.Api.Shader = UnityEngine_Shader_API;
},{"decorator-cache-getter":338}],168:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Shader_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Shader_Impl extends class_1.UnityEngine_Object {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static Find(name) {
        return Il2Cpp.Api.Shader._Find(name);
    }
    static PropertyToID(name) {
        return Il2Cpp.Api.Shader._PropertyToID(name);
    }
    _ctor() {
        return Il2Cpp.Api.Shader.__ctor(this.handle);
    }
}
exports.UnityEngine_Shader_Impl = UnityEngine_Shader_Impl;
Il2Cpp.Shader = UnityEngine_Shader_Impl;
},{"../class":175}],169:[function(require,module,exports){
"use strict";
},{}],170:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":167,"./class":168,"./export":169}],171:[function(require,module,exports){
"use strict";
},{}],172:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Texture_API = void 0;
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Texture_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", ".ctor", 0, "void", ["pointer"]);
    }
    static get _GetDataWidth() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "GetDataWidth", 0, "pointer", ["pointer"]);
    }
    static get _GetDataHeight() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "GetDataHeight", 0, "pointer", ["pointer"]);
    }
    static get _get_width() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_width", 0, "pointer", ["pointer"]);
    }
    static get _set_width() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "set_width", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_height() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_height", 0, "pointer", ["pointer"]);
    }
    static get _set_height() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "set_height", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_isReadable() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_isReadable", 0, "pointer", ["pointer"]);
    }
    static get _get_wrapMode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_wrapMode", 0, "pointer", ["pointer"]);
    }
    static get _get_texelSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_texelSize", 0, "pointer", ["pointer"]);
    }
    static get _Internal_GetActiveTextureColorSpace() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "Internal_GetActiveTextureColorSpace", 0, "pointer", ["pointer"]);
    }
    static get _get_activeTextureColorSpace() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_activeTextureColorSpace", 0, "pointer", ["pointer"]);
    }
    static get _ValidateFormat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "ValidateFormat", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _ValidateFormat_format_usage() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Texture", "ValidateFormat", 2, ["UnityEngine.Experimental.Rendering.GraphicsFormat", "UnityEngine.Experimental.Rendering.FormatUsage"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _CreateNonReadableException() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "CreateNonReadableException", 1, "pointer", ["pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", ".cctor", 0, "void", []);
    }
    static get _get_texelSize_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Texture", "get_texelSize_Injected", 1, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_GetDataWidth", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_GetDataHeight", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_width", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_set_width", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_height", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_set_height", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_isReadable", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_wrapMode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_texelSize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_Internal_GetActiveTextureColorSpace", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_activeTextureColorSpace", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_ValidateFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_ValidateFormat_format_usage", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_CreateNonReadableException", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Texture_API, "_get_texelSize_Injected", null);
exports.UnityEngine_Texture_API = UnityEngine_Texture_API;
Il2Cpp.Api.Texture = UnityEngine_Texture_API;
},{"decorator-cache-getter":338}],173:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Texture_Impl = void 0;
const class_1 = require("../../ValueType/Vector2/class");
const class_2 = require("../class");
const api_1 = require("./api");
class UnityEngine_Texture_Impl extends class_2.UnityEngine_Object {
    GenerateAllMips = lfv(this.handle, "GenerateAllMips");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor() {
        return api_1.UnityEngine_Texture_API.__ctor(allocP());
    }
    GetDataWidth() {
        return api_1.UnityEngine_Texture_API._GetDataWidth(this.handle);
    }
    GetDataHeight() {
        return api_1.UnityEngine_Texture_API._GetDataHeight(this.handle);
    }
    get_width() {
        return api_1.UnityEngine_Texture_API._get_width(this.handle);
    }
    set_width(value) {
        return api_1.UnityEngine_Texture_API._set_width(this.handle, value);
    }
    get_height() {
        return api_1.UnityEngine_Texture_API._get_height(this.handle);
    }
    set_height(value) {
        return api_1.UnityEngine_Texture_API._set_height(this.handle, value);
    }
    get_isReadable() {
        return api_1.UnityEngine_Texture_API._get_isReadable(this.handle);
    }
    get_wrapMode() {
        return api_1.UnityEngine_Texture_API._get_wrapMode(this.handle);
    }
    get_texelSize() {
        return new class_1.UnityEngine_Vector2_Impl(api_1.UnityEngine_Texture_API._get_texelSize(this.handle));
    }
    Internal_GetActiveTextureColorSpace() {
        return api_1.UnityEngine_Texture_API._Internal_GetActiveTextureColorSpace(this.handle);
    }
    get_activeTextureColorSpace() {
        return api_1.UnityEngine_Texture_API._get_activeTextureColorSpace(this.handle);
    }
    ValidateFormat(format) {
        return api_1.UnityEngine_Texture_API._ValidateFormat(this.handle, format);
    }
    ValidateFormat_2(format, usage) {
        return api_1.UnityEngine_Texture_API._ValidateFormat(this.handle, format, usage);
    }
    CreateNonReadableException(t) {
        return api_1.UnityEngine_Texture_API._CreateNonReadableException(this.handle, t.handle);
    }
    static _cctor() {
        return api_1.UnityEngine_Texture_API.__cctor();
    }
    get_texelSize_Injected(ret) {
        return api_1.UnityEngine_Texture_API._get_texelSize_Injected(this.handle, ret);
    }
}
exports.UnityEngine_Texture_Impl = UnityEngine_Texture_Impl;
Il2Cpp.Texture = UnityEngine_Texture_Impl;
},{"../../ValueType/Vector2/class":282,"../class":175,"./api":172}],174:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.il2cppObjAPI = void 0;
const decorator_cache_getter_1 = require("decorator-cache-getter");
class il2cppObjAPI {
    static get _ctor_0() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "GetHashCode", 0, "int32", ["pointer"]);
    }
    static get _GetInstanceID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "GetInstanceID", 0, "int32", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _set_name() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "set_name", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_name() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "get_name", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "Equals", 1, "bool", ["pointer"]);
    }
    static get _Destroy_1() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "Destroy", 1, "void", ["pointer"]);
    }
    static get _Destroy_2() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "Destroy", 2, "void", ["pointer", "float"]);
    }
    static get _DestroyImmediate() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Object", "DestroyImmediate", 1, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_ctor_0", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_GetInstanceID", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_set_name", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_get_name", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_Destroy_1", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_Destroy_2", null);
__decorate([
    decorator_cache_getter_1.cache
], il2cppObjAPI, "_DestroyImmediate", null);
exports.il2cppObjAPI = il2cppObjAPI;
Il2Cpp.Api.il2cppObj = il2cppObjAPI;
},{"decorator-cache-getter":338}],175:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Object = void 0;
class il2cppObjAPI_impl extends Il2Cpp.Object {
    ctor() {
        return Il2Cpp.Api.il2cppObj._ctor_0(allocP(1));
    }
    Equals(other) {
        return Il2Cpp.Api.il2cppObj._Equals(this.handle, other.handle);
    }
    GetHashCode() {
        return Il2Cpp.Api.il2cppObj._GetHashCode(this.handle);
    }
    GetInstanceID() {
        return Il2Cpp.Api.il2cppObj._GetInstanceID(this.handle);
    }
    ToString() {
        return Il2Cpp.Api.il2cppObj._ToString(this.handle);
    }
    set_name(value) {
        return Il2Cpp.Api.il2cppObj._set_name(this.handle, allocUStr(value));
    }
    get_name() {
        return readU16(Il2Cpp.Api.il2cppObj._get_name(this.handle));
    }
    static Destroy_1(obj) {
        return Il2Cpp.Api.il2cppObj._Destroy_1(obj);
    }
    static Destroy_2(obj, t) {
        return Il2Cpp.Api.il2cppObj._Destroy_2(obj, t);
    }
    static DestroyImmediate(obj) {
        return Il2Cpp.Api.il2cppObj._DestroyImmediate(obj);
    }
}
class Unity_Object_Impl extends il2cppObjAPI_impl {
}
exports.UnityEngine_Object = Unity_Object_Impl;
},{}],176:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./interface");
require("./AssetBundle/include");
require("./Avatar/include");
require("./Component/include");
require("./GameObject/include");
require("./Material/include");
require("./Mesh/include");
require("./Montion/include");
require("./Shader/include");
require("./Sprite/include");
},{"./AssetBundle/include":89,"./Avatar/include":90,"./Component/include":156,"./GameObject/include":161,"./Material/include":164,"./Mesh/include":165,"./Montion/include":166,"./Shader/include":170,"./Sprite/include":171,"./api":174,"./class":175,"./interface":177}],177:[function(require,module,exports){
"use strict";
},{}],178:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Physics_API {
    static get _get_gravity() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_gravity", 0, "pointer", []);
    }
    static get _set_gravity() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "set_gravity", 1, "void", ["pointer"]);
    }
    static get _get_defaultPhysicsScene() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_defaultPhysicsScene", 0, "pointer", []);
    }
    static get _IgnoreCollision() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "IgnoreCollision", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _IgnoreLayerCollision() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "IgnoreLayerCollision", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _IgnoreLayerCollision_layer1_layer2() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "IgnoreLayerCollision", 2, ["System.Int32", "System.Int32"], "void", ["pointer", "pointer"]);
    }
    static get _Raycast() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_origin_direction_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, ["UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_origin_direction_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, ["UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Raycast_origin_direction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 2, ["UnityEngine.Vector3", "UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _Raycast_origin_direction_hitInfo_maxDistance_layerMask_queryTriggerInteraction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 6, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_origin_direction_hitInfo_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 5, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_origin_direction_hitInfo_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_origin_direction_hitInfo() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_maxDistance_layerMask_queryTriggerInteraction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, ["UnityEngine.Ray", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, ["UnityEngine.Ray", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 2, ["UnityEngine.Ray", "System.Single"], "pointer", ["pointer", "pointer"]);
    }
    static get _Raycast_ray() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 1, ["UnityEngine.Ray"], "pointer", ["pointer"]);
    }
    static get _Raycast_ray_hitInfo_maxDistance_layerMask_queryTriggerInteraction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 5, ["UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_hitInfo_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 4, ["UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_hitInfo_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 3, ["UnityEngine.Ray", "UnityEngine.RaycastHit&", "System.Single"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Raycast_ray_hitInfo() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Raycast", 2, ["UnityEngine.Ray", "UnityEngine.RaycastHit&"], "pointer", ["pointer", "pointer"]);
    }
    static get _Linecast() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Linecast", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Linecast_start_end_hitInfo() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Linecast", 3, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SphereCast() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 7, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SphereCast_origin_radius_direction_hitInfo_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 5, ["UnityEngine.Vector3", "System.Single", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "System.Single"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SphereCast_origin_radius_direction_hitInfo() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 4, ["UnityEngine.Vector3", "System.Single", "UnityEngine.Vector3", "UnityEngine.RaycastHit&"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SphereCast_ray_radius_hitInfo_maxDistance_layerMask_queryTriggerInteraction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 6, ["UnityEngine.Ray", "System.Single", "UnityEngine.RaycastHit&", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SphereCast_ray_radius_hitInfo_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCast", 5, ["UnityEngine.Ray", "System.Single", "UnityEngine.RaycastHit&", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _BoxCast() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "BoxCast", 8, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _BoxCast_center_halfExtents_direction_hitInfo_orientation_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "BoxCast", 7, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit&", "UnityEngine.Quaternion", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Internal_RaycastAll() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Internal_RaycastAll", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastAll() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastAll_origin_direction_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 4, ["UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastAll_origin_direction_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 3, ["UnityEngine.Vector3", "UnityEngine.Vector3", "System.Single"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _RaycastAll_origin_direction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 2, ["UnityEngine.Vector3", "UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _RaycastAll_ray_maxDistance_layerMask_queryTriggerInteraction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 4, ["UnityEngine.Ray", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastAll_ray_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 3, ["UnityEngine.Ray", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _RaycastAll_ray_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 2, ["UnityEngine.Ray", "System.Single"], "pointer", ["pointer", "pointer"]);
    }
    static get _RaycastAll_ray() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastAll", 1, ["UnityEngine.Ray"], "pointer", ["pointer"]);
    }
    static get _RaycastNonAlloc() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_ray_results_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 4, ["UnityEngine.Ray", "UnityEngine.RaycastHit[]", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_ray_results_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 3, ["UnityEngine.Ray", "UnityEngine.RaycastHit[]", "System.Single"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_ray_results() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 2, ["UnityEngine.Ray", "UnityEngine.RaycastHit[]"], "pointer", ["pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_origin_direction_results_maxDistance_layerMask_queryTriggerInteraction() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 6, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]", "System.Single", "System.Int32", "UnityEngine.QueryTriggerInteraction"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_origin_direction_results_maxDistance_layerMask() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 5, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]", "System.Single", "System.Int32"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_origin_direction_results_maxDistance() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 4, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]", "System.Single"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _RaycastNonAlloc_origin_direction_results() {
        return Il2Cpp.Api.o("UnityEngine.PhysicsModule", "UnityEngine.Physics", "RaycastNonAlloc", 3, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.RaycastHit[]"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Query_ComputePenetration() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Query_ComputePenetration", 8, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ComputePenetration() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "ComputePenetration", 8, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _OverlapSphereNonAlloc() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "OverlapSphereNonAlloc", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SphereCastNonAlloc() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "SphereCastNonAlloc", 7, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _get_gravity_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_gravity_Injected", 1, "void", ["pointer"]);
    }
    static get _set_gravity_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "set_gravity_Injected", 1, "void", ["pointer"]);
    }
    static get _get_defaultPhysicsScene_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "get_defaultPhysicsScene_Injected", 1, "void", ["pointer"]);
    }
    static get _Internal_RaycastAll_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Internal_RaycastAll_Injected", 5, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Query_ComputePenetration_Injected() {
        return Il2Cpp.Api.t("UnityEngine.PhysicsModule", "UnityEngine.Physics", "Query_ComputePenetration_Injected", 8, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_get_gravity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_set_gravity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_get_defaultPhysicsScene", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_IgnoreCollision", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_IgnoreLayerCollision", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_IgnoreLayerCollision_layer1_layer2", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction_hitInfo_maxDistance_layerMask_queryTriggerInteraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction_hitInfo_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction_hitInfo_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_origin_direction_hitInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_maxDistance_layerMask_queryTriggerInteraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_hitInfo_maxDistance_layerMask_queryTriggerInteraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_hitInfo_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_hitInfo_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Raycast_ray_hitInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Linecast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Linecast_start_end_hitInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_SphereCast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_SphereCast_origin_radius_direction_hitInfo_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_SphereCast_origin_radius_direction_hitInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_SphereCast_ray_radius_hitInfo_maxDistance_layerMask_queryTriggerInteraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_SphereCast_ray_radius_hitInfo_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_BoxCast", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_BoxCast_center_halfExtents_direction_hitInfo_orientation_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Internal_RaycastAll", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_origin_direction_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_origin_direction_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_origin_direction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_ray_maxDistance_layerMask_queryTriggerInteraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_ray_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_ray_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastAll_ray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_ray_results_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_ray_results_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_ray_results", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_origin_direction_results_maxDistance_layerMask_queryTriggerInteraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_origin_direction_results_maxDistance_layerMask", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_origin_direction_results_maxDistance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_RaycastNonAlloc_origin_direction_results", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Query_ComputePenetration", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_ComputePenetration", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_OverlapSphereNonAlloc", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_SphereCastNonAlloc", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_get_gravity_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_set_gravity_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_get_defaultPhysicsScene_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Internal_RaycastAll_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Physics_API, "_Query_ComputePenetration_Injected", null);
Il2Cpp.Api.Physics = UnityEngine_Physics_API;
},{"decorator-cache-getter":338}],179:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Physics_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Physics_Impl extends class_1.mscorlib_System_Object_impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static get_gravity() {
        return Il2Cpp.Api.Physics._get_gravity();
    }
    static set_gravity(value) {
        return Il2Cpp.Api.Physics._set_gravity(value);
    }
    static get_defaultPhysicsScene() {
        return Il2Cpp.Api.Physics._get_defaultPhysicsScene();
    }
    static IgnoreCollision(collider1, collider2, ignore) {
        return Il2Cpp.Api.Physics._IgnoreCollision(collider1, collider2, ignore);
    }
    static IgnoreLayerCollision(layer1, layer2, ignore) {
        return Il2Cpp.Api.Physics._IgnoreLayerCollision(layer1, layer2, ignore);
    }
    static IgnoreLayerCollision_2(layer1, layer2) {
        return Il2Cpp.Api.Physics._IgnoreLayerCollision(layer1, layer2);
    }
    static Raycast(origin, direction, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, maxDistance, layerMask, queryTriggerInteraction);
    }
    static Raycast_4(origin, direction, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, maxDistance, layerMask);
    }
    static Raycast_3(origin, direction, maxDistance) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, maxDistance);
    }
    static Raycast_2(origin, direction) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction);
    }
    static Raycast_6(origin, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
    }
    static Raycast_v3_dir_hit_max_layer(origin, direction, hitInfo, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, hitInfo, maxDistance, layerMask);
    }
    static Raycast_org_v3_hit_dis(origin, direction, hitInfo, maxDistance) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, hitInfo, maxDistance);
    }
    static Raycast_v3_v3_hit(origin, direction, hitInfo) {
        return Il2Cpp.Api.Physics._Raycast(origin, direction, hitInfo);
    }
    static Raycast_ray_num_num_query(ray, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Raycast(ray, maxDistance, layerMask, queryTriggerInteraction);
    }
    static Raycast_ray_num_num(ray, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._Raycast(ray, maxDistance, layerMask);
    }
    static Raycast_ray_num(ray, maxDistance) {
        return Il2Cpp.Api.Physics._Raycast(ray, maxDistance);
    }
    static Raycast_ray(ray) {
        return Il2Cpp.Api.Physics._Raycast(ray);
    }
    static Raycast_5(ray, hitInfo, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Raycast(ray, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
    }
    static Raycast_ray_hit_dis_layer(ray, hitInfo, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._Raycast(ray, hitInfo, maxDistance, layerMask);
    }
    static Raycast_ray_ray_num(ray, hitInfo, maxDistance) {
        return Il2Cpp.Api.Physics._Raycast(ray, hitInfo, maxDistance);
    }
    static Raycast_ray_hit(ray, hitInfo) {
        return Il2Cpp.Api.Physics._Raycast(ray, hitInfo);
    }
    static Linecast(start, end, hitInfo, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Linecast(start, end, hitInfo, layerMask, queryTriggerInteraction);
    }
    static Linecast_3(start, end, hitInfo) {
        return Il2Cpp.Api.Physics._Linecast(start, end, hitInfo);
    }
    static SphereCast(origin, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._SphereCast(origin, radius, direction, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
    }
    static SphereCast_v3_num_v3_hit_num(origin, radius, direction, hitInfo, maxDistance) {
        return Il2Cpp.Api.Physics._SphereCast(origin, radius, direction, hitInfo, maxDistance);
    }
    static SphereCast_4(origin, radius, direction, hitInfo) {
        return Il2Cpp.Api.Physics._SphereCast(origin, radius, direction, hitInfo);
    }
    static SphereCast_6(ray, radius, hitInfo, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._SphereCast(ray, radius, hitInfo, maxDistance, layerMask, queryTriggerInteraction);
    }
    static SphereCast_5(ray, radius, hitInfo, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._SphereCast(ray, radius, hitInfo, maxDistance, layerMask);
    }
    static BoxCast(center, halfExtents, direction, hitInfo, orientation, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._BoxCast(center, halfExtents, direction, hitInfo, orientation, maxDistance, layerMask, queryTriggerInteraction);
    }
    static BoxCast_7(center, halfExtents, direction, hitInfo, orientation, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._BoxCast(center, halfExtents, direction, hitInfo, orientation, maxDistance, layerMask);
    }
    static Internal_RaycastAll(physicsScene, ray, maxDistance, mask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Internal_RaycastAll(physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
    }
    static RaycastAll(origin, direction, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._RaycastAll(origin, direction, maxDistance, layerMask, queryTriggerInteraction);
    }
    static RaycastAll_4_1(origin, direction, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._RaycastAll(origin, direction, maxDistance, layerMask);
    }
    static RaycastAll_3_1(origin, direction, maxDistance) {
        return Il2Cpp.Api.Physics._RaycastAll(origin, direction, maxDistance);
    }
    static RaycastAll_2_1(origin, direction) {
        return Il2Cpp.Api.Physics._RaycastAll(origin, direction);
    }
    static RaycastAll_4(ray, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._RaycastAll(ray, maxDistance, layerMask, queryTriggerInteraction);
    }
    static RaycastAll_3(ray, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._RaycastAll(ray, maxDistance, layerMask);
    }
    static RaycastAll_2_2(ray, maxDistance) {
        return Il2Cpp.Api.Physics._RaycastAll(ray, maxDistance);
    }
    static RaycastAll_1(ray) {
        return Il2Cpp.Api.Physics._RaycastAll(ray);
    }
    static RaycastNonAlloc(ray, results, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(ray, results, maxDistance, layerMask, queryTriggerInteraction);
    }
    static RaycastNonAlloc_4_1(ray, results, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(ray, results, maxDistance, layerMask);
    }
    static RaycastNonAlloc_3_1(ray, results, maxDistance) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(ray, results, maxDistance);
    }
    static RaycastNonAlloc_2(ray, results) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(ray, results);
    }
    static RaycastNonAlloc_6(origin, direction, results, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(origin, direction, results, maxDistance, layerMask, queryTriggerInteraction);
    }
    static RaycastNonAlloc_5(origin, direction, results, maxDistance, layerMask) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(origin, direction, results, maxDistance, layerMask);
    }
    static RaycastNonAlloc_4(origin, direction, results, maxDistance) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(origin, direction, results, maxDistance);
    }
    static RaycastNonAlloc_3(origin, direction, results) {
        return Il2Cpp.Api.Physics._RaycastNonAlloc(origin, direction, results);
    }
    static Query_ComputePenetration(colliderA, positionA, rotationA, colliderB, positionB, rotationB, direction, distance) {
        return Il2Cpp.Api.Physics._Query_ComputePenetration(colliderA, positionA, rotationA, colliderB, positionB, rotationB, direction, distance);
    }
    static ComputePenetration(colliderA, positionA, rotationA, colliderB, positionB, rotationB, direction, distance) {
        return Il2Cpp.Api.Physics._ComputePenetration(colliderA, positionA, rotationA, colliderB, positionB, rotationB, direction, distance);
    }
    static OverlapSphereNonAlloc(position, radius, results, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._OverlapSphereNonAlloc(position, radius, results, layerMask, queryTriggerInteraction);
    }
    static SphereCastNonAlloc(origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._SphereCastNonAlloc(origin, radius, direction, results, maxDistance, layerMask, queryTriggerInteraction);
    }
    static get_gravity_Injected(ret) {
        return Il2Cpp.Api.Physics._get_gravity_Injected(ret);
    }
    static set_gravity_Injected(value) {
        return Il2Cpp.Api.Physics._set_gravity_Injected(value);
    }
    static get_defaultPhysicsScene_Injected(ret) {
        return Il2Cpp.Api.Physics._get_defaultPhysicsScene_Injected(ret);
    }
    static Internal_RaycastAll_Injected(physicsScene, ray, maxDistance, mask, queryTriggerInteraction) {
        return Il2Cpp.Api.Physics._Internal_RaycastAll_Injected(physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
    }
    static Query_ComputePenetration_Injected(colliderA, positionA, rotationA, colliderB, positionB, rotationB, direction, distance) {
        return Il2Cpp.Api.Physics._Query_ComputePenetration_Injected(colliderA, positionA, rotationA, colliderB, positionB, rotationB, direction, distance);
    }
}
exports.UnityEngine_Physics_Impl = UnityEngine_Physics_Impl;
Il2Cpp.Physics = UnityEngine_Physics_Impl;
},{"../class":304}],180:[function(require,module,exports){
"use strict";
},{}],181:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":178,"./class":179,"./export":180}],182:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class PlayerPrefsAPI {
    static get _DeleteAll() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "DeleteAll", 0, "pointer", ["pointer"]);
    }
    static get _DeleteKey() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "DeleteKey", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetFloat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetFloat", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetFloat_2() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetFloat", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetInt() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetInt", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetInt_2() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetInt", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetString", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetString_2() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "GetString", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _HasKey() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "HasKey", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Save() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "Save", 0, "pointer", ["pointer"]);
    }
    static get _SetFloat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "SetFloat", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SetInt() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "SetInt", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SetString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.PlayerPrefs", "SetString", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_DeleteAll", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_DeleteKey", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_GetFloat", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_GetFloat_2", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_GetInt", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_GetInt_2", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_GetString", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_GetString_2", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_HasKey", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_Save", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_SetFloat", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_SetInt", null);
__decorate([
    decorator_cache_getter_1.cache
], PlayerPrefsAPI, "_SetString", null);
Il2Cpp.Api.PlayerPrefs = PlayerPrefsAPI;
},{"decorator-cache-getter":338}],183:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerPrefsImpl = void 0;
const class_1 = require("../Object/class");
class PlayerPrefsImpl extends class_1.UnityEngine_Object {
    DeleteAll() {
        return Il2Cpp.Api.PlayerPrefs._DeleteAll(this.handle);
    }
    DeleteKey(key) {
        return Il2Cpp.Api.PlayerPrefs._DeleteKey(this.handle, allocCStr(key));
    }
    GetFloat(key) {
        return Il2Cpp.Api.PlayerPrefs._GetFloat(this.handle, allocCStr(key));
    }
    GetFloat_2(key, defaultValue = 0) {
        return Il2Cpp.Api.PlayerPrefs._GetFloat_2(this.handle, allocCStr(key), defaultValue);
    }
    GetInt(key) {
        return Il2Cpp.Api.PlayerPrefs._GetInt(this.handle, allocCStr(key));
    }
    GetInt_2(key, defaultValue = 0) {
        return Il2Cpp.Api.PlayerPrefs._GetInt_2(this.handle, allocCStr(key), defaultValue);
    }
    GetString(key) {
        return Il2Cpp.Api.PlayerPrefs._GetString(this.handle, allocCStr(key));
    }
    GetString_2(key, defaultValue = "") {
        return Il2Cpp.Api.PlayerPrefs._GetString_2(this.handle, allocCStr(key), allocCStr(defaultValue));
    }
    HasKey(key) {
        return Il2Cpp.Api.PlayerPrefs._HasKey(this.handle, allocCStr(key));
    }
    Save() {
        return Il2Cpp.Api.PlayerPrefs._Save(this.handle);
    }
    SetFloat(key, value = 0) {
        return Il2Cpp.Api.PlayerPrefs._SetFloat(this.handle, allocCStr(key), value);
    }
    SetInt(key, value = 0) {
        return Il2Cpp.Api.PlayerPrefs._SetInt(this.handle, allocCStr(key), value);
    }
    SetString(key, value = "") {
        return Il2Cpp.Api.PlayerPrefs._SetString(this.handle, allocCStr(key), allocCStr(value));
    }
}
exports.PlayerPrefsImpl = PlayerPrefsImpl;
Il2Cpp.PlayerPrefs = PlayerPrefsImpl;
},{"../Object/class":175}],184:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HookPlayerPrefs = void 0;
const HookPlayerPrefs = (isShowPrintStack = false, needLRInfo = true) => {
    InterceptorGetFunctions();
    InterceptorSetFunctions();
    function InterceptorGetFunctions() {
        A(Il2Cpp.Api.PlayerPrefs._GetFloat_2, (args, ctx, pass) => {
            pass.set("arg0", readU16(args[0]));
            pass.set("arg1", args[1]);
        }, (retval, ctx, pass) => {
            LOGD("\n[*] '" + retval + "' = GetFloat('" + pass.get("arg0") + "'," + pass.get("arg1") + ")");
            if (needLRInfo)
                LOGZ("\t\t { LR:" + checkCtx(ctx) + " } | { PC:" + checkCtx(ctx, "PC") + " }");
            if (isShowPrintStack)
                LOGZ((GetStackTraceN(ctx)));
        });
        A(Il2Cpp.Api.PlayerPrefs._GetInt_2, (args, ctx, pass) => {
            pass.set("arg0", readU16(args[0]));
            pass.set("arg1", args[1]);
        }, (retval, ctx, pass) => {
            LOGD("\n[*] '" + retval.toInt32() + "' = GetInt('" + pass.get("arg0") + "'," + pass.get("arg1") + ")");
            if (needLRInfo)
                LOGZ("\t\t { LR:" + checkCtx(ctx) + " } | { PC:" + checkCtx(ctx, "PC") + " }");
            if (isShowPrintStack)
                LOGZ((GetStackTraceN(ctx)));
            if (pass.get("arg0").indexOf("SaleBoughted") != -1)
                retval.replace(ptr(0x1));
        });
        A(Il2Cpp.Api.PlayerPrefs._GetString, (args, ctx, pass) => {
            pass.set("arg0", readU16(args[0]));
        }, (retval, ctx, pass) => {
            LOGD("\n[*] '" + readU16(retval) + "' = GetString('" + pass.get("arg0") + "')");
            if (needLRInfo)
                LOGZ("\t\t { LR:" + checkCtx(ctx) + " } | { PC:" + checkCtx(ctx, "PC") + " }");
            if (isShowPrintStack)
                LOGZ((GetStackTraceN(ctx)));
        });
    }
    function InterceptorSetFunctions() {
        A(Il2Cpp.Api.PlayerPrefs._SetFloat, (args, ctx, pass) => {
            pass.set("arg0", readU16(args[0]));
            pass.set("arg1", (args[1].isNull() ? 0 : readSingle(args[1])));
        }, (retval, ctx, pass) => {
            LOGD("\n[*] SetFloat('" + pass.get("arg0") + "'," + pass.get("arg1") + ")");
            if (needLRInfo)
                LOGZ("\t\t { LR:" + checkCtx(ctx) + " } | { PC:" + checkCtx(ctx, "PC") + " }");
            if (isShowPrintStack)
                LOGZ((GetStackTraceN(ctx)));
        });
        A(Il2Cpp.Api.PlayerPrefs._SetInt, (args, ctx, pass) => {
            pass.set("arg0", readU16(args[0]));
            pass.set("arg1", args[1]);
        }, (retval, ctx, pass) => {
            LOGD("\n[*] SetInt('" + pass.get("arg0") + "'," + pass.get("arg1") + ")");
            if (needLRInfo)
                LOGZ("\t\t { LR:" + checkCtx(ctx) + " } | { PC:" + checkCtx(ctx, "PC") + " }");
            if (isShowPrintStack)
                LOGZ((GetStackTraceN(ctx)));
        });
        A(Il2Cpp.Api.PlayerPrefs._SetString, (args, ctx, pass) => {
            pass.set("arg0", readU16(args[0]));
            pass.set("arg1", readU16(args[1]));
        }, (retval, ctx, pass) => {
            LOGD("\n[*] SetString('" + pass.get("arg0") + "','" + pass.get("arg1") + "')");
            if (needLRInfo)
                LOGZ("\t\t { LR:" + checkCtx(ctx) + " } | { PC:" + checkCtx(ctx, "PC") + " }");
            if (isShowPrintStack)
                LOGZ((GetStackTraceN(ctx)));
        });
    }
};
exports.HookPlayerPrefs = HookPlayerPrefs;
globalThis.SetInt = (key, value) => callFunction(find_method("UnityEngine.CoreModule", "PlayerPrefs", "SetInt", 2, true), allocUStr(key), value);
globalThis.SetFloat = (key, value) => callFunction(find_method("UnityEngine.CoreModule", "PlayerPrefs", "SetFloat", 2, true), allocUStr(key), value);
globalThis.SetString = (key, value) => callFunction(find_method("UnityEngine.CoreModule", "PlayerPrefs", "SetString", 2, true), allocUStr(key), allocUStr(value));
globalThis.GetInt = (key) => {
    let ret = callFunctionRI(find_method("UnityEngine.CoreModule", "PlayerPrefs", "GetInt", 2, true), allocUStr(key), 0);
    LOG("\n[*] GetInt('" + key + "')\t--->\t" + ret + "\n", LogColor.C95);
};
globalThis.GetFloat = (key) => {
    let ret = callFunctionRF(find_method("UnityEngine.CoreModule", "PlayerPrefs", "GetFloat", 2, true), allocUStr(key), 0);
    LOG("\n[*] GetFloat('" + key + "')\t--->\t" + ret + "\n", LogColor.C95);
};
globalThis.GetString = (key) => {
    let ret = callFunctionRUS(find_method("UnityEngine.CoreModule", "PlayerPrefs", "GetString", 1), allocUStr(key));
    LOG("\n[*] GetString('" + key + "')\t--->\t" + ret + "\n", LogColor.C95);
};
globalThis.HookPlayerPrefs = HookPlayerPrefs;
},{}],185:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
require("./interface");
},{"./api":182,"./class":183,"./export":184,"./interface":186}],186:[function(require,module,exports){
"use strict";
},{}],187:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class ResourcesAPI_API {
    static get _get_cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", ".cctor", 0, "pointer", ["pointer"]);
    }
    static get _get_ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _FindObjectsOfTypeAll() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "FindObjectsOfTypeAll", 1, "pointer", ["pointer"]);
    }
    static get _FindShaderByName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "FindShaderByName", 1, "pointer", ["pointer"]);
    }
    static get _Load() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "Load", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _LoadAll() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "LoadAll", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _LoadAsync() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "LoadAsync", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _UnloadAsset() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "UnloadAsset", 1, "pointer", ["pointer"]);
    }
    static get _get_ActiveAPI() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "get_ActiveAPI", 0, "pointer", ["pointer"]);
    }
    static get _get_overrideAPI() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourcesAPI", "get_overrideAPI", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_get_cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_get_ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_FindObjectsOfTypeAll", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_FindShaderByName", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_Load", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_LoadAll", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_LoadAsync", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_UnloadAsset", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_get_ActiveAPI", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesAPI_API, "_get_overrideAPI", null);
mscorlib.Api.ResourcesAPI = ResourcesAPI_API;
},{"decorator-cache-getter":338}],188:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourcesApi_impl = void 0;
const class_1 = require("../Type/class");
require("./interface");
class ResourcesApi_impl extends class_1.mscorlib_System_Type_impl {
    s_DefaultAPI = new ResourcesApi_impl(lfv(this.handle, "s_DefaultAPI"));
    FindObjectsOfTypeAll(type) {
        return mscorlib.Api.ResourcesAPI._FindObjectsOfTypeAll(this.handle, type);
    }
    FindShaderByName(name) {
        return mscorlib.Api.ResourcesAPI._FindShaderByName(this.handle, name);
    }
    Load(name, type) {
        return new Il2Cpp.Object(mscorlib.Api.ResourcesAPI._Load(this.handle, name, type));
    }
    LoadAll(name, type) {
        return mscorlib.Api.ResourcesAPI._LoadAll(this.handle, name, type);
    }
    LoadAsync(name, type) {
        return mscorlib.Api.ResourcesAPI._LoadAsync(this.handle, name, type);
    }
    UnloadAsset(asset) {
        return mscorlib.Api.ResourcesAPI._UnloadAsset(this.handle, asset);
    }
    get ActiveAPI() {
        return mscorlib.Api.ResourcesAPI._get_ActiveAPI();
    }
    get overrideAPI() {
        return mscorlib.Api.ResourcesAPI._get_overrideAPI();
    }
}
exports.ResourcesApi_impl = ResourcesApi_impl;
mscorlib.ResourcesAPI = ResourcesApi_impl;
},{"../Type/class":216,"./interface":191}],189:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
globalThis.HookResourceLoad = () => {
    A(mscorlib.Api.ResourcesAPI._Load, (args) => {
        LOGD(`\n[*] ResourcesAPI.load`);
        LOGZ(`   | ARG ---> ins:'${args[0]}',name:'${readU16(args[1])}', type:'${args[2]}'`);
    }, (retval) => {
        LOGZ(`   | RET ---> ${retval} --- {${new Il2Cpp.Object(retval).toString()}}`);
    });
};
},{}],190:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./interface");
require("./export");
},{"./api":187,"./class":188,"./export":189,"./interface":191}],191:[function(require,module,exports){
"use strict";
},{}],192:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class ResourcesRequest_API {
    static get _get_ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourceRequest", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _get_asset() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourceRequest", "get_asset", 0, "pointer", ["pointer"]);
    }
    static get _GetResult() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.ResourceRequest", "GetResult", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], ResourcesRequest_API, "_get_ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesRequest_API, "_get_asset", null);
__decorate([
    decorator_cache_getter_1.cache
], ResourcesRequest_API, "_GetResult", null);
mscorlib.Api.ResourcesRequest = ResourcesRequest_API;
},{"decorator-cache-getter":338}],193:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourcesRequest_impl = void 0;
const class_1 = require("../Type/class");
class ResourcesRequest_impl extends class_1.mscorlib_System_Type_impl {
}
exports.ResourcesRequest_impl = ResourcesRequest_impl;
mscorlib.ResourcesRequest = ResourcesRequest_impl;
},{"../Type/class":216}],194:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":192,"./class":193}],195:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Resources_API {
    static get _ConvertObjects() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "ConvertObjects", 1, "pointer", ["pointer"]);
    }
    static get _FindObjectsOfTypeAll() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "FindObjectsOfTypeAll", 1, "pointer", ["pointer"]);
    }
    static get _FindObjectsOfTypeAll_() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "FindObjectsOfTypeAll", 0, [], "pointer", []);
    }
    static get _Load() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "Load", 1, "pointer", ["pointer"]);
    }
    static get _Load_path() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "Load", 1, ["System.String"], "pointer", ["pointer"]);
    }
    static get _Load_path_systemTypeInstance() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "Load", 2, ["System.String", "System.Type"], "pointer", ["pointer", "pointer"]);
    }
    static get _GetBuiltinResource() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "GetBuiltinResource", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _GetBuiltinResource_path() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Resources", "GetBuiltinResource", 1, ["System.String"], "pointer", ["pointer"]);
    }
    static get _UnloadUnusedAssets() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Resources", "UnloadUnusedAssets", 0, "pointer", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_ConvertObjects", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_FindObjectsOfTypeAll", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_FindObjectsOfTypeAll_", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_Load", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_Load_path", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_Load_path_systemTypeInstance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_GetBuiltinResource", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_GetBuiltinResource_path", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Resources_API, "_UnloadUnusedAssets", null);
Il2Cpp.Api.Resources = UnityEngine_Resources_API;
},{"decorator-cache-getter":338}],196:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Resources_Impl = void 0;
const class_1 = require("../class");
const class_2 = require("../Object/class");
const class_3 = require("../YieldInstruction/AsyncOperation/class");
class UnityEngine_Resources_Impl extends class_1.mscorlib_System_Object_impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static FindObjectsOfTypeAll(type) {
        return Il2Cpp.Api.Resources._FindObjectsOfTypeAll(type);
    }
    static Load(path) {
        return new class_2.UnityEngine_Object(Il2Cpp.Api.Resources._Load(path));
    }
    static Load_2(path, systemTypeInstance) {
        return new class_2.UnityEngine_Object(Il2Cpp.Api.Resources._Load(path, systemTypeInstance));
    }
    static GetBuiltinResource(type, path) {
        return new class_2.UnityEngine_Object(Il2Cpp.Api.Resources._GetBuiltinResource(type, path));
    }
    static UnloadUnusedAssets() {
        return new class_3.UnityEngine_AsyncOperation_Impl(Il2Cpp.Api.Resources._UnloadUnusedAssets());
    }
}
exports.UnityEngine_Resources_Impl = UnityEngine_Resources_Impl;
Il2Cpp.Resources = UnityEngine_Resources_Impl;
},{"../Object/class":175,"../YieldInstruction/AsyncOperation/class":298,"../class":304}],197:[function(require,module,exports){
"use strict";
},{}],198:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":195,"./class":196,"./export":197}],199:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class mscorlibRuntimeTypeHandleAPI {
}
mscorlib.Api.RuntimeTypeHandle = mscorlibRuntimeTypeHandleAPI;
},{}],200:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_RuntimeTypeHandle_impl = void 0;
const class_1 = require("../class");
require("./interface");
class mscorlib_System_RuntimeTypeHandle_impl extends class_1.mscorlib_System_Object_impl {
}
exports.mscorlib_System_RuntimeTypeHandle_impl = mscorlib_System_RuntimeTypeHandle_impl;
mscorlib.RuntimeTypeHandle = mscorlib_System_RuntimeTypeHandle_impl;
},{"../class":304,"./interface":202}],201:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./interface");
},{"./api":199,"./class":200,"./interface":202}],202:[function(require,module,exports){
"use strict";
},{}],203:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class mscorlibRuntimeTypeAPI {
    static get _get_AssemblyQualifiedName() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_AssemblyQualifiedName", 0, "pointer", ["pointer"]);
    }
    static get _get_BaseType() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_BaseType", 0, "pointer", ["pointer"]);
    }
    static get _get_DeclaringType() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_DeclaringType", 0, "pointer", ["pointer"]);
    }
    static get _get_FullName() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_FullName", 0, "pointer", ["pointer"]);
    }
    static get _get_IsEnum() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_IsEnum", 0, "bool", ["pointer"]);
    }
    static get _get_IsGenericParameter() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_IsGenericParameter", 0, "bool", ["pointer"]);
    }
    static get _get_IsGenericType() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_IsGenericType", 0, "bool", ["pointer"]);
    }
    static get _get_Name() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Name", 0, "pointer", ["pointer"]);
    }
    static get _get_Namespace() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Namespace", 0, "pointer", ["pointer"]);
    }
    static get _get_ReflectedType() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_ReflectedType", 0, "pointer", ["pointer"]);
    }
    static get _get_TypeHandle() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_TypeHandle", 0, "pointer", ["pointer"]);
    }
    static get _get_UnderlyingSystemType() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_UnderlyingSystemType", 0, "pointer", ["pointer"]);
    }
    static get _get_Module() {
        return Il2Cpp.Api.t("mscorlib", "System.RuntimeType", "get_Module", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_AssemblyQualifiedName", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_BaseType", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_DeclaringType", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_FullName", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_IsEnum", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_IsGenericParameter", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_IsGenericType", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_Name", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_Namespace", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_ReflectedType", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_TypeHandle", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_UnderlyingSystemType", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibRuntimeTypeAPI, "_get_Module", null);
mscorlib.Api.RuntimeType = mscorlibRuntimeTypeAPI;
},{"decorator-cache-getter":338}],204:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_RuntimeType_impl = void 0;
const class_1 = require("../Module/class");
const class_2 = require("../RuntimeTypeHandle/class");
const class_3 = require("../Type/class");
require("./interface");
class mscorlib_System_RuntimeType_impl extends class_3.mscorlib_System_Type_impl {
    _DelegateType = new class_3.mscorlib_System_Type_impl(lfv(this.handle, "DelegateType"));
    _EnumType = new class_3.mscorlib_System_Type_impl(lfv(this.handle, "EnumType"));
    GenericCache = lfv(this.handle, "GenericCache");
    m_serializationCtor = lfv(this.handle, "m_serializationCtor");
    _ObjectType = new class_3.mscorlib_System_Type_impl(lfv(this.handle, "ObjectType"));
    _StringType = new class_3.mscorlib_System_Type_impl(lfv(this.handle, "StringType"));
    type_info = lfv(this.handle, "type_info");
    _ValueType = new class_3.mscorlib_System_Type_impl(lfv(this.handle, "ValueType"));
    get_AssemblyQualifiedName() {
        return readU16(mscorlib.Api.RuntimeType._get_AssemblyQualifiedName(this.handle));
    }
    get_BaseType() {
        return new class_3.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_BaseType(this.handle));
    }
    get_DeclaringType() {
        return new class_3.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_DeclaringType(this.handle));
    }
    get_FullName() {
        return readU16(mscorlib.Api.RuntimeType._get_FullName(this.handle));
    }
    get_IsEnum() {
        return mscorlib.Api.RuntimeType._get_IsEnum(this.handle);
    }
    get_IsGenericParameter() {
        return mscorlib.Api.RuntimeType._get_IsGenericParameter(this.handle);
    }
    get_IsGenericType() {
        return mscorlib.Api.RuntimeType._get_IsGenericType(this.handle);
    }
    get_Name() {
        return readU16(mscorlib.Api.RuntimeType._get_Name(this.handle));
    }
    get_Namespace() {
        return readU16(mscorlib.Api.RuntimeType._get_Namespace(this.handle));
    }
    get_ReflectedType() {
        return new class_3.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_ReflectedType(this.handle));
    }
    get_TypeHandle() {
        return new class_2.mscorlib_System_RuntimeTypeHandle_impl(mscorlib.Api.RuntimeType._get_TypeHandle(this.handle));
    }
    get_UnderlyingSystemType() {
        return new class_3.mscorlib_System_Type_impl(mscorlib.Api.RuntimeType._get_UnderlyingSystemType(this.handle));
    }
    get_Module() {
        return new class_1.mscorlib_System_Reflection_Module_impl(mscorlib.Api.RuntimeType._get_Module(this.handle));
    }
}
exports.mscorlib_System_RuntimeType_impl = mscorlib_System_RuntimeType_impl;
mscorlib.RuntimeType = mscorlib_System_RuntimeType_impl;
},{"../Module/class":87,"../RuntimeTypeHandle/class":200,"../Type/class":216,"./interface":206}],205:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./interface");
},{"./api":203,"./class":204,"./interface":206}],206:[function(require,module,exports){
"use strict";
},{}],207:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_SceneManagement_SceneManager_API {
    static get _get_sceneCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "get_sceneCount", 0, "pointer", []);
    }
    static get _get_sceneCountInBuildSettings() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "get_sceneCountInBuildSettings", 0, "pointer", []);
    }
    static get _GetActiveScene() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetActiveScene", 0, "pointer", []);
    }
    static get _GetSceneByBuildIndex() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneByBuildIndex", 1, "pointer", ["int32"]);
    }
    static get _GetSceneAt() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneAt", 1, "pointer", ["int32"]);
    }
    static get _LoadSceneAsyncNameIndexInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadSceneAsyncNameIndexInternal", 4, "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _MoveGameObjectToScene() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "MoveGameObjectToScene", 2, "void", ["pointer", "pointer"]);
    }
    static get _add_sceneLoaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "add_sceneLoaded", 1, "void", ["pointer"]);
    }
    static get _remove_sceneLoaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "remove_sceneLoaded", 1, "void", ["pointer"]);
    }
    static get _add_sceneUnloaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "add_sceneUnloaded", 1, "void", ["pointer"]);
    }
    static get _remove_sceneUnloaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "remove_sceneUnloaded", 1, "void", ["pointer"]);
    }
    static get _LoadScene() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 1, "void", ["pointer"]);
    }
    static get _LoadScene_sceneName_parameters() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 2, ["System.String", "UnityEngine.SceneManagement.LoadSceneParameters"], "pointer", ["pointer", "pointer"]);
    }
    static get _LoadScene_sceneBuildIndex() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 1, ["System.Int32"], "void", ["pointer"]);
    }
    static get _LoadScene_sceneBuildIndex_parameters() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadScene", 2, ["System.Int32", "UnityEngine.SceneManagement.LoadSceneParameters"], "pointer", ["pointer", "pointer"]);
    }
    static get _LoadSceneAsync() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadSceneAsync", 1, "pointer", ["pointer"]);
    }
    static get _LoadSceneAsync_sceneName_parameters() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "LoadSceneAsync", 2, ["System.String", "UnityEngine.SceneManagement.LoadSceneParameters"], "pointer", ["pointer", "pointer"]);
    }
    static get _Internal_SceneLoaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "Internal_SceneLoaded", 2, "void", ["pointer", "pointer"]);
    }
    static get _Internal_SceneUnloaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "Internal_SceneUnloaded", 1, "void", ["pointer"]);
    }
    static get _Internal_ActiveSceneChanged() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "Internal_ActiveSceneChanged", 2, "void", ["pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", ".cctor", 0, "void", []);
    }
    static get _GetActiveScene_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetActiveScene_Injected", 1, "void", ["pointer"]);
    }
    static get _GetSceneByBuildIndex_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneByBuildIndex_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _GetSceneAt_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "GetSceneAt_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _MoveGameObjectToScene_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "MoveGameObjectToScene_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _add_activeSceneChanged() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "add_activeSceneChanged", 1, ["UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>"], "void", ["pointer"]);
    }
    static get _remove_activeSceneChanged() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.SceneManager", "remove_activeSceneChanged", 1, ["UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>"], "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_get_sceneCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_get_sceneCountInBuildSettings", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_GetActiveScene", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_GetSceneByBuildIndex", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_GetSceneAt", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadSceneAsyncNameIndexInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_MoveGameObjectToScene", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_add_sceneLoaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_remove_sceneLoaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_add_sceneUnloaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_remove_sceneUnloaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadScene", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadScene_sceneName_parameters", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadScene_sceneBuildIndex", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadScene_sceneBuildIndex_parameters", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadSceneAsync", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_LoadSceneAsync_sceneName_parameters", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_Internal_SceneLoaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_Internal_SceneUnloaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_Internal_ActiveSceneChanged", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_GetActiveScene_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_GetSceneByBuildIndex_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_GetSceneAt_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_MoveGameObjectToScene_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_add_activeSceneChanged", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_SceneManager_API, "_remove_activeSceneChanged", null);
Il2Cpp.Api.SceneManager = UnityEngine_SceneManagement_SceneManager_API;
},{"decorator-cache-getter":338}],208:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_SceneManagement_SceneManager_Impl = void 0;
const class_1 = require("../class");
const class_2 = require("../ValueType/Scene/class");
const class_3 = require("../YieldInstruction/AsyncOperation/class");
class UnityEngine_SceneManagement_SceneManager_Impl extends class_1.mscorlib_System_Object_impl {
    s_AllowLoadScene = lfv(this.handle, "s_AllowLoadScene");
    sceneLoaded = lfv(this.handle, "sceneLoaded");
    sceneUnloaded = lfv(this.handle, "sceneUnloaded");
    activeSceneChanged = lfv(this.handle, "activeSceneChanged");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static get get_sceneCount() {
        return Il2Cpp.Api.SceneManager._get_sceneCount();
    }
    static get get_sceneCountInBuildSettings() {
        return Il2Cpp.Api.SceneManager._get_sceneCountInBuildSettings();
    }
    static get GetActiveScene() {
        return new class_2.UnityEngine_SceneManagement_Scene_Impl(Il2Cpp.Api.SceneManager._GetActiveScene());
    }
    static GetSceneByBuildIndex(buildIndex) {
        return new class_2.UnityEngine_SceneManagement_Scene_Impl(Il2Cpp.Api.SceneManager._GetSceneByBuildIndex(buildIndex));
    }
    static GetSceneAt(index) {
        return new class_2.UnityEngine_SceneManagement_Scene_Impl(Il2Cpp.Api.SceneManager._GetSceneAt(index));
    }
    static LoadSceneAsyncNameIndexInternal(sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame) {
        return new class_3.UnityEngine_AsyncOperation_Impl(Il2Cpp.Api.SceneManager._LoadSceneAsyncNameIndexInternal(sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame));
    }
    static MoveGameObjectToScene(go, scene) {
        return Il2Cpp.Api.SceneManager._MoveGameObjectToScene(go, scene);
    }
    static add_sceneLoaded(value) {
        return Il2Cpp.Api.SceneManager._add_sceneLoaded(value);
    }
    static remove_sceneLoaded(value) {
        return Il2Cpp.Api.SceneManager._remove_sceneLoaded(value);
    }
    static add_sceneUnloaded(value) {
        return Il2Cpp.Api.SceneManager._add_sceneUnloaded(value);
    }
    static remove_sceneUnloaded(value) {
        return Il2Cpp.Api.SceneManager._remove_sceneUnloaded(value);
    }
    static LoadScene(sceneName) {
        return Il2Cpp.Api.SceneManager._LoadScene(sceneName);
    }
    static LoadScene_name_param(sceneName, parameters) {
        return new class_2.UnityEngine_SceneManagement_Scene_Impl(Il2Cpp.Api.SceneManager._LoadScene(sceneName, parameters));
    }
    static LoadScene_1(sceneBuildIndex) {
        return Il2Cpp.Api.SceneManager._LoadScene(sceneBuildIndex);
    }
    static LoadScene_index_param(sceneBuildIndex, parameters) {
        return new class_2.UnityEngine_SceneManagement_Scene_Impl(Il2Cpp.Api.SceneManager._LoadScene(sceneBuildIndex, parameters));
    }
    static LoadSceneAsync(sceneName) {
        return new class_3.UnityEngine_AsyncOperation_Impl(Il2Cpp.Api.SceneManager._LoadSceneAsync(sceneName));
    }
    static LoadSceneAsync_2(sceneName, parameters) {
        return new class_3.UnityEngine_AsyncOperation_Impl(Il2Cpp.Api.SceneManager._LoadSceneAsync(sceneName, parameters));
    }
    static Internal_SceneLoaded(scene, mode) {
        return Il2Cpp.Api.SceneManager._Internal_SceneLoaded(scene, mode);
    }
    static Internal_SceneUnloaded(scene) {
        return Il2Cpp.Api.SceneManager._Internal_SceneUnloaded(scene);
    }
    static Internal_ActiveSceneChanged(previousActiveScene, newActiveScene) {
        return Il2Cpp.Api.SceneManager._Internal_ActiveSceneChanged(previousActiveScene, newActiveScene);
    }
    static _cctor() {
        return Il2Cpp.Api.SceneManager.__cctor();
    }
    static GetActiveScene_Injected(ret) {
        return Il2Cpp.Api.SceneManager._GetActiveScene_Injected(ret);
    }
    static GetSceneByBuildIndex_Injected(buildIndex, ret) {
        return Il2Cpp.Api.SceneManager._GetSceneByBuildIndex_Injected(buildIndex, ret);
    }
    static GetSceneAt_Injected(index, ret) {
        return Il2Cpp.Api.SceneManager._GetSceneAt_Injected(index, ret);
    }
    static MoveGameObjectToScene_Injected(go, scene) {
        return Il2Cpp.Api.SceneManager._MoveGameObjectToScene_Injected(go, scene);
    }
}
exports.UnityEngine_SceneManagement_SceneManager_Impl = UnityEngine_SceneManagement_SceneManager_Impl;
Il2Cpp.SceneManager = UnityEngine_SceneManagement_SceneManager_Impl;
},{"../ValueType/Scene/class":273,"../YieldInstruction/AsyncOperation/class":298,"../class":304}],209:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const formart_1 = require("../../../../utils/formart");
globalThis.HookLoadScene = () => {
    A(Il2Cpp.Api.SceneManager._LoadScene, (args, ctx) => {
        LOGD(`[*] LoadScene( sceneName = '${readU16(args[0])}' )`);
    });
    A(Il2Cpp.Api.SceneManager._LoadScene_sceneName_parameters, (args, ctx) => {
        LOGZ(`\t[*] LoadScene( sceneName = '${readU16(args[0])}', LoadSceneParameters = '${args[1]}' )`);
    });
};
globalThis.HookLoadSceneLisener = () => {
    A(Il2Cpp.Api.SceneManager._add_sceneLoaded, (args, ctx) => {
        LOGD('called -> add_sceneLoaded(UnityAction<Scene, LoadSceneMode>) : Void');
        lfs(args[0]);
    });
    A(Il2Cpp.Api.SceneManager._add_activeSceneChanged, (args, ctx) => {
        LOGD('called -> add_activeSceneChanged(UnityAction<Scene, Scene>) : Void');
        lfs(args[0]);
    });
    A(Il2Cpp.Api.SceneManager._remove_activeSceneChanged, (args, ctx) => {
        LOGD('called -> remove_activeSceneChanged(UnityAction<Scene, Scene>) : Void');
        lfs(args[0]);
    });
    A(Il2Cpp.Api.SceneManager._remove_sceneLoaded, (args, ctx) => {
        LOGD('called -> remove_sceneLoaded(UnityAction<Scene, LoadSceneMode>) : Void');
        lfs(args[0]);
    });
};
globalThis.SceneInfo = () => {
    let sceneCount = Il2Cpp.SceneManager.get_sceneCount;
    formart_1.formartClass.printTitileA(`Scene Count: ${sceneCount}`);
    for (let index = 0; index < sceneCount; index++) {
        let scene = Il2Cpp.SceneManager.GetSceneAt(index);
        LOGD(`[${index}] Scene Name: '${scene.get_name()}'`);
        LOGZ(`\t Path: '${scene.get_path()}' `);
        LOGZ(`\t Build Index: ${scene.get_buildIndex()} / ${ptr(scene.get_handle())} `);
        LOGZ(`\t RootCount: ${scene.get_rootCount()}`);
    }
};
},{"../../../../utils/formart":331}],210:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":207,"./class":208,"./export":209}],211:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class SystemInfoApi {
    static get _GetCompatibleFormat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetCompatibleFormat", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetCopyTextureSupport() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetCopyTextureSupport", 0, "pointer", ["pointer"]);
    }
    static get _GetDeviceModel() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceModel", 0, "pointer", ["pointer"]);
    }
    static get _GetDeviceName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceName", 0, "pointer", ["pointer"]);
    }
    static get _GetDeviceType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceType", 0, "pointer", ["pointer"]);
    }
    static get _GetDeviceUniqueIdentifier() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetDeviceUniqueIdentifier", 0, "pointer", ["pointer"]);
    }
    static get _GetGraphicsDeviceID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceID", 0, "int32", ["pointer"]);
    }
    static get _GetGraphicsDeviceName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceName", 0, "pointer", ["pointer"]);
    }
    static get _GetGraphicsDeviceType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceType", 0, "pointer", ["pointer"]);
    }
    static get _GetGraphicsDeviceVendor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceVendor", 0, "pointer", ["pointer"]);
    }
    static get _GetGraphicsDeviceVendorID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceVendorID", 0, "int32", ["pointer"]);
    }
    static get _GetGraphicsDeviceVersion() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsDeviceVersion", 0, "pointer", ["pointer"]);
    }
    static get _GetGraphicsFormat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsFormat", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _GetGraphicsMemorySize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsMemorySize", 0, "int32", ["pointer"]);
    }
    static get _GetGraphicsShaderLevel() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetGraphicsShaderLevel", 0, "int32", ["pointer"]);
    }
    static get _GetMaxTextureSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetMaxTextureSize", 0, "int32", ["pointer"]);
    }
    static get _GetOperatingSystem() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetOperatingSystem", 0, "pointer", ["pointer"]);
    }
    static get _GetOperatingSystemFamily() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetOperatingSystemFamily", 0, "pointer", ["pointer"]);
    }
    static get _GetPhysicalMemoryMB() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetPhysicalMemoryMB", 0, "int32", ["pointer"]);
    }
    static get _GetProcessorCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetProcessorCount", 0, "int32", ["pointer"]);
    }
    static get _GetProcessorFrequencyMHz() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetProcessorFrequencyMHz", 0, "int32", ["pointer"]);
    }
    static get _GetProcessorType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "GetProcessorType", 0, "pointer", ["pointer"]);
    }
    static get _HasRenderTextureNative() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "HasRenderTextureNative", 1, "bool", ["pointer", "pointer"]);
    }
    static get _IsFormatSupported() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "IsFormatSupported", 2, "bool", ["pointer", "pointer", "pointer"]);
    }
    static get _IsValidEnumValue() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "IsValidEnumValue", 1, "bool", ["pointer"]);
    }
    static get _SupportedRandomWriteTargetCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportedRandomWriteTargetCount", 0, "int32", ["pointer"]);
    }
    static get _SupportedRenderTargetCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportedRenderTargetCount", 0, "int32", ["pointer"]);
    }
    static get _Supports3DTextures() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "Supports3DTextures", 0, "bool", ["pointer"]);
    }
    static get _SupportsComputeShaders() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsComputeShaders", 0, "bool", ["pointer"]);
    }
    static get _SupportsRenderTextureFormat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsRenderTextureFormat", 1, "bool", ["pointer", "pointer"]);
    }
    static get _SupportsTextureFormat() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsTextureFormat", 1, "bool", ["pointer", "pointer"]);
    }
    static get _SupportsTextureFormatNative() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "SupportsTextureFormatNative", 1, "bool", ["pointer", "pointer"]);
    }
    static get _get_copyTextureSupport() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_copyTextureSupport", 0, "pointer", ["pointer"]);
    }
    static get _get_deviceModel() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceModel", 0, "pointer", ["pointer"]);
    }
    static get _get_deviceName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceName", 0, "pointer", ["pointer"]);
    }
    static get _get_deviceType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceType", 0, "pointer", ["pointer"]);
    }
    static get _get_deviceUniqueIdentifier() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_deviceUniqueIdentifier", 0, "pointer", ["pointer"]);
    }
    static get _get_graphicsDeviceID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceID", 0, "int32", ["pointer"]);
    }
    static get _get_graphicsDeviceName() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceName", 0, "pointer", ["pointer"]);
    }
    static get _get_graphicsDeviceType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceType", 0, "pointer", ["pointer"]);
    }
    static get _get_graphicsDeviceVendor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceVendor", 0, "pointer", ["pointer"]);
    }
    static get _get_graphicsDeviceVendorID() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceVendorID", 0, "int32", ["pointer"]);
    }
    static get _get_graphicsDeviceVersion() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsDeviceVersion", 0, "pointer", ["pointer"]);
    }
    static get _get_graphicsMemorySize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsMemorySize", 0, "int32", ["pointer"]);
    }
    static get _get_graphicsShaderLevel() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_graphicsShaderLevel", 0, "int32", ["pointer"]);
    }
    static get _get_maxTextureSize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_maxTextureSize", 0, "int32", ["pointer"]);
    }
    static get _get_operatingSystem() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_operatingSystem", 0, "pointer", ["pointer"]);
    }
    static get _get_operatingSystemFamily() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_operatingSystemFamily", 0, "pointer", ["pointer"]);
    }
    static get _get_processorCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_processorCount", 0, "int32", ["pointer"]);
    }
    static get _get_processorFrequency() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_processorFrequency", 0, "int32", ["pointer"]);
    }
    static get _get_processorType() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_processorType", 0, "pointer", ["pointer"]);
    }
    static get _get_supportedRandomWriteTargetCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportedRandomWriteTargetCount", 0, "int32", ["pointer"]);
    }
    static get _get_supportedRenderTargetCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportedRenderTargetCount", 0, "int32", ["pointer"]);
    }
    static get _get_supports3DTextures() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supports3DTextures", 0, "int32", ["pointer"]);
    }
    static get _get_supportsComputeShaders() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsComputeShaders", 0, "int32", ["pointer"]);
    }
    static get _get_supportsImageEffects() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsImageEffects", 0, "int32", ["pointer"]);
    }
    static get _get_supportsRenderTextures() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_supportsRenderTextures", 0, "int32", ["pointer"]);
    }
    static get _get_systemMemorySize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SystemInfo", "get_systemMemorySize", 0, "int32", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetCompatibleFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetCopyTextureSupport", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetDeviceModel", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetDeviceName", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetDeviceType", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetDeviceUniqueIdentifier", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsDeviceID", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsDeviceName", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsDeviceType", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsDeviceVendor", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsDeviceVendorID", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsDeviceVersion", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsMemorySize", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetGraphicsShaderLevel", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetMaxTextureSize", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetOperatingSystem", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetOperatingSystemFamily", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetPhysicalMemoryMB", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetProcessorCount", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetProcessorFrequencyMHz", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_GetProcessorType", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_HasRenderTextureNative", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_IsFormatSupported", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_IsValidEnumValue", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_SupportedRandomWriteTargetCount", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_SupportedRenderTargetCount", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_Supports3DTextures", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_SupportsComputeShaders", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_SupportsRenderTextureFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_SupportsTextureFormat", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_SupportsTextureFormatNative", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_copyTextureSupport", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_deviceModel", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_deviceName", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_deviceType", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_deviceUniqueIdentifier", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsDeviceID", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsDeviceName", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsDeviceType", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsDeviceVendor", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsDeviceVendorID", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsDeviceVersion", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsMemorySize", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_graphicsShaderLevel", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_maxTextureSize", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_operatingSystem", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_operatingSystemFamily", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_processorCount", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_processorFrequency", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_processorType", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_supportedRandomWriteTargetCount", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_supportedRenderTargetCount", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_supports3DTextures", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_supportsComputeShaders", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_supportsImageEffects", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_supportsRenderTextures", null);
__decorate([
    decorator_cache_getter_1.cache
], SystemInfoApi, "_get_systemMemorySize", null);
Il2Cpp.Api.SystemInfo = SystemInfoApi;
},{"decorator-cache-getter":338}],212:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperatingSystemFamily = exports.DeviceType = exports.CopyTextureSupport = exports.RenderTextureFormat = exports.UnityEngine_SystemInfo_impl = void 0;
const class_1 = require("../Type/class");
require("./api");
class UnityEngine_SystemInfo_impl extends class_1.mscorlib_System_Type_impl {
    GetCompatibleFormat(format) {
        return Il2Cpp.Api.SystemInfo._GetCompatibleFormat(this.handle, format);
    }
    GetCopyTextureSupport() {
        return Il2Cpp.Api.SystemInfo._GetCopyTextureSupport(this.handle);
    }
    get deviceModel() {
        return readU16(Il2Cpp.Api.SystemInfo._get_deviceModel(this.handle));
    }
    get deviceName() {
        return readU16(Il2Cpp.Api.SystemInfo._get_deviceName(this.handle));
    }
    get deviceType() {
        return Il2Cpp.Api.SystemInfo._get_deviceType(this.handle);
    }
    get graphicsDeviceName() {
        return readU16(Il2Cpp.Api.SystemInfo._get_graphicsDeviceName(this.handle));
    }
    get graphicsDeviceVendorID() {
        return Il2Cpp.Api.SystemInfo._get_graphicsDeviceVendorID(this.handle);
    }
    get graphicsDeviceVersion() {
        return readU16(Il2Cpp.Api.SystemInfo._get_graphicsDeviceVersion(this.handle));
    }
    get graphicsMemorySize() {
        return Il2Cpp.Api.SystemInfo._get_graphicsMemorySize(this.handle);
    }
    get graphicsShaderLevel() {
        return Il2Cpp.Api.SystemInfo._get_graphicsShaderLevel(this.handle);
    }
    get maxTextureSize() {
        return Il2Cpp.Api.SystemInfo._get_maxTextureSize(this.handle);
    }
    get operatingSystem() {
        return readU16(Il2Cpp.Api.SystemInfo._get_operatingSystem(this.handle));
    }
    get operatingSystemFamily() {
        return Il2Cpp.Api.SystemInfo._get_operatingSystemFamily(this.handle);
    }
    get processorCount() {
        return Il2Cpp.Api.SystemInfo._get_processorCount(this.handle);
    }
    get processorFrequency() {
        return Il2Cpp.Api.SystemInfo._get_processorFrequency(this.handle);
    }
    get processorType() {
        return readU16(Il2Cpp.Api.SystemInfo._get_processorType(this.handle));
    }
    get supportedRandomWriteTargetCount() {
        return Il2Cpp.Api.SystemInfo._get_supportedRandomWriteTargetCount(this.handle);
    }
    get supportedRenderTargetCount() {
        return Il2Cpp.Api.SystemInfo._get_supportedRenderTargetCount(this.handle);
    }
    get supports3DTextures() {
        return Il2Cpp.Api.SystemInfo._get_supports3DTextures(this.handle);
    }
    get supportsComputeShaders() {
        return Il2Cpp.Api.SystemInfo._get_supportsComputeShaders(this.handle);
    }
    get supportsImageEffects() {
        return Il2Cpp.Api.SystemInfo._get_supportsImageEffects(this.handle);
    }
    get supportsRenderTextures() {
        return Il2Cpp.Api.SystemInfo._get_supportsRenderTextures(this.handle);
    }
    get systemMemorySize() {
        return Il2Cpp.Api.SystemInfo._get_systemMemorySize(this.handle);
    }
}
exports.UnityEngine_SystemInfo_impl = UnityEngine_SystemInfo_impl;
Il2Cpp.SystemInfo = UnityEngine_SystemInfo_impl;
var RenderTextureFormat;
(function (RenderTextureFormat) {
    RenderTextureFormat[RenderTextureFormat["ARGB1555"] = 6] = "ARGB1555";
    RenderTextureFormat[RenderTextureFormat["ARGB2101010"] = 8] = "ARGB2101010";
    RenderTextureFormat[RenderTextureFormat["ARGB32"] = 0] = "ARGB32";
    RenderTextureFormat[RenderTextureFormat["ARGB4444"] = 5] = "ARGB4444";
    RenderTextureFormat[RenderTextureFormat["ARGB64"] = 10] = "ARGB64";
    RenderTextureFormat[RenderTextureFormat["ARGBFloat"] = 11] = "ARGBFloat";
    RenderTextureFormat[RenderTextureFormat["ARGBHalf"] = 2] = "ARGBHalf";
    RenderTextureFormat[RenderTextureFormat["ARGBInt"] = 17] = "ARGBInt";
    RenderTextureFormat[RenderTextureFormat["BGR101010_XR"] = 27] = "BGR101010_XR";
    RenderTextureFormat[RenderTextureFormat["BGRA10101010_XR"] = 26] = "BGRA10101010_XR";
    RenderTextureFormat[RenderTextureFormat["BGRA32"] = 20] = "BGRA32";
    RenderTextureFormat[RenderTextureFormat["Default"] = 7] = "Default";
    RenderTextureFormat[RenderTextureFormat["DefaultHDR"] = 9] = "DefaultHDR";
    RenderTextureFormat[RenderTextureFormat["Depth"] = 1] = "Depth";
    RenderTextureFormat[RenderTextureFormat["R16"] = 28] = "R16";
    RenderTextureFormat[RenderTextureFormat["R8"] = 16] = "R8";
    RenderTextureFormat[RenderTextureFormat["RFloat"] = 14] = "RFloat";
    RenderTextureFormat[RenderTextureFormat["RG16"] = 25] = "RG16";
    RenderTextureFormat[RenderTextureFormat["RG32"] = 23] = "RG32";
    RenderTextureFormat[RenderTextureFormat["RGB111110Float"] = 22] = "RGB111110Float";
    RenderTextureFormat[RenderTextureFormat["RGB565"] = 4] = "RGB565";
    RenderTextureFormat[RenderTextureFormat["RGBAUShort"] = 24] = "RGBAUShort";
    RenderTextureFormat[RenderTextureFormat["RGFloat"] = 12] = "RGFloat";
    RenderTextureFormat[RenderTextureFormat["RGHalf"] = 13] = "RGHalf";
    RenderTextureFormat[RenderTextureFormat["RGInt"] = 18] = "RGInt";
    RenderTextureFormat[RenderTextureFormat["RHalf"] = 15] = "RHalf";
    RenderTextureFormat[RenderTextureFormat["RInt"] = 19] = "RInt";
    RenderTextureFormat[RenderTextureFormat["Shadowmap"] = 3] = "Shadowmap";
})(RenderTextureFormat = exports.RenderTextureFormat || (exports.RenderTextureFormat = {}));
var CopyTextureSupport;
(function (CopyTextureSupport) {
    CopyTextureSupport[CopyTextureSupport["Basic"] = 1] = "Basic";
    CopyTextureSupport[CopyTextureSupport["Copy3D"] = 2] = "Copy3D";
    CopyTextureSupport[CopyTextureSupport["DifferentTypes"] = 4] = "DifferentTypes";
    CopyTextureSupport[CopyTextureSupport["None"] = 0] = "None";
    CopyTextureSupport[CopyTextureSupport["RTToTexture"] = 16] = "RTToTexture";
    CopyTextureSupport[CopyTextureSupport["TextureToRT"] = 8] = "TextureToRT";
})(CopyTextureSupport = exports.CopyTextureSupport || (exports.CopyTextureSupport = {}));
var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["Console"] = 2] = "Console";
    DeviceType[DeviceType["Desktop"] = 3] = "Desktop";
    DeviceType[DeviceType["Handheld"] = 1] = "Handheld";
    DeviceType[DeviceType["Unknown"] = 0] = "Unknown";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
var OperatingSystemFamily;
(function (OperatingSystemFamily) {
    OperatingSystemFamily[OperatingSystemFamily["Linux"] = 3] = "Linux";
    OperatingSystemFamily[OperatingSystemFamily["MacOSX"] = 1] = "MacOSX";
    OperatingSystemFamily[OperatingSystemFamily["Other"] = 0] = "Other";
    OperatingSystemFamily[OperatingSystemFamily["Windows"] = 2] = "Windows";
})(OperatingSystemFamily = exports.OperatingSystemFamily || (exports.OperatingSystemFamily = {}));
},{"../Type/class":216,"./api":211}],213:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":211,"./class":212}],214:[function(require,module,exports){
"use strict";
},{}],215:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class mscorlibTypeAPI {
    static get _Equals_obj() {
        return Il2Cpp.Api.o("mscorlib", "System.Type", "Equals", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_type() {
        return Il2Cpp.Api.o("mscorlib", "System.Type", "Equals", 1, ["System.Type"], "bool", ["pointer", "pointer"]);
    }
    static get _GetArrayRank() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "GetArrayRank", 0, "int", ["pointer"]);
    }
    static get _GetConstructor() {
        return Il2Cpp.Api.o("mscorlib", "System.Type", "GetConstructor", 1, ["System.Type[]"], "pointer", ["pointer", "pointer"]);
    }
    static get _GetEnumName() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "GetEnumName", 0, "pointer", ["pointer"]);
    }
    static get _GetEnumNames() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "GetEnumNames", 0, "pointer", ["pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "GetHashCode", 0, "int", ["pointer"]);
    }
    static get _GetType_0() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "GetType", 0, "pointer", ["pointer"]);
    }
    static get _GetType_1() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "GetType", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("mscorlib", "System.Type", "ToString", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_Equals_obj", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_Equals_type", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetArrayRank", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetConstructor", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetEnumName", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetEnumNames", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetType_0", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_GetType_1", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibTypeAPI, "_ToString", null);
mscorlib.Api.Type = mscorlibTypeAPI;
},{"decorator-cache-getter":338}],216:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_Type_impl = void 0;
const class_1 = require("../class");
class mscorlib_System_Type_impl extends class_1.mscorlib_System_Object_impl {
    Delimiter = lfvt(this.handle, "Delimiter", findClass("Type"));
    EmptyTypes = lfvt(this.handle, "EmptyTypes", findClass("Type"));
    FilterAttribute = lfvt(this.handle, "FilterAttribute", findClass("Type"));
    FilterName = lfvt(this.handle, "FilterName", findClass("Type"));
    FilterNameIgnoreCase = lfvt(this.handle, "FilterNameIgnoreCase", findClass("Type"));
    Missing = new mscorlib.Object(lfvt(this.handle, "Missing", findClass("Type")));
    Equals_obj(obj) {
        return mscorlib.Api.Type._Equals_obj(this.handle, obj);
    }
    Equals_type(type) {
        return mscorlib.Api.Type._Equals_type(this.handle, type.handle);
    }
    GetArrayRank() {
        return mscorlib.Api.Type._GetArrayRank(this.handle).toInt32();
    }
    GetConstructor(types) {
        return mscorlib.Api.Type._GetConstructor(this.handle, types[0].handle);
    }
    GetEnumName(obj) {
        return readU16(mscorlib.Api.Type._GetEnumName(this.handle, obj));
    }
    GetEnumNames() {
        return mscorlib.Api.Type._GetEnumNames(this.handle);
    }
    GetHashCode() {
        return mscorlib.Api.Type._GetHashCode(this.handle).toInt32();
    }
    GetType_0() {
        return new mscorlib_System_Type_impl(mscorlib.Api.Type._GetType_0(this.handle));
    }
    GetType_1(typeName) {
        return new mscorlib_System_Type_impl(mscorlib.Api.Type._GetType_1(this.handle, typeName));
    }
    toString() {
        return readU16(mscorlib.Api.Type._ToString(this.handle));
    }
    get name() {
        return this.toString().split('Type: ')[1];
    }
    get class() {
        return findClass(this.name);
    }
    get caseToRuntimeType() {
        return new mscorlib.RuntimeType(this.handle);
    }
}
exports.mscorlib_System_Type_impl = mscorlib_System_Type_impl;
mscorlib.Type = mscorlib_System_Type_impl;
},{"../class":304}],217:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./interface");
},{"./api":215,"./class":216,"./interface":218}],218:[function(require,module,exports){
"use strict";
},{}],219:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_UI_Button_ButtonClickedEvent_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_UI_Button_ButtonClickedEvent_Impl extends class_1.UnityEngine_Events_UnityEvent_Impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor() {
        return Il2Cpp.Api.ButtonClickedEvent.__ctor(alloc());
    }
}
exports.UnityEngine_UI_Button_ButtonClickedEvent_Impl = UnityEngine_UI_Button_ButtonClickedEvent_Impl;
Il2Cpp.ButtonClickedEvent = UnityEngine_UI_Button_ButtonClickedEvent_Impl;
},{"../class":221}],220:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Events_UnityEvent_API {
    static get __ctor() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", ".ctor", 0, [], "void", ["pointer"]);
    }
    static get _AddListener() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "AddListener", 1, ["UnityEngine.Events.UnityAction"], "void", ["pointer", "pointer"]);
    }
    static get _RemoveListener() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "RemoveListener", 1, ["UnityEngine.Events.UnityAction"], "void", ["pointer", "pointer"]);
    }
    static get _FindMethod_Impl() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "FindMethod_Impl", 2, ["System.String", "System.Object"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetDelegate() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "GetDelegate", 2, ["System.Object", "System.Reflection.MethodInfo"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetDelegate_action() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "GetDelegate", 1, ["UnityEngine.Events.UnityAction"], "pointer", ["pointer"]);
    }
    static get _Invoke() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Events.UnityEvent", "Invoke", 0, [], "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "_AddListener", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "_RemoveListener", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "_FindMethod_Impl", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "_GetDelegate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "_GetDelegate_action", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Events_UnityEvent_API, "_Invoke", null);
Il2Cpp.Api.UnityEvent = UnityEngine_Events_UnityEvent_API;
},{"decorator-cache-getter":338}],221:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Events_UnityEvent_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Events_UnityEvent_Impl extends class_1.UnityEventBase_impl {
    m_InvokeArray = lfv(this.handle, "m_InvokeArray");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor() {
        return Il2Cpp.Api.UnityEvent.__ctor(this.handle);
    }
    AddListener(call) {
        return Il2Cpp.Api.UnityEvent._AddListener(this.handle, call);
    }
    RemoveListener(call) {
        return Il2Cpp.Api.UnityEvent._RemoveListener(this.handle, call);
    }
    FindMethod_Impl(name, targetObj) {
        return Il2Cpp.Api.UnityEvent._FindMethod_Impl(this.handle, name, targetObj);
    }
    GetDelegate(target, theFunction) {
        return Il2Cpp.Api.UnityEvent._GetDelegate(this.handle, target, theFunction);
    }
    static GetDelegate_1(action) {
        return Il2Cpp.Api.UnityEvent._GetDelegate(action);
    }
    Invoke() {
        return Il2Cpp.Api.UnityEvent._Invoke(this.handle);
    }
}
exports.UnityEngine_Events_UnityEvent_Impl = UnityEngine_Events_UnityEvent_Impl;
Il2Cpp.UnityEvent = UnityEngine_Events_UnityEvent_Impl;
},{"../class":225}],222:[function(require,module,exports){
"use strict";
},{}],223:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":220,"./class":221,"./export":222}],224:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEventBaseAPI {
    static get _ctor_0() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _AddCall() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "AddCall", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _DirtyPersistentCalls() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "DirtyPersistentCalls", 0, "void", ["pointer"]);
    }
    static get _FindMethod() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "FindMethod", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _FindMethod_2() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "FindMethod", 4, "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _GetValidMethodInfo() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "GetValidMethodInfo", 3, "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _PrepareInvoke() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "PrepareInvoke", 0, "pointer", ["pointer"]);
    }
    static get _RebuildPersistentCallsIfNeeded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "RebuildPersistentCallsIfNeeded", 0, "void", ["pointer"]);
    }
    static get _RemoveListener() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "RemoveListener", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Events.UnityEventBase", "ToString", 0, "pointer", ['pointer']);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_ctor_0", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_AddCall", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_DirtyPersistentCalls", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_FindMethod", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_FindMethod_2", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_GetValidMethodInfo", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_PrepareInvoke", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_RebuildPersistentCallsIfNeeded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_RemoveListener", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEventBaseAPI, "_ToString", null);
mscorlib.Api.UnityEventBase = UnityEventBaseAPI;
},{"decorator-cache-getter":338}],225:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_Object_impl = exports.UnityEventBase_impl = void 0;
const class_1 = require("../class");
Object.defineProperty(exports, "mscorlib_System_Object_impl", { enumerable: true, get: function () { return class_1.mscorlib_System_Object_impl; } });
const class_2 = require("../InvokableCallList/class");
class UnityEventBase_impl extends class_1.mscorlib_System_Object_impl {
    m_Calls = new class_2.InvokableCallList_impl(lfv(this.handle, "m_Calls", findClass("UnityEventBase", ['UnityEngine.CoreModule'])));
    m_CallsDirty = lfv(this.handle, "m_CallsDirty", findClass("UnityEventBase", ['UnityEngine.CoreModule']));
    m_PersistentCalls = lfv(this.handle, "m_PersistentCalls", findClass("UnityEventBase", ['UnityEngine.CoreModule']));
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    ctor_0() {
        return new UnityEventBase_impl(mscorlib.Api.UnityEventBase._ctor_0(alloc()));
    }
    AddListener(call) {
        return mscorlib.Api.UnityEventBase._AddCall(this.handle, call);
    }
    DirtyPersistentCalls() {
        return mscorlib.Api.UnityEventBase._DirtyPersistentCalls(this.handle);
    }
    Findmethod(target, method) {
        return mscorlib.Api.UnityEventBase._FindMethod(this.handle, target, method);
    }
    Findmethod_2(target, method) {
        return mscorlib.Api.UnityEventBase._FindMethod_2(this.handle, target, method);
    }
    get_Calls() {
        return this.m_Calls;
    }
    get_CallsDirty() {
        return this.m_CallsDirty;
    }
    get_PersistentCalls() {
        return this.m_PersistentCalls;
    }
}
exports.UnityEventBase_impl = UnityEventBase_impl;
mscorlib.UnityEventBase = UnityEventBase_impl;
},{"../InvokableCallList/class":79,"../class":304}],226:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./UnityEvent/include");
},{"./UnityEvent/include":223,"./api":224,"./class":225}],227:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_Boolean_API {
    static get _GetHashCode() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "GetHashCode", 0, [], "pointer", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "ToString", 0, [], "pointer", ["pointer"]);
    }
    static get _ToString_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "ToString", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "Equals", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_obj() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "Equals", 1, ["System.Boolean"], "pointer", ["pointer", "pointer"]);
    }
    static get _CompareTo() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "CompareTo", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _CompareTo_value() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "CompareTo", 1, ["System.Boolean"], "pointer", ["pointer", "pointer"]);
    }
    static get _Parse() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "Parse", 1, ["System.String"], "pointer", ["pointer"]);
    }
    static get _TryParse() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "TryParse", 2, ["System.String", "System.Boolean&"], "pointer", ["pointer", "pointer"]);
    }
    static get _TrimWhiteSpaceAndNull() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "TrimWhiteSpaceAndNull", 1, ["System.String"], "pointer", ["pointer"]);
    }
    static get _GetTypeCode() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "GetTypeCode", 0, [], "pointer", ["pointer"]);
    }
    static get _System_IConvertible_ToBoolean() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToBoolean", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToChar() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToChar", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToSByte() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToSByte", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToByte() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToByte", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt16() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToInt16", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt16() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToUInt16", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt32() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToInt32", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt32() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToUInt32", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt64() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToInt64", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt64() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToUInt64", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToSingle() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToSingle", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDouble() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToDouble", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDecimal() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToDecimal", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDateTime() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToDateTime", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToType() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", "System.IConvertible.ToType", 2, ["System.Type", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.o("mscorlib", "System.Boolean", ".cctor", 0, [], "void", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_ToString_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_Equals_obj", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_CompareTo", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_CompareTo_value", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_Parse", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_TryParse", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_TrimWhiteSpaceAndNull", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_GetTypeCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToBoolean", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToChar", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToSByte", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToByte", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToInt16", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToUInt16", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToInt32", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToUInt32", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToInt64", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToUInt64", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToSingle", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToDouble", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToDecimal", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToDateTime", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "_System_IConvertible_ToType", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Boolean_API, "__cctor", null);
mscorlib.Api.Boolean = System_Boolean_API;
},{"decorator-cache-getter":338}],228:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_Boolean_Impl = void 0;
const class_1 = require("../class");
class System_Boolean_Impl extends class_1.System_ValueType_Impl {
    m_value = !lfv(this.handle, "m_value").isNull();
    True = lfv(this.handle, "True").toInt32();
    False = lfv(this.handle, "False").toInt32();
    TrueLiteral = readU16(lfv(this.handle, "TrueLiteral"));
    FalseLiteral = readU16(lfv(this.handle, "FalseLiteral"));
    TrueString = readU16(lfv(this.handle, "TrueString"));
    FalseString = readU16(lfv(this.handle, "FalseString"));
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    GetHashCode() {
        return mscorlib.Api.Boolean._GetHashCode(this.handle);
    }
    ToString() {
        return readU16(mscorlib.Api.Boolean._ToString(this.handle));
    }
    ToString_1(provider) {
        return readU16(mscorlib.Api.Boolean._ToString(this.handle, provider));
    }
    Equals(obj) {
        return !mscorlib.Api.Boolean._Equals(this.handle, obj.handle).isNull();
    }
    Equals_1(obj) {
        return mscorlib.Api.Boolean._Equals(this.handle, obj);
    }
    CompareTo(obj) {
        return mscorlib.Api.Boolean._CompareTo(this.handle, obj.handle);
    }
    CompareTo_1(value) {
        return mscorlib.Api.Boolean._CompareTo(this.handle, value);
    }
    static Parse(value) {
        return !mscorlib.Api.Boolean._Parse(allocUStr(value)).isNull();
    }
    static TryParse(value, result) {
        return !mscorlib.Api.Boolean._TryParse(allocUStr(value), result).isNull();
    }
    static TrimWhiteSpaceAndNull(value) {
        return readU16(mscorlib.Api.Boolean._TrimWhiteSpaceAndNull(value));
    }
    GetTypeCode() {
        return mscorlib.Api.Boolean._GetTypeCode(this.handle);
    }
    System_IConvertible_ToBoolean(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToBoolean(this.handle, provider);
    }
    System_IConvertible_ToChar(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToChar(this.handle, provider);
    }
    System_IConvertible_ToSByte(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToSByte(this.handle, provider);
    }
    System_IConvertible_ToByte(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToByte(this.handle, provider);
    }
    System_IConvertible_ToInt16(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToInt16(this.handle, provider);
    }
    System_IConvertible_ToUInt16(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToUInt16(this.handle, provider);
    }
    System_IConvertible_ToInt32(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToInt32(this.handle, provider);
    }
    System_IConvertible_ToUInt32(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToUInt32(this.handle, provider);
    }
    System_IConvertible_ToInt64(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToInt64(this.handle, provider);
    }
    System_IConvertible_ToUInt64(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToUInt64(this.handle, provider);
    }
    System_IConvertible_ToSingle(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToSingle(this.handle, provider);
    }
    System_IConvertible_ToDouble(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToDouble(this.handle, provider);
    }
    System_IConvertible_ToDecimal(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToDecimal(this.handle, provider);
    }
    System_IConvertible_ToDateTime(provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToDateTime(this.handle, provider);
    }
    System_IConvertible_ToType(type, provider) {
        return mscorlib.Api.Boolean._System_IConvertible_ToType(this.handle, type, provider);
    }
    static _cctor() {
        return mscorlib.Api.Boolean.__cctor();
    }
}
exports.System_Boolean_Impl = System_Boolean_Impl;
mscorlib.Boolean = System_Boolean_Impl;
},{"../class":294}],229:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":227,"./class":228}],230:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Color32_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", ".ctor", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _op_Implicit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", "op_Implicit", 1, "pointer", ["pointer"]);
    }
    static get _op_Implicit_c() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color32", "op_Implicit", 1, ["UnityEngine.Color32"], "pointer", ["pointer"]);
    }
    static get _Lerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", "Lerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color32", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color32", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color32_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color32_API, "_op_Implicit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color32_API, "_op_Implicit_c", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color32_API, "_Lerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color32_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color32_API, "_ToString_format_formatProvider", null);
Il2Cpp.Api.Color32 = UnityEngine_Color32_API;
},{"decorator-cache-getter":338}],231:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Color32_Impl = void 0;
const class_1 = require("../class");
const class_2 = require("../Color/class");
class UnityEngine_Color32_Impl extends class_1.System_ValueType_Impl {
    rgba = lfv(this.handle, "rgba");
    r = lfv(this.handle, "r");
    g = lfv(this.handle, "g");
    b = lfv(this.handle, "b");
    a = lfv(this.handle, "a");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    __ctor(r, g, b, a) {
        return Il2Cpp.Api.Color32.__ctor(this.handle, r, g, b, a);
    }
    static op_Implicit(c) {
        return new class_2.UnityEngine_Color_Impl(Il2Cpp.Api.Color32._op_Implicit(c));
    }
    static op_Implicit_1(c) {
        return new class_2.UnityEngine_Color_Impl(Il2Cpp.Api.Color32._op_Implicit(c));
    }
    static Lerp(a, b, t) {
        return new UnityEngine_Color32_Impl(Il2Cpp.Api.Color32._Lerp(a, b, t));
    }
    ToString() {
        return readU16(Il2Cpp.Api.Color32._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Color32._ToString(this.handle, format, formatProvider));
    }
}
exports.UnityEngine_Color32_Impl = UnityEngine_Color32_Impl;
Il2Cpp.Color32 = UnityEngine_Color32_Impl;
},{"../Color/class":235,"../class":294}],232:[function(require,module,exports){
"use strict";
},{}],233:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":230,"./class":231,"./export":232}],234:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Color_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", ".ctor", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_r_g_b() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", ".ctor", 3, ["System.Single", "System.Single", "System.Single"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "Equals", 1, ["UnityEngine.Color"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Addition() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Addition", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Subtraction() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Subtraction", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Multiply", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply_a_b() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "op_Multiply", 2, ["UnityEngine.Color", "System.Single"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Lerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "Lerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _RGBMultiplied() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "RGBMultiplied", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _get_red() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_red", 0, "pointer", []);
    }
    static get _get_green() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_green", 0, "pointer", []);
    }
    static get _get_blue() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_blue", 0, "pointer", []);
    }
    static get _get_white() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_white", 0, "pointer", []);
    }
    static get _get_black() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_black", 0, "pointer", []);
    }
    static get _get_yellow() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_yellow", 0, "pointer", []);
    }
    static get _get_magenta() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_magenta", 0, "pointer", []);
    }
    static get _get_gray() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_gray", 0, "pointer", []);
    }
    static get _get_clear() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_clear", 0, "pointer", []);
    }
    static get _get_linear() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_linear", 0, "pointer", ["pointer"]);
    }
    static get _get_maxColorComponent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "get_maxColorComponent", 0, "pointer", ["pointer"]);
    }
    static get _op_Implicit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Color", "op_Implicit", 1, "pointer", ["pointer"]);
    }
    static get _op_Implicit_v() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Color", "op_Implicit", 1, ["UnityEngine.Vector4"], "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "__ctor_r_g_b", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_ToString_format_formatProvider", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Addition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Subtraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Multiply", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Multiply_a_b", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_Lerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_RGBMultiplied", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_red", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_green", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_blue", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_white", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_black", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_yellow", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_magenta", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_gray", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_clear", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_linear", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_get_maxColorComponent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Implicit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Color_API, "_op_Implicit_v", null);
Il2Cpp.Api.Color = UnityEngine_Color_API;
},{"decorator-cache-getter":338}],235:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Color_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Color_Impl extends class_1.System_ValueType_Impl {
    r = lfv(this.handle, "r");
    g = lfv(this.handle, "g");
    b = lfv(this.handle, "b");
    a = lfv(this.handle, "a");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor_rgba(r, g, b, a) {
        return Il2Cpp.Api.Color.__ctor(this.handle, r, g, b, a);
    }
    _ctor_rgb(r, g, b) {
        return Il2Cpp.Api.Color.__ctor(this.handle, r, g, b);
    }
    ToString() {
        return readU16(Il2Cpp.Api.Color._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Color._ToString(this.handle, format, formatProvider));
    }
    GetHashCode() {
        return Il2Cpp.Api.Color._GetHashCode(this.handle);
    }
    Equals_obj(other) {
        return Il2Cpp.Api.Color._Equals(this.handle, other);
    }
    Equals_color(other) {
        return Il2Cpp.Api.Color._Equals(this.handle, other);
    }
    static op_Addition(a, b) {
        return Il2Cpp.Api.Color._op_Addition(a, b);
    }
    static op_Subtraction(a, b) {
        return Il2Cpp.Api.Color._op_Subtraction(a, b);
    }
    static op_Multiply_color_color(a, b) {
        return Il2Cpp.Api.Color._op_Multiply(a, b);
    }
    static op_Multiply_color_number(a, b) {
        return Il2Cpp.Api.Color._op_Multiply(a, b);
    }
    static op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Color._op_Equality(lhs, rhs);
    }
    static Lerp(a, b, t) {
        return Il2Cpp.Api.Color._Lerp(a, b, t);
    }
    RGBMultiplied(multiplier) {
        return Il2Cpp.Api.Color._RGBMultiplied(this.handle, multiplier);
    }
    static get_red() {
        return Il2Cpp.Api.Color._get_red();
    }
    static get_green() {
        return Il2Cpp.Api.Color._get_green();
    }
    static get_blue() {
        return Il2Cpp.Api.Color._get_blue();
    }
    static get_white() {
        return Il2Cpp.Api.Color._get_white();
    }
    static get_black() {
        return Il2Cpp.Api.Color._get_black();
    }
    static get_yellow() {
        return Il2Cpp.Api.Color._get_yellow();
    }
    static get_magenta() {
        return Il2Cpp.Api.Color._get_magenta();
    }
    static get_gray() {
        return Il2Cpp.Api.Color._get_gray();
    }
    static get_clear() {
        return Il2Cpp.Api.Color._get_clear();
    }
    get_linear() {
        return Il2Cpp.Api.Color._get_linear(this.handle);
    }
    get_maxColorComponent() {
        return Il2Cpp.Api.Color._get_maxColorComponent(this.handle);
    }
    static op_Implicit_UnityEngine_Color_Impl(c) {
        return Il2Cpp.Api.Color._op_Implicit(c);
    }
    static op_Implicit_UnityEngine_Vector4(v) {
        return Il2Cpp.Api.Color._op_Implicit(v);
    }
}
exports.UnityEngine_Color_Impl = UnityEngine_Color_Impl;
Il2Cpp.Color = UnityEngine_Color_Impl;
},{"../class":294}],236:[function(require,module,exports){
"use strict";
},{}],237:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
require("./interface");
},{"./api":234,"./class":235,"./export":236,"./interface":238}],238:[function(require,module,exports){
"use strict";
},{}],239:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_DateTime_API {
    static get __ctor() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 1, ["System.Int64"], "void", ["pointer", "pointer"]);
    }
    static get __ctor_dateData() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 1, ["System.UInt64"], "void", ["pointer", "pointer"]);
    }
    static get __ctor_ticks_kind() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 2, ["System.Int64", "System.DateTimeKind"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get __ctor_ticks_kind_isAmbiguousDst() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 3, ["System.Int64", "System.DateTimeKind", "System.Boolean"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_year_month_day() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 3, ["System.Int32", "System.Int32", "System.Int32"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_year_month_day_hour_minute_second() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 6, ["System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32"], "void", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_year_month_day_hour_minute_second_millisecond() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 7, ["System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32"], "void", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_year_month_day_hour_minute_second_millisecond_kind() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 8, ["System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.DateTimeKind"], "void", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_info_context() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".ctor", 2, ["System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_InternalTicks() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_InternalTicks", 0, [], "pointer", ["pointer"]);
    }
    static get _get_InternalKind() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_InternalKind", 0, [], "pointer", ["pointer"]);
    }
    static get _Add() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Add", 1, ["System.TimeSpan"], "pointer", ["pointer", "pointer"]);
    }
    static get _Add_value_scale() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Add", 2, ["System.Double", "System.Int32"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _AddDays() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddDays", 1, ["System.Double"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddHours() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddHours", 1, ["System.Double"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddMilliseconds() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddMilliseconds", 1, ["System.Double"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddMinutes() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddMinutes", 1, ["System.Double"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddMonths() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddMonths", 1, ["System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddSeconds() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddSeconds", 1, ["System.Double"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddTicks() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddTicks", 1, ["System.Int64"], "pointer", ["pointer", "pointer"]);
    }
    static get _AddYears() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "AddYears", 1, ["System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _CompareTo() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "CompareTo", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _CompareTo_value() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "CompareTo", 1, ["System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _DateToTicks() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "DateToTicks", 3, ["System.Int32", "System.Int32", "System.Int32"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _TimeToTicks() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "TimeToTicks", 3, ["System.Int32", "System.Int32", "System.Int32"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _DaysInMonth() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "DaysInMonth", 2, ["System.Int32", "System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Equals", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_value() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Equals", 1, ["System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _FromBinary() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "FromBinary", 1, ["System.Int64"], "pointer", ["pointer"]);
    }
    static get _FromBinaryRaw() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "FromBinaryRaw", 1, ["System.Int64"], "pointer", ["pointer"]);
    }
    static get _System_Runtime_Serialization_ISerializable_GetObjectData() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.Runtime.Serialization.ISerializable.GetObjectData", 2, ["System.Runtime.Serialization.SerializationInfo", "System.Runtime.Serialization.StreamingContext"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _SpecifyKind() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "SpecifyKind", 2, ["System.DateTime", "System.DateTimeKind"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToBinaryRaw() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToBinaryRaw", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Date() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Date", 0, [], "pointer", ["pointer"]);
    }
    static get _GetDatePart() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetDatePart", 1, ["System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _get_Day() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Day", 0, [], "pointer", ["pointer"]);
    }
    static get _get_DayOfWeek() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_DayOfWeek", 0, [], "pointer", ["pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetHashCode", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Hour() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Hour", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Kind() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Kind", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Millisecond() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Millisecond", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Minute() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Minute", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Month() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Month", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Now() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Now", 0, [], "pointer", []);
    }
    static get _get_UtcNow() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_UtcNow", 0, [], "pointer", []);
    }
    static get _GetSystemTimeAsFileTime() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetSystemTimeAsFileTime", 0, [], "pointer", []);
    }
    static get _get_Second() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Second", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Ticks() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Ticks", 0, [], "pointer", ["pointer"]);
    }
    static get _get_TimeOfDay() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_TimeOfDay", 0, [], "pointer", ["pointer"]);
    }
    static get _get_Today() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Today", 0, [], "pointer", []);
    }
    static get _get_Year() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "get_Year", 0, [], "pointer", ["pointer"]);
    }
    static get _IsLeapYear() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "IsLeapYear", 1, ["System.Int32"], "pointer", ["pointer"]);
    }
    static get _Parse() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Parse", 1, ["System.String"], "pointer", ["pointer"]);
    }
    static get _Parse_s_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Parse", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _ParseExact() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ParseExact", 3, ["System.String", "System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ParseExact_s_format_provider_style() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ParseExact", 4, ["System.String", "System.String", "System.IFormatProvider", "System.Globalization.DateTimeStyles"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Subtract() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "Subtract", 1, ["System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToLocalTime() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToLocalTime", 0, [], "pointer", ["pointer"]);
    }
    static get _ToLocalTime_throwOnOverflow() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToLocalTime", 1, ["System.Boolean"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToString", 0, [], "pointer", ["pointer"]);
    }
    static get _ToString_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToString", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToString_format_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _ToUniversalTime() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "ToUniversalTime", 0, [], "pointer", ["pointer"]);
    }
    static get _TryParse() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "TryParse", 4, ["System.String", "System.IFormatProvider", "System.Globalization.DateTimeStyles", "System.DateTime&"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _op_Addition() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Addition", 2, ["System.DateTime", "System.TimeSpan"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Subtraction() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Subtraction", 2, ["System.DateTime", "System.TimeSpan"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Subtraction_d1_d2() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Subtraction", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Equality", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_Inequality", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_LessThan() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_LessThan", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_LessThanOrEqual() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_LessThanOrEqual", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_GreaterThan() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_GreaterThan", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_GreaterThanOrEqual() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "op_GreaterThanOrEqual", 2, ["System.DateTime", "System.DateTime"], "pointer", ["pointer", "pointer"]);
    }
    static get _GetTypeCode() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "GetTypeCode", 0, [], "pointer", ["pointer"]);
    }
    static get _System_IConvertible_ToBoolean() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToBoolean", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToChar() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToChar", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToSByte() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToSByte", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToByte() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToByte", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt16() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToInt16", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt16() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToUInt16", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt32() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToInt32", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt32() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToUInt32", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt64() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToInt64", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt64() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToUInt64", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToSingle() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToSingle", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDouble() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToDouble", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDecimal() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToDecimal", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDateTime() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToDateTime", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToType() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "System.IConvertible.ToType", 2, ["System.Type", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _TryCreate() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", "TryCreate", 8, ["System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.Int32", "System.DateTime&"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.o("mscorlib", "System.DateTime", ".cctor", 0, [], "void", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_dateData", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_ticks_kind", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_ticks_kind_isAmbiguousDst", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_year_month_day", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_year_month_day_hour_minute_second", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_year_month_day_hour_minute_second_millisecond", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_year_month_day_hour_minute_second_millisecond_kind", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__ctor_info_context", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_InternalTicks", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_InternalKind", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Add", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Add_value_scale", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddDays", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddHours", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddMilliseconds", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddMinutes", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddMonths", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddSeconds", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddTicks", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_AddYears", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_CompareTo", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_CompareTo_value", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_DateToTicks", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_TimeToTicks", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_DaysInMonth", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Equals_value", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_FromBinary", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_FromBinaryRaw", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_Runtime_Serialization_ISerializable_GetObjectData", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_SpecifyKind", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToBinaryRaw", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Date", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_GetDatePart", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Day", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_DayOfWeek", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Hour", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Kind", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Millisecond", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Minute", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Month", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Now", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_UtcNow", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_GetSystemTimeAsFileTime", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Second", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Ticks", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_TimeOfDay", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Today", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_get_Year", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_IsLeapYear", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Parse", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Parse_s_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ParseExact", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ParseExact_s_format_provider_style", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_Subtract", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToLocalTime", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToLocalTime_throwOnOverflow", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToString_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToString_format_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_ToUniversalTime", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_TryParse", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_Addition", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_Subtraction", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_Subtraction_d1_d2", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_LessThan", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_LessThanOrEqual", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_GreaterThan", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_op_GreaterThanOrEqual", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_GetTypeCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToBoolean", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToChar", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToSByte", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToByte", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToInt16", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToUInt16", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToInt32", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToUInt32", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToInt64", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToUInt64", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToSingle", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToDouble", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToDecimal", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToDateTime", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_System_IConvertible_ToType", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "_TryCreate", null);
__decorate([
    decorator_cache_getter_1.cache
], System_DateTime_API, "__cctor", null);
mscorlib.Api.DateTime = System_DateTime_API;
},{"decorator-cache-getter":338}],240:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_DateTime_Impl = void 0;
const class_1 = require("../class");
class System_DateTime_Impl extends class_1.System_ValueType_Impl {
    TicksPerMillisecond = lfv(this.handle, "TicksPerMillisecond");
    TicksPerSecond = lfv(this.handle, "TicksPerSecond");
    TicksPerMinute = lfv(this.handle, "TicksPerMinute");
    TicksPerHour = lfv(this.handle, "TicksPerHour");
    TicksPerDay = lfv(this.handle, "TicksPerDay");
    MillisPerSecond = lfv(this.handle, "MillisPerSecond");
    MillisPerMinute = lfv(this.handle, "MillisPerMinute");
    MillisPerHour = lfv(this.handle, "MillisPerHour");
    MillisPerDay = lfv(this.handle, "MillisPerDay");
    DaysPerYear = lfv(this.handle, "DaysPerYear");
    DaysPer4Years = lfv(this.handle, "DaysPer4Years");
    DaysPer100Years = lfv(this.handle, "DaysPer100Years");
    DaysPer400Years = lfv(this.handle, "DaysPer400Years");
    DaysTo1601 = lfv(this.handle, "DaysTo1601");
    DaysTo1899 = lfv(this.handle, "DaysTo1899");
    DaysTo1970 = lfv(this.handle, "DaysTo1970");
    DaysTo10000 = lfv(this.handle, "DaysTo10000");
    MinTicks = lfv(this.handle, "MinTicks");
    MaxTicks = lfv(this.handle, "MaxTicks");
    MaxMillis = lfv(this.handle, "MaxMillis");
    FileTimeOffset = lfv(this.handle, "FileTimeOffset");
    DoubleDateOffset = lfv(this.handle, "DoubleDateOffset");
    OADateMinAsTicks = lfv(this.handle, "OADateMinAsTicks");
    OADateMinAsDouble = lfv(this.handle, "OADateMinAsDouble");
    OADateMaxAsDouble = lfv(this.handle, "OADateMaxAsDouble");
    DatePartYear = lfv(this.handle, "DatePartYear");
    DatePartDayOfYear = lfv(this.handle, "DatePartDayOfYear");
    DatePartMonth = lfv(this.handle, "DatePartMonth");
    DatePartDay = lfv(this.handle, "DatePartDay");
    DaysToMonth365 = lfv(this.handle, "DaysToMonth365");
    DaysToMonth366 = lfv(this.handle, "DaysToMonth366");
    MinValue = new System_DateTime_Impl(lfv(this.handle, "MinValue"));
    MaxValue = new System_DateTime_Impl(lfv(this.handle, "MaxValue"));
    TicksMask = lfv(this.handle, "TicksMask");
    FlagsMask = lfv(this.handle, "FlagsMask");
    LocalMask = lfv(this.handle, "LocalMask");
    TicksCeiling = lfv(this.handle, "TicksCeiling");
    KindUnspecified = lfv(this.handle, "KindUnspecified");
    KindUtc = lfv(this.handle, "KindUtc");
    KindLocal = lfv(this.handle, "KindLocal");
    KindLocalAmbiguousDst = lfv(this.handle, "KindLocalAmbiguousDst");
    KindShift = lfv(this.handle, "KindShift");
    TicksField = lfv(this.handle, "TicksField");
    DateDataField = lfv(this.handle, "DateDataField");
    dateData = lfv(this.handle, "dateData");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor_System_Int32(ticks) {
        return mscorlib.Api.DateTime.__ctor(this.handle, ticks);
    }
    _ctor_Uint64(dateData) {
        return mscorlib.Api.DateTime.__ctor(this.handle, dateData);
    }
    _ctor_num_kid(ticks, kind) {
        return mscorlib.Api.DateTime.__ctor(this.handle, ticks, kind);
    }
    _ctor_3(ticks, kind, isAmbiguousDst) {
        return mscorlib.Api.DateTime.__ctor(this.handle, ticks, kind, isAmbiguousDst);
    }
    _ctor_year_month_day(year, month, day) {
        return mscorlib.Api.DateTime.__ctor(this.handle, year, month, day);
    }
    _ctor_6(year, month, day, hour, minute, second) {
        return mscorlib.Api.DateTime.__ctor(this.handle, year, month, day, hour, minute, second);
    }
    _ctor_7(year, month, day, hour, minute, second, millisecond) {
        return mscorlib.Api.DateTime.__ctor(this.handle, year, month, day, hour, minute, second, millisecond);
    }
    _ctor_8(year, month, day, hour, minute, second, millisecond, kind) {
        return mscorlib.Api.DateTime.__ctor(this.handle, year, month, day, hour, minute, second, millisecond, kind);
    }
    _ctor_2(info, context) {
        return mscorlib.Api.DateTime.__ctor(this.handle, info, context);
    }
    get_InternalTicks() {
        return mscorlib.Api.DateTime._get_InternalTicks(this.handle);
    }
    get_InternalKind() {
        return mscorlib.Api.DateTime._get_InternalKind(this.handle);
    }
    Add(value) {
        return mscorlib.Api.DateTime._Add(this.handle, value);
    }
    Add_2(value, scale) {
        return mscorlib.Api.DateTime._Add(this.handle, value, scale);
    }
    AddDays(value) {
        return mscorlib.Api.DateTime._AddDays(this.handle, value);
    }
    AddHours(value) {
        return mscorlib.Api.DateTime._AddHours(this.handle, value);
    }
    AddMilliseconds(value) {
        return mscorlib.Api.DateTime._AddMilliseconds(this.handle, value);
    }
    AddMinutes(value) {
        return mscorlib.Api.DateTime._AddMinutes(this.handle, value);
    }
    AddMonths(months) {
        return mscorlib.Api.DateTime._AddMonths(this.handle, months);
    }
    AddSeconds(value) {
        return mscorlib.Api.DateTime._AddSeconds(this.handle, value);
    }
    AddTicks(value) {
        return mscorlib.Api.DateTime._AddTicks(this.handle, value);
    }
    AddYears(value) {
        return mscorlib.Api.DateTime._AddYears(this.handle, value);
    }
    CompareTo(value) {
        return mscorlib.Api.DateTime._CompareTo(this.handle, value);
    }
    CompareTo_1(value) {
        return mscorlib.Api.DateTime._CompareTo(this.handle, value);
    }
    static DateToTicks(year, month, day) {
        return mscorlib.Api.DateTime._DateToTicks(year.handle, month.handle, day.handle);
    }
    static TimeToTicks(hour, minute, second) {
        return mscorlib.Api.DateTime._TimeToTicks(hour, minute, second);
    }
    static DaysInMonth(year, month) {
        return mscorlib.Api.DateTime._DaysInMonth(year, month);
    }
    Equals(value) {
        return mscorlib.Api.DateTime._Equals(this.handle, value);
    }
    Equals_1(value) {
        return mscorlib.Api.DateTime._Equals(this.handle, value);
    }
    static FromBinary(dateData) {
        return mscorlib.Api.DateTime._FromBinary(dateData);
    }
    static FromBinaryRaw(dateData) {
        return mscorlib.Api.DateTime._FromBinaryRaw(dateData);
    }
    static SpecifyKind(value, kind) {
        return mscorlib.Api.DateTime._SpecifyKind(value, kind);
    }
    ToBinaryRaw() {
        return mscorlib.Api.DateTime._ToBinaryRaw(this.handle);
    }
    get_Date() {
        return mscorlib.Api.DateTime._get_Date(this.handle);
    }
    GetDatePart(part) {
        return mscorlib.Api.DateTime._GetDatePart(this.handle, part);
    }
    get_Day() {
        return mscorlib.Api.DateTime._get_Day(this.handle);
    }
    get_DayOfWeek() {
        return mscorlib.Api.DateTime._get_DayOfWeek(this.handle);
    }
    GetHashCode() {
        return mscorlib.Api.DateTime._GetHashCode(this.handle);
    }
    get_Hour() {
        return mscorlib.Api.DateTime._get_Hour(this.handle);
    }
    get_Kind() {
        return mscorlib.Api.DateTime._get_Kind(this.handle);
    }
    get_Millisecond() {
        return mscorlib.Api.DateTime._get_Millisecond(this.handle);
    }
    get_Minute() {
        return mscorlib.Api.DateTime._get_Minute(this.handle);
    }
    get_Month() {
        return mscorlib.Api.DateTime._get_Month(this.handle);
    }
    static get_Now() {
        return mscorlib.Api.DateTime._get_Now();
    }
    static get_UtcNow() {
        return mscorlib.Api.DateTime._get_UtcNow();
    }
    static GetSystemTimeAsFileTime() {
        return mscorlib.Api.DateTime._GetSystemTimeAsFileTime();
    }
    get_Second() {
        return mscorlib.Api.DateTime._get_Second(this.handle);
    }
    get_Ticks() {
        return mscorlib.Api.DateTime._get_Ticks(this.handle);
    }
    get_TimeOfDay() {
        return mscorlib.Api.DateTime._get_TimeOfDay(this.handle);
    }
    static get_Today() {
        return mscorlib.Api.DateTime._get_Today();
    }
    get_Year() {
        return mscorlib.Api.DateTime._get_Year(this.handle);
    }
    static IsLeapYear(year) {
        return mscorlib.Api.DateTime._IsLeapYear(year);
    }
    static Parse(s) {
        return mscorlib.Api.DateTime._Parse(s);
    }
    static Parse_2(s, provider) {
        return mscorlib.Api.DateTime._Parse(s, provider);
    }
    static ParseExact(s, format, provider) {
        return mscorlib.Api.DateTime._ParseExact(s, format, provider);
    }
    static ParseExact_4(s, format, provider, style) {
        return mscorlib.Api.DateTime._ParseExact(s, format, provider, style);
    }
    Subtract(value) {
        return mscorlib.Api.DateTime._Subtract(this.handle, value);
    }
    ToLocalTime() {
        return mscorlib.Api.DateTime._ToLocalTime(this.handle);
    }
    ToLocalTime_1(throwOnOverflow) {
        return mscorlib.Api.DateTime._ToLocalTime(this.handle, throwOnOverflow);
    }
    ToString() {
        return readU16(mscorlib.Api.DateTime._ToString(this.handle));
    }
    ToString_1(provider) {
        return readU16(mscorlib.Api.DateTime._ToString(this.handle, provider));
    }
    ToString_2(format, provider) {
        return readU16(mscorlib.Api.DateTime._ToString(this.handle, format, provider));
    }
    ToUniversalTime() {
        return mscorlib.Api.DateTime._ToUniversalTime(this.handle);
    }
    static TryParse(s, provider, styles, result) {
        return mscorlib.Api.DateTime._TryParse(s, provider, styles, result);
    }
    static op_Addition(d, t) {
        return mscorlib.Api.DateTime._op_Addition(d, t);
    }
    static op_Subtraction(d, t) {
        return mscorlib.Api.DateTime._op_Subtraction(d, t);
    }
    static op_Subtraction_2(d1, d2) {
        return mscorlib.Api.DateTime._op_Subtraction(d1, d2);
    }
    static op_Equality(d1, d2) {
        return mscorlib.Api.DateTime._op_Equality(d1, d2);
    }
    static op_Inequality(d1, d2) {
        return mscorlib.Api.DateTime._op_Inequality(d1, d2);
    }
    static op_LessThan(t1, t2) {
        return mscorlib.Api.DateTime._op_LessThan(t1, t2);
    }
    static op_LessThanOrEqual(t1, t2) {
        return mscorlib.Api.DateTime._op_LessThanOrEqual(t1, t2);
    }
    static op_GreaterThan(t1, t2) {
        return mscorlib.Api.DateTime._op_GreaterThan(t1, t2);
    }
    static op_GreaterThanOrEqual(t1, t2) {
        return mscorlib.Api.DateTime._op_GreaterThanOrEqual(t1, t2);
    }
    GetTypeCode() {
        return mscorlib.Api.DateTime._GetTypeCode(this.handle);
    }
    System_IConvertible_ToBoolean(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToBoolean(this.handle, provider);
    }
    System_IConvertible_ToChar(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToChar(this.handle, provider);
    }
    System_IConvertible_ToSByte(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToSByte(this.handle, provider);
    }
    System_IConvertible_ToByte(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToByte(this.handle, provider);
    }
    System_IConvertible_ToInt16(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToInt16(this.handle, provider);
    }
    System_IConvertible_ToUInt16(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToUInt16(this.handle, provider);
    }
    System_IConvertible_ToInt32(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToInt32(this.handle, provider);
    }
    System_IConvertible_ToUInt32(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToUInt32(this.handle, provider);
    }
    System_IConvertible_ToInt64(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToInt64(this.handle, provider);
    }
    System_IConvertible_ToUInt64(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToUInt64(this.handle, provider);
    }
    System_IConvertible_ToSingle(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToSingle(this.handle, provider);
    }
    System_IConvertible_ToDouble(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToDouble(this.handle, provider);
    }
    System_IConvertible_ToDecimal(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToDecimal(this.handle, provider);
    }
    System_IConvertible_ToDateTime(provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToDateTime(this.handle, provider);
    }
    System_IConvertible_ToType(type, provider) {
        return mscorlib.Api.DateTime._System_IConvertible_ToType(this.handle, type, provider);
    }
    static TryCreate(year, month, day, hour, minute, second, millisecond, result) {
        return mscorlib.Api.DateTime._TryCreate(year, month, day, hour, minute, second, millisecond, result);
    }
    static _cctor() {
        return mscorlib.Api.DateTime.__cctor();
    }
}
exports.System_DateTime_Impl = System_DateTime_Impl;
mscorlib.DateTime = System_DateTime_Impl;
},{"../class":294}],241:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":239,"./class":240}],242:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class _EmitParams_API {
}
Il2Cpp.Api.EmitParams = _EmitParams_API;
},{}],243:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_ParticleSystem_EmitParams_Impl = void 0;
const class_1 = require("../../Object/Component/ParticleSystem/class");
const class_2 = require("../class");
class UnityEngine_ParticleSystem_EmitParams_Impl extends class_2.System_ValueType_Impl {
    m_Particle = new class_1.UnityEngine_ParticleSystem_Impl(lfv(this.handle, "m_Particle"));
    m_PositionSet = lfv(this.handle, "m_PositionSet");
    m_VelocitySet = lfv(this.handle, "m_VelocitySet");
    m_AxisOfRotationSet = lfv(this.handle, "m_AxisOfRotationSet");
    m_RotationSet = lfv(this.handle, "m_RotationSet");
    m_AngularVelocitySet = lfv(this.handle, "m_AngularVelocitySet");
    m_StartSizeSet = lfv(this.handle, "m_StartSizeSet");
    m_StartColorSet = lfv(this.handle, "m_StartColorSet");
    m_RandomSeedSet = lfv(this.handle, "m_RandomSeedSet");
    m_StartLifetimeSet = lfv(this.handle, "m_StartLifetimeSet");
    m_MeshIndexSet = lfv(this.handle, "m_MeshIndexSet");
    m_ApplyShapeToPosition = lfv(this.handle, "m_ApplyShapeToPosition");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
}
exports.UnityEngine_ParticleSystem_EmitParams_Impl = UnityEngine_ParticleSystem_EmitParams_Impl;
Il2Cpp.EmitParams = UnityEngine_ParticleSystem_EmitParams_Impl;
},{"../../Object/Component/ParticleSystem/class":132,"../class":294}],244:[function(require,module,exports){
"use strict";
},{}],245:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":242,"./class":243,"./export":244}],246:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_Int32_API {
    static get _CompareTo() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "CompareTo", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _CompareTo_value() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "CompareTo", 1, ["System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "Equals", 1, ["System.Object"], "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_obj() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "Equals", 1, ["System.Int32"], "pointer", ["pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "GetHashCode", 0, [], "pointer", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 0, [], "pointer", ["pointer"]);
    }
    static get _ToString_format() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 1, ["System.String"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToString_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToString_format_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Parse() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 1, ["System.String"], "pointer", ["pointer"]);
    }
    static get _Parse_s_style() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 2, ["System.String", "System.Globalization.NumberStyles"], "pointer", ["pointer", "pointer"]);
    }
    static get _Parse_s_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _Parse_s_style_provider() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "Parse", 3, ["System.String", "System.Globalization.NumberStyles", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _TryParse() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "TryParse", 2, ["System.String", "System.Int32&"], "pointer", ["pointer", "pointer"]);
    }
    static get _TryParse_s_style_provider_result() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "TryParse", 4, ["System.String", "System.Globalization.NumberStyles", "System.IFormatProvider", "System.Int32&"], "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _GetTypeCode() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "GetTypeCode", 0, [], "pointer", ["pointer"]);
    }
    static get _System_IConvertible_ToBoolean() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToBoolean", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToChar() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToChar", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToSByte() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToSByte", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToByte() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToByte", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt16() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToInt16", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt16() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToUInt16", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt32() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToInt32", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt32() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToUInt32", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToInt64() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToInt64", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToUInt64() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToUInt64", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToSingle() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToSingle", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDouble() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToDouble", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDecimal() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToDecimal", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToDateTime() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToDateTime", 1, ["System.IFormatProvider"], "pointer", ["pointer", "pointer"]);
    }
    static get _System_IConvertible_ToType() {
        return Il2Cpp.Api.o("mscorlib", "System.Int32", "System.IConvertible.ToType", 2, ["System.Type", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_CompareTo", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_CompareTo_value", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_Equals_obj", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_ToString_format", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_ToString_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_ToString_format_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_Parse", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_Parse_s_style", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_Parse_s_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_Parse_s_style_provider", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_TryParse", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_TryParse_s_style_provider_result", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_GetTypeCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToBoolean", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToChar", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToSByte", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToByte", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToInt16", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToUInt16", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToInt32", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToUInt32", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToInt64", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToUInt64", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToSingle", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToDouble", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToDecimal", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToDateTime", null);
__decorate([
    decorator_cache_getter_1.cache
], System_Int32_API, "_System_IConvertible_ToType", null);
mscorlib.Api.Int32 = System_Int32_API;
},{"decorator-cache-getter":338}],247:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_Int32_Impl = void 0;
const class_1 = require("../class");
class System_Int32_Impl extends class_1.System_ValueType_Impl {
    m_value = lfv(this.handle, "m_value").toInt32();
    MaxValue = lfv(this.handle, "MaxValue").toInt32();
    MinValue = lfv(this.handle, "MinValue").toInt32();
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    CompareTo(value) {
        return mscorlib.Api.Int32._CompareTo(this.handle, value.handle).toInt32();
    }
    CompareTo_1(value) {
        return mscorlib.Api.Int32._CompareTo(this.handle, value.handle).toInt32();
    }
    Equals(obj) {
        return !mscorlib.Api.Int32._Equals(this.handle, obj.handle).isNull();
    }
    Equals_1(obj) {
        return !mscorlib.Api.Int32._Equals(this.handle, obj).isNull();
    }
    GetHashCode() {
        return mscorlib.Api.Int32._GetHashCode(this.handle).toInt32();
    }
    ToString() {
        return readU16(mscorlib.Api.Int32._ToString(this.handle));
    }
    ToString_formart(format) {
        return readU16(mscorlib.Api.Int32._ToString(this.handle, allocUStr(format)));
    }
    ToString_provider(provider) {
        return readU16(mscorlib.Api.Int32._ToString(this.handle, provider));
    }
    ToString_2(format, provider) {
        return readU16(mscorlib.Api.Int32._ToString(this.handle, format, provider));
    }
    static Parse(s) {
        return mscorlib.Api.Int32._Parse(allocUStr(s));
    }
    static Parse_2(s, style) {
        return mscorlib.Api.Int32._Parse(s, style);
    }
    static Parse_s_p(s, provider) {
        return mscorlib.Api.Int32._Parse(s, provider);
    }
    static Parse_3(s, style, provider) {
        return mscorlib.Api.Int32._Parse(s, style, provider);
    }
    static TryParse(s, result) {
        return mscorlib.Api.Int32._TryParse(s, result.handle);
    }
    static TryParse_4(s, style, provider, result) {
        return mscorlib.Api.Int32._TryParse(s, style, provider, result);
    }
    GetTypeCode() {
        return mscorlib.Api.Int32._GetTypeCode(this.handle);
    }
    System_IConvertible_ToBoolean(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToBoolean(this.handle, provider);
    }
    System_IConvertible_ToChar(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToChar(this.handle, provider);
    }
    System_IConvertible_ToSByte(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToSByte(this.handle, provider);
    }
    System_IConvertible_ToByte(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToByte(this.handle, provider);
    }
    System_IConvertible_ToInt16(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToInt16(this.handle, provider);
    }
    System_IConvertible_ToUInt16(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToUInt16(this.handle, provider);
    }
    System_IConvertible_ToInt32(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToInt32(this.handle, provider);
    }
    System_IConvertible_ToUInt32(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToUInt32(this.handle, provider);
    }
    System_IConvertible_ToInt64(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToInt64(this.handle, provider);
    }
    System_IConvertible_ToUInt64(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToUInt64(this.handle, provider);
    }
    System_IConvertible_ToSingle(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToSingle(this.handle, provider);
    }
    System_IConvertible_ToDouble(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToDouble(this.handle, provider);
    }
    System_IConvertible_ToDecimal(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToDecimal(this.handle, provider);
    }
    System_IConvertible_ToDateTime(provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToDateTime(this.handle, provider);
    }
    System_IConvertible_ToType(type, provider) {
        return mscorlib.Api.Int32._System_IConvertible_ToType(this.handle, type, provider);
    }
}
exports.System_Int32_Impl = System_Int32_Impl;
mscorlib.Int32 = System_Int32_Impl;
},{"../class":294}],248:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":246,"./class":247}],249:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_SceneManagement_LoadSceneParameters_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.LoadSceneParameters", ".ctor", 1, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_LoadSceneParameters_API, "__ctor", null);
Il2Cpp.Api.LoadSceneParameters = UnityEngine_SceneManagement_LoadSceneParameters_API;
},{"decorator-cache-getter":338}],250:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_SceneManagement_LoadSceneParameters_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_SceneManagement_LoadSceneParameters_Impl extends class_1.System_ValueType_Impl {
    m_LoadSceneMode = lfv(this.handle, "m_LoadSceneMode");
    m_LocalPhysicsMode = lfv(this.handle, "m_LocalPhysicsMode");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    __ctor(mode) {
        return Il2Cpp.Api.LoadSceneParameters.__ctor(this.handle, mode);
    }
}
exports.UnityEngine_SceneManagement_LoadSceneParameters_Impl = UnityEngine_SceneManagement_LoadSceneParameters_Impl;
Il2Cpp.LoadSceneParameters = UnityEngine_SceneManagement_LoadSceneParameters_Impl;
},{"../class":294}],251:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode = void 0;
var UnityEngine_SceneManagement_LocalPhysicsMode;
(function (UnityEngine_SceneManagement_LocalPhysicsMode) {
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["None"] = 0] = "None";
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["Physics2D"] = 1] = "Physics2D";
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["Physics3D"] = 2] = "Physics3D";
})(UnityEngine_SceneManagement_LocalPhysicsMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode || (exports.UnityEngine_SceneManagement_LocalPhysicsMode = {}));
var UnityEngine_SceneManagement_LoadSceneMode;
(function (UnityEngine_SceneManagement_LoadSceneMode) {
    UnityEngine_SceneManagement_LoadSceneMode[UnityEngine_SceneManagement_LoadSceneMode["Single"] = 0] = "Single";
    UnityEngine_SceneManagement_LoadSceneMode[UnityEngine_SceneManagement_LoadSceneMode["Additive"] = 1] = "Additive";
})(UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LoadSceneMode || (exports.UnityEngine_SceneManagement_LoadSceneMode = {}));
},{}],252:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./enum");
},{"./api":249,"./class":250,"./enum":251}],253:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class _MainModule_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", ".ctor", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_startColor() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "get_startColor", 0, "pointer", ["pointer"]);
    }
    static get _set_startColor() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "set_startColor", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_startColor_Injected() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "get_startColor_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _set_startColor_Injected() {
        return Il2Cpp.Api.t("UnityEngine.ParticleSystemModule", "MainModule", "set_startColor_Injected", 2, "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], _MainModule_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], _MainModule_API, "_get_startColor", null);
__decorate([
    decorator_cache_getter_1.cache
], _MainModule_API, "_set_startColor", null);
__decorate([
    decorator_cache_getter_1.cache
], _MainModule_API, "_get_startColor_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], _MainModule_API, "_set_startColor_Injected", null);
Il2Cpp.Api.MainModule = _MainModule_API;
},{"decorator-cache-getter":338}],254:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_ParticleSystem_MainModule_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_ParticleSystem_MainModule_Impl extends class_1.System_ValueType_Impl {
    m_ParticleSystem = lfv(this.handle, "m_ParticleSystem");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    __ctor(particleSystem) {
        return Il2Cpp.Api.MainModule.__ctor(this.handle, particleSystem);
    }
    get_startColor() {
        return Il2Cpp.Api.MainModule._get_startColor(this.handle);
    }
    set_startColor(value) {
        return Il2Cpp.Api.MainModule._set_startColor(this.handle, value);
    }
    static get_startColor_Injected(_unity_self, ret) {
        return Il2Cpp.Api.MainModule._get_startColor_Injected(_unity_self, ret);
    }
    static set_startColor_Injected(_unity_self, value) {
        return Il2Cpp.Api.MainModule._set_startColor_Injected(_unity_self, value);
    }
}
exports.UnityEngine_ParticleSystem_MainModule_Impl = UnityEngine_ParticleSystem_MainModule_Impl;
Il2Cpp.MainModule = UnityEngine_ParticleSystem_MainModule_Impl;
},{"../class":294}],255:[function(require,module,exports){
"use strict";
},{}],256:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":253,"./class":254,"./export":255}],257:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Matrix4x4_API {
    static get _GetLossyScale() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetLossyScale", 0, "pointer", ["pointer"]);
    }
    static get _get_lossyScale() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_lossyScale", 0, "pointer", ["pointer"]);
    }
    static get _TRS() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "TRS", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SetTRS() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "SetTRS", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Inverse() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Inverse", 1, "pointer", ["pointer"]);
    }
    static get _get_inverse() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_inverse", 0, "pointer", ["pointer"]);
    }
    static get _Transpose() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Transpose", 1, "pointer", ["pointer"]);
    }
    static get _get_transpose() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_transpose", 0, "pointer", ["pointer"]);
    }
    static get _Perspective() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Perspective", 4, "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", ".ctor", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Equals", 1, ["UnityEngine.Matrix4x4"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "op_Multiply", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply_lhs_vector() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "op_Multiply", 2, ["UnityEngine.Matrix4x4", "UnityEngine.Vector4"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _GetColumn() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetColumn", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _MultiplyPoint() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "MultiplyPoint", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _MultiplyPoint3x4() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "MultiplyPoint3x4", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _MultiplyVector() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "MultiplyVector", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Translate() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Translate", 1, "pointer", ["pointer"]);
    }
    static get _Rotate() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Rotate", 1, "pointer", ["pointer"]);
    }
    static get _get_identity() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "get_identity", 0, "pointer", []);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", ".cctor", 0, "void", []);
    }
    static get _GetLossyScale_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "GetLossyScale_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _TRS_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "TRS_Injected", 4, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Inverse_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Inverse_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _Transpose_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Transpose_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _Perspective_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Matrix4x4", "Perspective_Injected", 5, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_GetLossyScale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_get_lossyScale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_TRS", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_SetTRS", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Inverse", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_get_inverse", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Transpose", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_get_transpose", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Perspective", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_op_Multiply", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_op_Multiply_lhs_vector", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_GetColumn", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_MultiplyPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_MultiplyPoint3x4", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_MultiplyVector", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Translate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Rotate", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_get_identity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_ToString_format_formatProvider", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_GetLossyScale_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_TRS_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Inverse_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Transpose_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Matrix4x4_API, "_Perspective_Injected", null);
Il2Cpp.Api.Matrix4x4 = UnityEngine_Matrix4x4_API;
},{"decorator-cache-getter":338}],258:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Matrix4x4_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Matrix4x4_Impl extends class_1.System_ValueType_Impl {
    m00 = lfv(this.handle, "m00");
    m10 = lfv(this.handle, "m10");
    m20 = lfv(this.handle, "m20");
    m30 = lfv(this.handle, "m30");
    m01 = lfv(this.handle, "m01");
    m11 = lfv(this.handle, "m11");
    m21 = lfv(this.handle, "m21");
    m31 = lfv(this.handle, "m31");
    m02 = lfv(this.handle, "m02");
    m12 = lfv(this.handle, "m12");
    m22 = lfv(this.handle, "m22");
    m32 = lfv(this.handle, "m32");
    m03 = lfv(this.handle, "m03");
    m13 = lfv(this.handle, "m13");
    m23 = lfv(this.handle, "m23");
    m33 = lfv(this.handle, "m33");
    zeroMatrix = lfv(this.handle, "zeroMatrix");
    identityMatrix = lfv(this.handle, "identityMatrix");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    GetLossyScale() {
        return Il2Cpp.Api.Matrix4x4._GetLossyScale(this.handle);
    }
    get_lossyScale() {
        return Il2Cpp.Api.Matrix4x4._get_lossyScale(this.handle);
    }
    static TRS(pos, q, s) {
        return Il2Cpp.Api.Matrix4x4._TRS(pos, q, s);
    }
    SetTRS(pos, q, s) {
        return Il2Cpp.Api.Matrix4x4._SetTRS(this.handle, pos, q, s);
    }
    static Inverse(m) {
        return Il2Cpp.Api.Matrix4x4._Inverse(m);
    }
    get_inverse() {
        return Il2Cpp.Api.Matrix4x4._get_inverse(this.handle);
    }
    static Transpose(m) {
        return Il2Cpp.Api.Matrix4x4._Transpose(m);
    }
    get_transpose() {
        return Il2Cpp.Api.Matrix4x4._get_transpose(this.handle);
    }
    static Perspective(fov, aspect, zNear, zFar) {
        return Il2Cpp.Api.Matrix4x4._Perspective(fov, aspect, zNear, zFar);
    }
    __ctor(column0, column1, column2, column3) {
        return Il2Cpp.Api.Matrix4x4.__ctor(this.handle, column0, column1, column2, column3);
    }
    GetHashCode() {
        return Il2Cpp.Api.Matrix4x4._GetHashCode(this.handle);
    }
    Equals(other) {
        return Il2Cpp.Api.Matrix4x4._Equals(this.handle, other);
    }
    Equals_1(other) {
        return Il2Cpp.Api.Matrix4x4._Equals(this.handle, other);
    }
    static op_Multiply(lhs, rhs) {
        return Il2Cpp.Api.Matrix4x4._op_Multiply(lhs, rhs);
    }
    static op_Multiply_2(lhs, vector) {
        return Il2Cpp.Api.Matrix4x4._op_Multiply(lhs, vector);
    }
    static op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Matrix4x4._op_Equality(lhs, rhs);
    }
    GetColumn(index) {
        return Il2Cpp.Api.Matrix4x4._GetColumn(this.handle, index);
    }
    MultiplyPoint(point) {
        return Il2Cpp.Api.Matrix4x4._MultiplyPoint(this.handle, point);
    }
    MultiplyPoint3x4(point) {
        return Il2Cpp.Api.Matrix4x4._MultiplyPoint3x4(this.handle, point);
    }
    MultiplyVector(vector) {
        return Il2Cpp.Api.Matrix4x4._MultiplyVector(this.handle, vector);
    }
    static Translate(vector) {
        return Il2Cpp.Api.Matrix4x4._Translate(vector);
    }
    static Rotate(q) {
        return Il2Cpp.Api.Matrix4x4._Rotate(q);
    }
    static get_identity() {
        return Il2Cpp.Api.Matrix4x4._get_identity();
    }
    ToString() {
        return readU16(Il2Cpp.Api.Matrix4x4._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Matrix4x4._ToString(this.handle, format, formatProvider));
    }
    static _cctor() {
        return Il2Cpp.Api.Matrix4x4.__cctor();
    }
    static GetLossyScale_Injected(_unity_self, ret) {
        return Il2Cpp.Api.Matrix4x4._GetLossyScale_Injected(_unity_self, ret);
    }
    static TRS_Injected(pos, q, s, ret) {
        return Il2Cpp.Api.Matrix4x4._TRS_Injected(pos, q, s, ret);
    }
    static Inverse_Injected(m, ret) {
        return Il2Cpp.Api.Matrix4x4._Inverse_Injected(m, ret);
    }
    static Transpose_Injected(m, ret) {
        return Il2Cpp.Api.Matrix4x4._Transpose_Injected(m, ret);
    }
    static Perspective_Injected(fov, aspect, zNear, zFar, ret) {
        return Il2Cpp.Api.Matrix4x4._Perspective_Injected(fov, aspect, zNear, zFar, ret);
    }
}
exports.UnityEngine_Matrix4x4_Impl = UnityEngine_Matrix4x4_Impl;
Il2Cpp.Matrix4x4 = UnityEngine_Matrix4x4_Impl;
},{"../class":294}],259:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode = void 0;
var UnityEngine_SceneManagement_LocalPhysicsMode;
(function (UnityEngine_SceneManagement_LocalPhysicsMode) {
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["None"] = 0] = "None";
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["Physics2D"] = 1] = "Physics2D";
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["Physics3D"] = 2] = "Physics3D";
})(UnityEngine_SceneManagement_LocalPhysicsMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode || (exports.UnityEngine_SceneManagement_LocalPhysicsMode = {}));
var UnityEngine_SceneManagement_LoadSceneMode;
(function (UnityEngine_SceneManagement_LoadSceneMode) {
    UnityEngine_SceneManagement_LoadSceneMode[UnityEngine_SceneManagement_LoadSceneMode["Single"] = 0] = "Single";
    UnityEngine_SceneManagement_LoadSceneMode[UnityEngine_SceneManagement_LoadSceneMode["Additive"] = 1] = "Additive";
})(UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LoadSceneMode || (exports.UnityEngine_SceneManagement_LoadSceneMode = {}));
},{}],260:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./enum");
},{"./api":257,"./class":258,"./enum":259}],261:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Quaternion_API {
    static get _FromToRotation() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "FromToRotation", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Inverse() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Inverse", 1, "pointer", ["pointer"]);
    }
    static get _Slerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Slerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SlerpUnclamped() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "SlerpUnclamped", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Lerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Lerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Internal_FromEulerRad() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_FromEulerRad", 1, "pointer", ["pointer"]);
    }
    static get _Internal_ToEulerRad() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_ToEulerRad", 1, "pointer", ["pointer"]);
    }
    static get _AngleAxis() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "AngleAxis", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _LookRotation() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "LookRotation", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _LookRotation_forward() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "LookRotation", 1, ["UnityEngine.Vector3"], "pointer", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", ".ctor", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _get_identity() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "get_identity", 0, "pointer", []);
    }
    static get _op_Multiply() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Multiply", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply_rotation_point() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Multiply", 2, ["UnityEngine.Quaternion", "UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _IsEqualUsingDot() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "IsEqualUsingDot", 1, "pointer", ["pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "op_Inequality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Dot() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Dot", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Angle() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Angle", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Internal_MakePositive() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_MakePositive", 1, "pointer", ["pointer"]);
    }
    static get _get_eulerAngles() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "get_eulerAngles", 0, "pointer", ["pointer"]);
    }
    static get _Euler() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Euler", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Euler_euler() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Euler", 1, ["UnityEngine.Vector3"], "pointer", ["pointer"]);
    }
    static get _Normalize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Normalize", 1, "pointer", ["pointer"]);
    }
    static get _get_normalized() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "get_normalized", 0, "pointer", ["pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Equals", 1, ["UnityEngine.Quaternion"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Quaternion", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", ".cctor", 0, "void", []);
    }
    static get _FromToRotation_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "FromToRotation_Injected", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Inverse_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Inverse_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _Slerp_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Slerp_Injected", 4, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SlerpUnclamped_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "SlerpUnclamped_Injected", 4, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Lerp_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Lerp_Injected", 4, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Internal_FromEulerRad_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_FromEulerRad_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _Internal_ToEulerRad_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "Internal_ToEulerRad_Injected", 2, "void", ["pointer", "pointer"]);
    }
    static get _AngleAxis_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "AngleAxis_Injected", 3, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _LookRotation_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Quaternion", "LookRotation_Injected", 3, "void", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_FromToRotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Inverse", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Slerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_SlerpUnclamped", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Lerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Internal_FromEulerRad", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Internal_ToEulerRad", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_AngleAxis", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_LookRotation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_LookRotation_forward", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_get_identity", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_op_Multiply", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_op_Multiply_rotation_point", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_IsEqualUsingDot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Dot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Angle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Internal_MakePositive", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_get_eulerAngles", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Euler", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Euler_euler", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Normalize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_get_normalized", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_ToString_format_formatProvider", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_FromToRotation_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Inverse_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Slerp_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_SlerpUnclamped_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Lerp_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Internal_FromEulerRad_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_Internal_ToEulerRad_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_AngleAxis_Injected", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Quaternion_API, "_LookRotation_Injected", null);
Il2Cpp.Api.Quaternion = UnityEngine_Quaternion_API;
},{"decorator-cache-getter":338}],262:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Quaternion_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Quaternion_Impl extends class_1.System_ValueType_Impl {
    x = lfv(this.handle, "x");
    y = lfv(this.handle, "y");
    z = lfv(this.handle, "z");
    w = lfv(this.handle, "w");
    identityQuaternion = lfv(this.handle, "identityQuaternion");
    kEpsilon = lfv(this.handle, "kEpsilon");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    FromToRotation(fromDirection, toDirection) {
        return Il2Cpp.Api.Quaternion._FromToRotation(fromDirection, toDirection);
    }
    Inverse(rotation) {
        return Il2Cpp.Api.Quaternion._Inverse(rotation);
    }
    Slerp(a, b, t) {
        return Il2Cpp.Api.Quaternion._Slerp(a, b, t);
    }
    SlerpUnclamped(a, b, t) {
        return Il2Cpp.Api.Quaternion._SlerpUnclamped(a, b, t);
    }
    Lerp(a, b, t) {
        return Il2Cpp.Api.Quaternion._Lerp(a, b, t);
    }
    Internal_FromEulerRad(euler) {
        return Il2Cpp.Api.Quaternion._Internal_FromEulerRad(euler);
    }
    Internal_ToEulerRad(rotation) {
        return Il2Cpp.Api.Quaternion._Internal_ToEulerRad(rotation);
    }
    AngleAxis(angle, axis) {
        return Il2Cpp.Api.Quaternion._AngleAxis(angle, axis);
    }
    LookRotation_2(forward, upwards) {
        return Il2Cpp.Api.Quaternion._LookRotation(forward, upwards);
    }
    LookRotation_1(forward) {
        return Il2Cpp.Api.Quaternion._LookRotation(forward);
    }
    _ctor_4(x, y, z, w) {
        return Il2Cpp.Api.Quaternion.__ctor(this.handle, x, y, z, w);
    }
    get_identity() {
        return Il2Cpp.Api.Quaternion._get_identity();
    }
    op_Multiply(lhs, rhs) {
        return Il2Cpp.Api.Quaternion._op_Multiply(lhs, rhs);
    }
    op_Multiply_rotation_point(rotation, point) {
        return Il2Cpp.Api.Quaternion._op_Multiply(rotation, point);
    }
    IsEqualUsingDot(dot) {
        return Il2Cpp.Api.Quaternion._IsEqualUsingDot(dot);
    }
    op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Quaternion._op_Equality(lhs, rhs);
    }
    op_Inequality(lhs, rhs) {
        return Il2Cpp.Api.Quaternion._op_Inequality(lhs, rhs);
    }
    Dot(a, b) {
        return Il2Cpp.Api.Quaternion._Dot(a, b);
    }
    Angle(a, b) {
        return Il2Cpp.Api.Quaternion._Angle(a, b);
    }
    Internal_MakePositive(euler) {
        return Il2Cpp.Api.Quaternion._Internal_MakePositive(euler);
    }
    get_eulerAngles() {
        return Il2Cpp.Api.Quaternion._get_eulerAngles(this.handle);
    }
    Euler_3(x, y, z) {
        return Il2Cpp.Api.Quaternion._Euler(x, y, z);
    }
    Euler_1(euler) {
        return Il2Cpp.Api.Quaternion._Euler(euler);
    }
    Normalize(q) {
        return Il2Cpp.Api.Quaternion._Normalize(q);
    }
    get_normalized() {
        return Il2Cpp.Api.Quaternion._get_normalized(this.handle);
    }
    GetHashCode() {
        return Il2Cpp.Api.Quaternion._GetHashCode(this.handle);
    }
    Equals_System_Object(other) {
        return Il2Cpp.Api.Quaternion._Equals(this.handle, other);
    }
    Equals_Quaternion(other) {
        return Il2Cpp.Api.Quaternion._Equals(this.handle, other);
    }
    ToString() {
        return readU16(Il2Cpp.Api.Quaternion._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Quaternion._ToString(this.handle, format, formatProvider));
    }
    _cctor() {
        return Il2Cpp.Api.Quaternion.__cctor();
    }
    FromToRotation_Injected(fromDirection, toDirection, ret) {
        return Il2Cpp.Api.Quaternion._FromToRotation_Injected(fromDirection, toDirection, ret);
    }
    Inverse_Injected(rotation, ret) {
        return Il2Cpp.Api.Quaternion._Inverse_Injected(rotation, ret);
    }
    Slerp_Injected(a, b, t, ret) {
        return Il2Cpp.Api.Quaternion._Slerp_Injected(a, b, t, ret);
    }
    SlerpUnclamped_Injected(a, b, t, ret) {
        return Il2Cpp.Api.Quaternion._SlerpUnclamped_Injected(a, b, t, ret);
    }
    Lerp_Injected(a, b, t, ret) {
        return Il2Cpp.Api.Quaternion._Lerp_Injected(a, b, t, ret);
    }
    Internal_FromEulerRad_Injected(euler, ret) {
        return Il2Cpp.Api.Quaternion._Internal_FromEulerRad_Injected(euler, ret);
    }
    Internal_ToEulerRad_Injected(rotation, ret) {
        return Il2Cpp.Api.Quaternion._Internal_ToEulerRad_Injected(rotation, ret);
    }
    AngleAxis_Injected(angle, axis, ret) {
        return Il2Cpp.Api.Quaternion._AngleAxis_Injected(angle, axis, ret);
    }
    LookRotation_Injected(forward, upwards, ret) {
        return Il2Cpp.Api.Quaternion._LookRotation_Injected(forward, upwards, ret);
    }
}
exports.UnityEngine_Quaternion_Impl = UnityEngine_Quaternion_Impl;
Il2Cpp.Quaternion = UnityEngine_Quaternion_Impl;
},{"../class":294}],263:[function(require,module,exports){
"use strict";
},{}],264:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":261,"./class":262,"./export":263}],265:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Ray_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", ".ctor", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _get_origin() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "get_origin", 0, "pointer", ["pointer"]);
    }
    static get _set_origin() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "set_origin", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_direction() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "get_direction", 0, "pointer", ["pointer"]);
    }
    static get _set_direction() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "set_direction", 1, "void", ["pointer", "pointer"]);
    }
    static get _GetPoint() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "GetPoint", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Ray", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Ray", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_get_origin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_set_origin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_get_direction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_set_direction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_GetPoint", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Ray_API, "_ToString_format_formatProvider", null);
Il2Cpp.Api.Ray = UnityEngine_Ray_API;
},{"decorator-cache-getter":338}],266:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Ray_Impl = void 0;
const class_1 = require("../class");
const class_2 = require("../Vector3/class");
class UnityEngine_Ray_Impl extends class_1.System_ValueType_Impl {
    m_Origin = lfv(this.handle, "m_Origin");
    m_Direction = lfv(this.handle, "m_Direction");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    __ctor(origin, direction) {
        return Il2Cpp.Api.Ray.__ctor(this.handle, origin.handle, direction.handle);
    }
    get_origin() {
        return new class_2.UnityEngine_Vector3_Impl(Il2Cpp.Api.Ray._get_origin(this.handle));
    }
    set_origin(value) {
        return Il2Cpp.Api.Ray._set_origin(this.handle, value.handle);
    }
    get_direction() {
        return new class_2.UnityEngine_Vector3_Impl(Il2Cpp.Api.Ray._get_direction(this.handle));
    }
    set_direction(value) {
        return Il2Cpp.Api.Ray._set_direction(this.handle, value);
    }
    GetPoint(distance) {
        return new class_2.UnityEngine_Vector3_Impl(Il2Cpp.Api.Ray._GetPoint(this.handle, distance));
    }
    ToString() {
        return readU16(Il2Cpp.Api.Ray._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Ray._ToString(this.handle, format, formatProvider));
    }
}
exports.UnityEngine_Ray_Impl = UnityEngine_Ray_Impl;
Il2Cpp.Ray = UnityEngine_Ray_Impl;
},{"../Vector3/class":286,"../class":294}],267:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":265,"./class":266}],268:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Rect_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", ".ctor", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_position_size() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", ".ctor", 2, ["UnityEngine.Vector2", "UnityEngine.Vector2"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get __ctor_source() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", ".ctor", 1, ["UnityEngine.Rect"], "void", ["pointer", "pointer"]);
    }
    static get _get_zero() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_zero", 0, "pointer", []);
    }
    static get _get_x() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_x", 0, "pointer", ["pointer"]);
    }
    static get _set_x() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_x", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_y() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_y", 0, "pointer", ["pointer"]);
    }
    static get _set_y() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_y", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_position() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_position", 0, "pointer", ["pointer"]);
    }
    static get _set_position() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_position", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_center() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_center", 0, "pointer", ["pointer"]);
    }
    static get _get_min() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_min", 0, "pointer", ["pointer"]);
    }
    static get _get_max() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_max", 0, "pointer", ["pointer"]);
    }
    static get _get_width() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_width", 0, "pointer", ["pointer"]);
    }
    static get _set_width() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_width", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_height() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_height", 0, "pointer", ["pointer"]);
    }
    static get _set_height() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_height", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_size() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_size", 0, "pointer", ["pointer"]);
    }
    static get _get_xMin() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_xMin", 0, "pointer", ["pointer"]);
    }
    static get _set_xMin() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_xMin", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_yMin() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_yMin", 0, "pointer", ["pointer"]);
    }
    static get _set_yMin() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_yMin", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_xMax() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_xMax", 0, "pointer", ["pointer"]);
    }
    static get _set_xMax() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_xMax", 1, "void", ["pointer", "pointer"]);
    }
    static get _get_yMax() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "get_yMax", 0, "pointer", ["pointer"]);
    }
    static get _set_yMax() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "set_yMax", 1, "void", ["pointer", "pointer"]);
    }
    static get _Contains() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "Contains", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Contains_point() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "Contains", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _OrderMinMax() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "OrderMinMax", 1, "pointer", ["pointer"]);
    }
    static get _Overlaps() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "Overlaps", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Overlaps_other_allowInverse() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "Overlaps", 2, ["UnityEngine.Rect", "System.Boolean"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "op_Inequality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "Equals", 1, ["UnityEngine.Rect"], "pointer", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Rect", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Rect", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "__ctor_position_size", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "__ctor_source", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_zero", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_x", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_x", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_y", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_y", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_center", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_min", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_max", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_width", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_width", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_height", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_height", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_size", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_xMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_xMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_yMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_yMin", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_xMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_xMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_get_yMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_set_yMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_Contains", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_Contains_point", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_OrderMinMax", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_Overlaps", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_Overlaps_other_allowInverse", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Rect_API, "_ToString_format_formatProvider", null);
Il2Cpp.Api.Rect = UnityEngine_Rect_API;
},{"decorator-cache-getter":338}],269:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Rect_Impl = void 0;
const class_1 = require("../class");
const class_2 = require("../Vector2/class");
class UnityEngine_Rect_Impl extends class_1.System_ValueType_Impl {
    m_XMin = lfv(this.handle, "m_XMin");
    m_YMin = lfv(this.handle, "m_YMin");
    m_Width = lfv(this.handle, "m_Width");
    m_Height = lfv(this.handle, "m_Height");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    __ctor(x, y, width, height) {
        return Il2Cpp.Api.Rect.__ctor(this.handle, x, y, width, height);
    }
    _ctor_2(position, size) {
        return Il2Cpp.Api.Rect.__ctor(this.handle, position, size);
    }
    _ctor_1(source) {
        return Il2Cpp.Api.Rect.__ctor(this.handle, source);
    }
    static get_zero() {
        return new UnityEngine_Rect_Impl(Il2Cpp.Api.Rect._get_zero());
    }
    get_x() {
        return Il2Cpp.Api.Rect._get_x(this.handle);
    }
    set_x(value) {
        return Il2Cpp.Api.Rect._set_x(this.handle, value);
    }
    get_y() {
        return Il2Cpp.Api.Rect._get_y(this.handle);
    }
    set_y(value) {
        return Il2Cpp.Api.Rect._set_y(this.handle, value);
    }
    get_position() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_position(this.handle));
    }
    set_position(value) {
        return Il2Cpp.Api.Rect._set_position(this.handle, value.handle);
    }
    get_center() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_center(this.handle));
    }
    get_min() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_min(this.handle));
    }
    get_max() {
        return Il2Cpp.Api.Rect._get_max(this.handle);
    }
    get_width() {
        return Il2Cpp.Api.Rect._get_width(this.handle);
    }
    set_width(value) {
        return Il2Cpp.Api.Rect._set_width(this.handle, value);
    }
    get_height() {
        return Il2Cpp.Api.Rect._get_height(this.handle);
    }
    set_height(value) {
        return Il2Cpp.Api.Rect._set_height(this.handle, value);
    }
    get_size() {
        return new class_2.UnityEngine_Vector2_Impl(Il2Cpp.Api.Rect._get_size(this.handle));
    }
    get_xMin() {
        return Il2Cpp.Api.Rect._get_xMin(this.handle);
    }
    set_xMin(value) {
        return Il2Cpp.Api.Rect._set_xMin(this.handle, value);
    }
    get_yMin() {
        return Il2Cpp.Api.Rect._get_yMin(this.handle);
    }
    set_yMin(value) {
        return Il2Cpp.Api.Rect._set_yMin(this.handle, value);
    }
    get_xMax() {
        return Il2Cpp.Api.Rect._get_xMax(this.handle);
    }
    set_xMax(value) {
        return Il2Cpp.Api.Rect._set_xMax(this.handle, value);
    }
    get_yMax() {
        return Il2Cpp.Api.Rect._get_yMax(this.handle);
    }
    set_yMax(value) {
        return Il2Cpp.Api.Rect._set_yMax(this.handle, value);
    }
    Contains(point) {
        return Il2Cpp.Api.Rect._Contains(this.handle, point.handle);
    }
    Contains_1(point) {
        return Il2Cpp.Api.Rect._Contains(this.handle, point.handle);
    }
    static OrderMinMax(rect) {
        return new UnityEngine_Rect_Impl(Il2Cpp.Api.Rect._OrderMinMax(rect.handle));
    }
    Overlaps(other) {
        return Il2Cpp.Api.Rect._Overlaps(this.handle, other.handle);
    }
    Overlaps_2(other, allowInverse) {
        return Il2Cpp.Api.Rect._Overlaps(this.handle, other.handle, allowInverse);
    }
    static op_Inequality(lhs, rhs) {
        return Il2Cpp.Api.Rect._op_Inequality(lhs.handle, rhs.handle);
    }
    static op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Rect._op_Equality(lhs.handle, rhs.handle);
    }
    GetHashCode() {
        return Il2Cpp.Api.Rect._GetHashCode(this.handle);
    }
    Equals(other) {
        return Il2Cpp.Api.Rect._Equals(this.handle, other.handle);
    }
    Equals_1(other) {
        return Il2Cpp.Api.Rect._Equals(this.handle, other.handle);
    }
    ToString() {
        return readU16(Il2Cpp.Api.Rect._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Rect._ToString(this.handle, format, formatProvider));
    }
}
exports.UnityEngine_Rect_Impl = UnityEngine_Rect_Impl;
Il2Cpp.Rect = UnityEngine_Rect_Impl;
},{"../Vector2/class":282,"../class":294}],270:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode = void 0;
var UnityEngine_SceneManagement_LocalPhysicsMode;
(function (UnityEngine_SceneManagement_LocalPhysicsMode) {
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["None"] = 0] = "None";
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["Physics2D"] = 1] = "Physics2D";
    UnityEngine_SceneManagement_LocalPhysicsMode[UnityEngine_SceneManagement_LocalPhysicsMode["Physics3D"] = 2] = "Physics3D";
})(UnityEngine_SceneManagement_LocalPhysicsMode = exports.UnityEngine_SceneManagement_LocalPhysicsMode || (exports.UnityEngine_SceneManagement_LocalPhysicsMode = {}));
var UnityEngine_SceneManagement_LoadSceneMode;
(function (UnityEngine_SceneManagement_LoadSceneMode) {
    UnityEngine_SceneManagement_LoadSceneMode[UnityEngine_SceneManagement_LoadSceneMode["Single"] = 0] = "Single";
    UnityEngine_SceneManagement_LoadSceneMode[UnityEngine_SceneManagement_LoadSceneMode["Additive"] = 1] = "Additive";
})(UnityEngine_SceneManagement_LoadSceneMode = exports.UnityEngine_SceneManagement_LoadSceneMode || (exports.UnityEngine_SceneManagement_LoadSceneMode = {}));
},{}],271:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./enum");
},{"./api":268,"./class":269,"./enum":270}],272:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_SceneManagement_Scene_API {
    static get _GetPathInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetPathInternal", 1, "pointer", ["int32"]);
    }
    static get _GetNameInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetNameInternal", 1, "pointer", ["int32"]);
    }
    static get _GetBuildIndexInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetBuildIndexInternal", 1, "pointer", ["int32"]);
    }
    static get _get_handle() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_handle", 0, "pointer", ["pointer"]);
    }
    static get _get_path() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_path", 0, "pointer", ["pointer"]);
    }
    static get _get_name() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_name", 0, "pointer", ["pointer"]);
    }
    static get _get_buildIndex() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_buildIndex", 0, "pointer", ["pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _IsValidInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "IsValidInternal", 1, "pointer", ["pointer"]);
    }
    static get _GetIsLoadedInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetIsLoadedInternal", 1, "pointer", ["pointer"]);
    }
    static get _GetRootCountInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootCountInternal", 1, "pointer", ["pointer"]);
    }
    static get _GetRootGameObjectsInternal() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootGameObjectsInternal", 2, "void", ["pointer", "pointer"]);
    }
    static get _IsValid() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "IsValid", 0, "pointer", ["pointer"]);
    }
    static get _get_isLoaded() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_isLoaded", 0, "pointer", ["pointer"]);
    }
    static get _get_rootCount() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "get_rootCount", 0, "pointer", ["pointer"]);
    }
    static get _GetRootGameObjects() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootGameObjects", 0, "pointer", ["pointer"]);
    }
    static get _GetRootGameObjects_rootGameObjects() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.SceneManagement.Scene", "GetRootGameObjects", 1, ["System.Collections.Generic.List<UnityEngine.GameObject>"], "void", ["pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetPathInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetNameInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetBuildIndexInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_get_handle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_get_path", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_get_name", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_get_buildIndex", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_IsValidInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetIsLoadedInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetRootCountInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetRootGameObjectsInternal", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_IsValid", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_get_isLoaded", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_get_rootCount", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetRootGameObjects", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_SceneManagement_Scene_API, "_GetRootGameObjects_rootGameObjects", null);
Il2Cpp.Api.Scene = UnityEngine_SceneManagement_Scene_API;
},{"decorator-cache-getter":338}],273:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_SceneManagement_Scene_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_SceneManagement_Scene_Impl extends class_1.System_ValueType_Impl {
    m_Handle;
    constructor(handleOrWrapper) {
        let tmpPtr = alloc(0x8);
        super(tmpPtr);
        this.m_Handle = Number(handleOrWrapper);
    }
    static GetPathInternal(sceneHandle) {
        return readU16(Il2Cpp.Api.Scene._GetPathInternal(sceneHandle));
    }
    static GetNameInternal(sceneHandle) {
        return readU16(Il2Cpp.Api.Scene._GetNameInternal(sceneHandle));
    }
    static GetBuildIndexInternal(sceneHandle) {
        return Il2Cpp.Api.Scene._GetBuildIndexInternal(sceneHandle);
    }
    get_handle() {
        return this.m_Handle;
    }
    get_path() {
        try {
            return UnityEngine_SceneManagement_Scene_Impl.GetPathInternal(this.m_Handle);
        }
        catch {
            return "";
        }
    }
    get_name() {
        try {
            return UnityEngine_SceneManagement_Scene_Impl.GetNameInternal(this.m_Handle);
        }
        catch {
            return "";
        }
    }
    get_buildIndex() {
        try {
            return UnityEngine_SceneManagement_Scene_Impl.GetBuildIndexInternal(this.m_Handle);
        }
        catch {
            return -1;
        }
    }
    GetHashCode() {
        return Il2Cpp.Api.Scene._GetHashCode(this.handle);
    }
    Equals(other) {
        return Il2Cpp.Api.Scene._Equals(this.handle, other);
    }
    toString() {
        let name = `Scene:\t${this.get_name()}`;
        let buildIndex = `(buildIndex: ${this.get_buildIndex()}) `;
        let path = `Path:\t${this.get_path()}`;
        let handle = `Handle:\t${ptr(this.get_handle())}`;
        return `\n${name} ( ${buildIndex} )\n${path}\n${handle}\n`;
    }
    static IsValidInternal(sceneHandle) {
        return Il2Cpp.Api.Scene._IsValidInternal(sceneHandle);
    }
    static GetIsLoadedInternal(sceneHandle) {
        return Il2Cpp.Api.Scene._GetIsLoadedInternal(sceneHandle);
    }
    static GetRootCountInternal(sceneHandle) {
        return Il2Cpp.Api.Scene._GetRootCountInternal(sceneHandle);
    }
    static GetRootGameObjectsInternal(sceneHandle, resultRootList) {
        return Il2Cpp.Api.Scene._GetRootGameObjectsInternal(sceneHandle, resultRootList);
    }
    IsValid() {
        return Il2Cpp.Api.Scene._IsValid(this.handle);
    }
    get_isLoaded() {
        return Il2Cpp.Api.Scene._get_isLoaded(this.handle);
    }
    get_rootCount() {
        return Il2Cpp.Api.Scene._get_rootCount(this.handle);
    }
    GetRootGameObjects() {
        return Il2Cpp.Api.Scene._GetRootGameObjects(this.handle);
    }
    GetRootGameObjects_1(rootGameObjects) {
        return Il2Cpp.Api.Scene._GetRootGameObjects(this.handle, rootGameObjects);
    }
}
exports.UnityEngine_SceneManagement_Scene_Impl = UnityEngine_SceneManagement_Scene_Impl;
Il2Cpp.Scene = UnityEngine_SceneManagement_Scene_Impl;
},{"../class":294}],274:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const currentScene = () => LOGD(Il2Cpp.SceneManager.GetActiveScene.toString());
globalThis.currentScene = currentScene;
},{}],275:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":272,"./class":273,"./export":274}],276:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Touch_API {
    static get _get_fingerId() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_fingerId", 0, "pointer", ["pointer"]);
    }
    static get _get_position() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_position", 0, "pointer", ["pointer"]);
    }
    static get _get_deltaPosition() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_deltaPosition", 0, "pointer", ["pointer"]);
    }
    static get _get_phase() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_phase", 0, "pointer", ["pointer"]);
    }
    static get _get_type() {
        return Il2Cpp.Api.t("UnityEngine.InputLegacyModule", "UnityEngine.Touch", "get_type", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Touch_API, "_get_fingerId", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Touch_API, "_get_position", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Touch_API, "_get_deltaPosition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Touch_API, "_get_phase", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Touch_API, "_get_type", null);
Il2Cpp.Api.Touch = UnityEngine_Touch_API;
},{"decorator-cache-getter":338}],277:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Touch_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Touch_Impl extends class_1.System_ValueType_Impl {
    m_FingerId = lfv(this.handle, "m_FingerId");
    m_Position = lfv(this.handle, "m_Position");
    m_RawPosition = lfv(this.handle, "m_RawPosition");
    m_PositionDelta = lfv(this.handle, "m_PositionDelta");
    m_TimeDelta = lfv(this.handle, "m_TimeDelta");
    m_TapCount = lfv(this.handle, "m_TapCount");
    m_Phase = lfv(this.handle, "m_Phase");
    m_Type = lfv(this.handle, "m_Type");
    m_Pressure = lfv(this.handle, "m_Pressure");
    m_maximumPossiblePressure = lfv(this.handle, "m_maximumPossiblePressure");
    m_Radius = lfv(this.handle, "m_Radius");
    m_RadiusVariance = lfv(this.handle, "m_RadiusVariance");
    m_AltitudeAngle = lfv(this.handle, "m_AltitudeAngle");
    m_AzimuthAngle = lfv(this.handle, "m_AzimuthAngle");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_fingerId() {
        return Il2Cpp.Api.Touch._get_fingerId(this.handle);
    }
    get_position() {
        return Il2Cpp.Api.Touch._get_position(this.handle);
    }
    get_deltaPosition() {
        return Il2Cpp.Api.Touch._get_deltaPosition(this.handle);
    }
    get_phase() {
        return Il2Cpp.Api.Touch._get_phase(this.handle);
    }
    get_type() {
        return Il2Cpp.Api.Touch._get_type(this.handle);
    }
}
exports.UnityEngine_Touch_Impl = UnityEngine_Touch_Impl;
Il2Cpp.Touch = UnityEngine_Touch_Impl;
},{"../class":294}],278:[function(require,module,exports){
"use strict";
var UnityEngine_TouchType;
(function (UnityEngine_TouchType) {
    UnityEngine_TouchType[UnityEngine_TouchType["Direct"] = 0] = "Direct";
    UnityEngine_TouchType[UnityEngine_TouchType["Indirect"] = 1] = "Indirect";
    UnityEngine_TouchType[UnityEngine_TouchType["Stylus"] = 2] = "Stylus";
})(UnityEngine_TouchType || (UnityEngine_TouchType = {}));
var UnityEngine_TouchPhase;
(function (UnityEngine_TouchPhase) {
    UnityEngine_TouchPhase[UnityEngine_TouchPhase["Began"] = 0] = "Began";
    UnityEngine_TouchPhase[UnityEngine_TouchPhase["Canceled"] = 4] = "Canceled";
    UnityEngine_TouchPhase[UnityEngine_TouchPhase["Ended"] = 3] = "Ended";
    UnityEngine_TouchPhase[UnityEngine_TouchPhase["Moved"] = 1] = "Moved";
    UnityEngine_TouchPhase[UnityEngine_TouchPhase["Stationary"] = 2] = "Stationary";
})(UnityEngine_TouchPhase || (UnityEngine_TouchPhase = {}));
},{}],279:[function(require,module,exports){
"use strict";
},{}],280:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
require("./enum");
},{"./api":276,"./class":277,"./enum":278,"./export":279}],281:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Vector2_API {
    static get _get_Item() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_Item", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _set_Item() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "set_Item", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", ".ctor", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Lerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Lerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Scale() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Scale", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Normalize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Normalize", 0, "void", ["pointer"]);
    }
    static get _get_normalized() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_normalized", 0, "pointer", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "Equals", 1, ["UnityEngine.Vector2"], "pointer", ["pointer", "pointer"]);
    }
    static get _Dot() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Dot", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _get_magnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_magnitude", 0, "pointer", ["pointer"]);
    }
    static get _get_sqrMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_sqrMagnitude", 0, "pointer", ["pointer"]);
    }
    static get _Angle() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Angle", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Distance() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Distance", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _ClampMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "ClampMagnitude", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _SqrMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "SqrMagnitude", 1, "pointer", ["pointer"]);
    }
    static get _Min() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Min", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Max() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "Max", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Addition() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Addition", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Subtraction() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Subtraction", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Multiply", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Division() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Division", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_UnaryNegation() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_UnaryNegation", 1, "pointer", ["pointer"]);
    }
    static get _op_Multiply_a_d() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Multiply", 2, ["UnityEngine.Vector2", "System.Single"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Division_a_d() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Division", 2, ["UnityEngine.Vector2", "System.Single"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Inequality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Implicit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Implicit", 1, "pointer", ["pointer"]);
    }
    static get _op_Implicit_v() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector2", "op_Implicit", 1, ["UnityEngine.Vector2"], "pointer", ["pointer"]);
    }
    static get _get_zero() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_zero", 0, "pointer", []);
    }
    static get _get_one() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_one", 0, "pointer", []);
    }
    static get _get_up() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_up", 0, "pointer", []);
    }
    static get _get_right() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", "get_right", 0, "pointer", []);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector2", ".cctor", 0, "void", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_Item", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_set_Item", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Lerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Scale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Normalize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_normalized", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_ToString_format_formatProvider", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Dot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_magnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_sqrMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Angle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Distance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_ClampMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_SqrMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Min", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_Max", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Addition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Subtraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Multiply", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Division", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_UnaryNegation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Multiply_a_d", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Division_a_d", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Implicit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_op_Implicit_v", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_zero", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_one", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_up", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "_get_right", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector2_API, "__cctor", null);
Il2Cpp.Api.Vector2 = UnityEngine_Vector2_API;
},{"decorator-cache-getter":338}],282:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Vector2_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Vector2_Impl extends class_1.System_ValueType_Impl {
    x = lfv(this.handle, "x");
    y = lfv(this.handle, "y");
    zeroVector = lfv(this.handle, "zeroVector");
    oneVector = lfv(this.handle, "oneVector");
    upVector = lfv(this.handle, "upVector");
    downVector = lfv(this.handle, "downVector");
    leftVector = lfv(this.handle, "leftVector");
    rightVector = lfv(this.handle, "rightVector");
    positiveInfinityVector = lfv(this.handle, "positiveInfinityVector");
    negativeInfinityVector = lfv(this.handle, "negativeInfinityVector");
    kEpsilon = lfv(this.handle, "kEpsilon");
    kEpsilonNormalSqrt = lfv(this.handle, "kEpsilonNormalSqrt");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_Item(index) {
        return Il2Cpp.Api.Vector2._get_Item(this.handle, index);
    }
    set_Item(index, value) {
        return Il2Cpp.Api.Vector2._set_Item(this.handle, index, value);
    }
    _ctor_2(x, y) {
        return Il2Cpp.Api.Vector2.__ctor(this.handle, x, y);
    }
    Lerp(a, b, t) {
        return Il2Cpp.Api.Vector2._Lerp(a, b, t);
    }
    Scale(a, b) {
        return Il2Cpp.Api.Vector2._Scale(a, b);
    }
    Normalize() {
        return Il2Cpp.Api.Vector2._Normalize(this.handle);
    }
    get_normalized() {
        return Il2Cpp.Api.Vector2._get_normalized(this.handle);
    }
    ToString() {
        return readU16(Il2Cpp.Api.Vector2._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Vector2._ToString(this.handle, format, formatProvider));
    }
    GetHashCode() {
        return Il2Cpp.Api.Vector2._GetHashCode(this.handle);
    }
    Equals_obj(other) {
        return Il2Cpp.Api.Vector2._Equals(this.handle, other);
    }
    Equals_vector(other) {
        return Il2Cpp.Api.Vector2._Equals(this.handle, other);
    }
    Dot(lhs, rhs) {
        return Il2Cpp.Api.Vector2._Dot(lhs, rhs);
    }
    get_magnitude() {
        return Il2Cpp.Api.Vector2._get_magnitude(this.handle);
    }
    get_sqrMagnitude() {
        return Il2Cpp.Api.Vector2._get_sqrMagnitude(this.handle);
    }
    Angle(from, to) {
        return Il2Cpp.Api.Vector2._Angle(from, to);
    }
    Distance(a, b) {
        return Il2Cpp.Api.Vector2._Distance(a, b);
    }
    ClampMagnitude(vector, maxLength) {
        return Il2Cpp.Api.Vector2._ClampMagnitude(vector, maxLength);
    }
    SqrMagnitude(a) {
        return Il2Cpp.Api.Vector2._SqrMagnitude(a);
    }
    Min(lhs, rhs) {
        return Il2Cpp.Api.Vector2._Min(lhs, rhs);
    }
    Max(lhs, rhs) {
        return Il2Cpp.Api.Vector2._Max(lhs, rhs);
    }
    op_Addition(a, b) {
        return Il2Cpp.Api.Vector2._op_Addition(a, b);
    }
    op_Subtraction(a, b) {
        return Il2Cpp.Api.Vector2._op_Subtraction(a, b);
    }
    op_Multiply(a, b) {
        return Il2Cpp.Api.Vector2._op_Multiply(a, b);
    }
    op_Division(a, b) {
        return Il2Cpp.Api.Vector2._op_Division(a, b);
    }
    op_UnaryNegation(a) {
        return Il2Cpp.Api.Vector2._op_UnaryNegation(a);
    }
    op_Multiply_2(a, d) {
        return Il2Cpp.Api.Vector2._op_Multiply(a, d);
    }
    op_Division_2(a, d) {
        return Il2Cpp.Api.Vector2._op_Division(a, d);
    }
    op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Vector2._op_Equality(lhs, rhs);
    }
    op_Inequality(lhs, rhs) {
        return Il2Cpp.Api.Vector2._op_Inequality(lhs, rhs);
    }
    op_Implicit(v) {
        return Il2Cpp.Api.Vector2._op_Implicit(v);
    }
    op_Implicit_v2(v) {
        return Il2Cpp.Api.Vector2._op_Implicit(v);
    }
    get_zero() {
        return Il2Cpp.Api.Vector2._get_zero();
    }
    get_one() {
        return Il2Cpp.Api.Vector2._get_one();
    }
    get_up() {
        return Il2Cpp.Api.Vector2._get_up();
    }
    get_right() {
        return Il2Cpp.Api.Vector2._get_right();
    }
    _cctor() {
        return Il2Cpp.Api.Vector2.__cctor();
    }
}
exports.UnityEngine_Vector2_Impl = UnityEngine_Vector2_Impl;
Il2Cpp.Vector2 = UnityEngine_Vector2_Impl;
},{"../class":294}],283:[function(require,module,exports){
"use strict";
},{}],284:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":281,"./class":282,"./export":283}],285:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Vector3_API {
    static get _Slerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Slerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Lerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Lerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _LerpUnclamped() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "LerpUnclamped", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _MoveTowards() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "MoveTowards", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _SmoothDamp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "SmoothDamp", 4, "pointer", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _SmoothDamp_current_target_currentVelocity_smoothTime_maxSpeed_deltaTime() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "SmoothDamp", 6, ["UnityEngine.Vector3", "UnityEngine.Vector3", "UnityEngine.Vector3&", "System.Single", "System.Single", "System.Single"], "pointer", ["pointer", "pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _get_Item() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_Item", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _set_Item() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "set_Item", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", ".ctor", 3, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_x_y() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", ".ctor", 2, ["System.Single", "System.Single"], "void", ["pointer", "pointer", "pointer"]);
    }
    static get _Scale() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Scale", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Cross() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Cross", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "Equals", 1, ["UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _Reflect() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Reflect", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Normalize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Normalize", 1, "pointer", ["pointer"]);
    }
    static get _Normalize_() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "Normalize", 0, [], "void", ["pointer"]);
    }
    static get _get_normalized() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_normalized", 0, "pointer", ["pointer"]);
    }
    static get _Dot() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Dot", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Project() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Project", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _ProjectOnPlane() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "ProjectOnPlane", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Angle() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Angle", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _SignedAngle() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "SignedAngle", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _Distance() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Distance", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _ClampMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "ClampMagnitude", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Magnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Magnitude", 1, "pointer", ["pointer"]);
    }
    static get _get_magnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_magnitude", 0, "pointer", ["pointer"]);
    }
    static get _SqrMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "SqrMagnitude", 1, "pointer", ["pointer"]);
    }
    static get _get_sqrMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_sqrMagnitude", 0, "pointer", ["pointer"]);
    }
    static get _Min() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Min", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Max() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Max", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _get_zero() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_zero", 0, "pointer", []);
    }
    static get _get_one() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_one", 0, "pointer", []);
    }
    static get _get_forward() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_forward", 0, "pointer", []);
    }
    static get _get_back() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_back", 0, "pointer", []);
    }
    static get _get_up() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_up", 0, "pointer", []);
    }
    static get _get_down() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_down", 0, "pointer", []);
    }
    static get _get_left() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_left", 0, "pointer", []);
    }
    static get _get_right() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "get_right", 0, "pointer", []);
    }
    static get _op_Addition() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Addition", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Subtraction() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Subtraction", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_UnaryNegation() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_UnaryNegation", 1, "pointer", ["pointer"]);
    }
    static get _op_Multiply() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Multiply", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply_d_a() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Multiply", 2, ["System.Single", "UnityEngine.Vector3"], "pointer", ["pointer", "pointer"]);
    }
    static get _op_Division() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Division", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "op_Inequality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector3", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", ".cctor", 0, "void", []);
    }
    static get _Slerp_Injected() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector3", "Slerp_Injected", 4, "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Slerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Lerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_LerpUnclamped", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_MoveTowards", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_SmoothDamp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_SmoothDamp_current_target_currentVelocity_smoothTime_maxSpeed_deltaTime", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_Item", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_set_Item", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "__ctor_x_y", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Scale", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Cross", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Reflect", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Normalize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Normalize_", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_normalized", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Dot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Project", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_ProjectOnPlane", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Angle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_SignedAngle", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Distance", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_ClampMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Magnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_magnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_SqrMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_sqrMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Min", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Max", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_zero", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_one", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_forward", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_back", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_up", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_down", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_left", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_get_right", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Addition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Subtraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_UnaryNegation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Multiply", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Multiply_d_a", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Division", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_ToString_format_formatProvider", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "__cctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector3_API, "_Slerp_Injected", null);
Il2Cpp.Api.Vector3 = UnityEngine_Vector3_API;
},{"decorator-cache-getter":338}],286:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Vector3_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Vector3_Impl extends class_1.System_ValueType_Impl {
    kEpsilon = lfv(this.handle, "kEpsilon");
    kEpsilonNormalSqrt = lfv(this.handle, "kEpsilonNormalSqrt");
    x = lfv(this.handle, "x");
    y = lfv(this.handle, "y");
    z = lfv(this.handle, "z");
    zeroVector = lfv(this.handle, "zeroVector");
    oneVector = lfv(this.handle, "oneVector");
    upVector = lfv(this.handle, "upVector");
    downVector = lfv(this.handle, "downVector");
    leftVector = lfv(this.handle, "leftVector");
    rightVector = lfv(this.handle, "rightVector");
    forwardVector = lfv(this.handle, "forwardVector");
    backVector = lfv(this.handle, "backVector");
    positiveInfinityVector = lfv(this.handle, "positiveInfinityVector");
    negativeInfinityVector = lfv(this.handle, "negativeInfinityVector");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    Slerp(a, b, t) {
        return Il2Cpp.Api.Vector3._Slerp(a, b, t);
    }
    Lerp(a, b, t) {
        return Il2Cpp.Api.Vector3._Lerp(a, b, t);
    }
    LerpUnclamped(a, b, t) {
        return Il2Cpp.Api.Vector3._LerpUnclamped(a, b, t);
    }
    MoveTowards(current, target, maxDistanceDelta) {
        return Il2Cpp.Api.Vector3._MoveTowards(current, target, maxDistanceDelta);
    }
    SmoothDamp_4(current, target, currentVelocity, smoothTime) {
        return Il2Cpp.Api.Vector3._SmoothDamp(current, target, currentVelocity, smoothTime);
    }
    SmoothDamp_6(current, target, currentVelocity, smoothTime, maxSpeed, deltaTime) {
        return Il2Cpp.Api.Vector3._SmoothDamp(current, target, currentVelocity, smoothTime, maxSpeed, deltaTime);
    }
    get_Item(index) {
        return Il2Cpp.Api.Vector3._get_Item(this.handle, index);
    }
    set_Item(index, value) {
        return Il2Cpp.Api.Vector3._set_Item(this.handle, index, value);
    }
    _ctor_xyz(x, y, z) {
        return Il2Cpp.Api.Vector3.__ctor(this.handle, x, y, z);
    }
    _ctor_xy(x, y) {
        return Il2Cpp.Api.Vector3.__ctor(this.handle, x, y);
    }
    Scale(a, b) {
        return Il2Cpp.Api.Vector3._Scale(a, b);
    }
    Cross(lhs, rhs) {
        return Il2Cpp.Api.Vector3._Cross(lhs, rhs);
    }
    GetHashCode() {
        return Il2Cpp.Api.Vector3._GetHashCode(this.handle);
    }
    Equals_obj(other) {
        return Il2Cpp.Api.Vector3._Equals(this.handle, other);
    }
    Equals_v3(other) {
        return Il2Cpp.Api.Vector3._Equals(this.handle, other);
    }
    Reflect(inDirection, inNormal) {
        return Il2Cpp.Api.Vector3._Reflect(inDirection, inNormal);
    }
    Normalize_v3(value) {
        return Il2Cpp.Api.Vector3._Normalize(value);
    }
    Normalize() {
        return Il2Cpp.Api.Vector3._Normalize(this.handle);
    }
    get_normalized() {
        return Il2Cpp.Api.Vector3._get_normalized(this.handle);
    }
    Dot(lhs, rhs) {
        return Il2Cpp.Api.Vector3._Dot(lhs, rhs);
    }
    Project(vector, onNormal) {
        return Il2Cpp.Api.Vector3._Project(vector, onNormal);
    }
    ProjectOnPlane(vector, planeNormal) {
        return Il2Cpp.Api.Vector3._ProjectOnPlane(vector, planeNormal);
    }
    Angle(from, to) {
        return Il2Cpp.Api.Vector3._Angle(from, to);
    }
    SignedAngle(from, to, axis) {
        return Il2Cpp.Api.Vector3._SignedAngle(from, to, axis);
    }
    Distance(a, b) {
        return Il2Cpp.Api.Vector3._Distance(a, b);
    }
    ClampMagnitude(vector, maxLength) {
        return Il2Cpp.Api.Vector3._ClampMagnitude(vector, maxLength);
    }
    Magnitude(vector) {
        return Il2Cpp.Api.Vector3._Magnitude(vector);
    }
    get_magnitude() {
        return Il2Cpp.Api.Vector3._get_magnitude(this.handle);
    }
    SqrMagnitude(vector) {
        return Il2Cpp.Api.Vector3._SqrMagnitude(vector);
    }
    get_sqrMagnitude() {
        return Il2Cpp.Api.Vector3._get_sqrMagnitude(this.handle);
    }
    Min(lhs, rhs) {
        return Il2Cpp.Api.Vector3._Min(lhs, rhs);
    }
    Max(lhs, rhs) {
        return Il2Cpp.Api.Vector3._Max(lhs, rhs);
    }
    get_zero() {
        return Il2Cpp.Api.Vector3._get_zero();
    }
    get_one() {
        return Il2Cpp.Api.Vector3._get_one();
    }
    get_forward() {
        return Il2Cpp.Api.Vector3._get_forward();
    }
    get_back() {
        return Il2Cpp.Api.Vector3._get_back();
    }
    get_up() {
        return Il2Cpp.Api.Vector3._get_up();
    }
    get_down() {
        return Il2Cpp.Api.Vector3._get_down();
    }
    get_left() {
        return Il2Cpp.Api.Vector3._get_left();
    }
    get_right() {
        return Il2Cpp.Api.Vector3._get_right();
    }
    op_Addition(a, b) {
        return Il2Cpp.Api.Vector3._op_Addition(a, b);
    }
    op_Subtraction(a, b) {
        return Il2Cpp.Api.Vector3._op_Subtraction(a, b);
    }
    op_UnaryNegation(a) {
        return Il2Cpp.Api.Vector3._op_UnaryNegation(a);
    }
    op_Multiply_v3_number(a, d) {
        return Il2Cpp.Api.Vector3._op_Multiply(a, d);
    }
    op_Multiply_number_v3(d, a) {
        return Il2Cpp.Api.Vector3._op_Multiply(d, a);
    }
    op_Division(a, d) {
        return Il2Cpp.Api.Vector3._op_Division(a, d);
    }
    op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Vector3._op_Equality(lhs, rhs);
    }
    op_Inequality(lhs, rhs) {
        return Il2Cpp.Api.Vector3._op_Inequality(lhs, rhs);
    }
    ToString() {
        return readU16(Il2Cpp.Api.Vector3._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Vector3._ToString(this.handle, format, formatProvider));
    }
    _cctor() {
        return Il2Cpp.Api.Vector3.__cctor();
    }
    Slerp_Injected(a, b, t, ret) {
        return Il2Cpp.Api.Vector3._Slerp_Injected(a, b, t, ret);
    }
}
exports.UnityEngine_Vector3_Impl = UnityEngine_Vector3_Impl;
Il2Cpp.Vector3 = UnityEngine_Vector3_Impl;
},{"../class":294}],287:[function(require,module,exports){
"use strict";
},{}],288:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":285,"./class":286,"./export":287}],289:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_Vector4_API {
    static get _get_Item() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_Item", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _set_Item() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "set_Item", 2, "void", ["pointer", "pointer", "pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", ".ctor", 4, "void", ["pointer", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get __ctor_x_y_z() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", ".ctor", 3, ["System.Single", "System.Single", "System.Single"], "void", ["pointer", "pointer", "pointer", "pointer"]);
    }
    static get _Lerp() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Lerp", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_other() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", "Equals", 1, ["UnityEngine.Vector4"], "pointer", ["pointer", "pointer"]);
    }
    static get _Normalize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Normalize", 1, "pointer", ["pointer"]);
    }
    static get _get_normalized() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_normalized", 0, "pointer", ["pointer"]);
    }
    static get _Dot() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Dot", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Magnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "Magnitude", 1, "pointer", ["pointer"]);
    }
    static get _get_magnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_magnitude", 0, "pointer", ["pointer"]);
    }
    static get _get_sqrMagnitude() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_sqrMagnitude", 0, "pointer", ["pointer"]);
    }
    static get _get_zero() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "get_zero", 0, "pointer", []);
    }
    static get _op_Addition() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Addition", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Subtraction() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Subtraction", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Multiply() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Multiply", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Division() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Division", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Equality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Equality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Inequality() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Inequality", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _op_Implicit() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Implicit", 1, "pointer", ["pointer"]);
    }
    static get _op_Implicit_v() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", "op_Implicit", 1, ["UnityEngine.Vector4"], "pointer", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _ToString_format_formatProvider() {
        return Il2Cpp.Api.o("UnityEngine.CoreModule", "UnityEngine.Vector4", "ToString", 2, ["System.String", "System.IFormatProvider"], "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get __cctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.Vector4", ".cctor", 0, "void", []);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_get_Item", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_set_Item", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "__ctor_x_y_z", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_Lerp", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_Equals_other", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_Normalize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_get_normalized", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_Dot", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_Magnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_get_magnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_get_sqrMagnitude", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_get_zero", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Addition", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Subtraction", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Multiply", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Division", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Equality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Inequality", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Implicit", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_op_Implicit_v", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_ToString", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "_ToString_format_formatProvider", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_Vector4_API, "__cctor", null);
Il2Cpp.Api.Vector4 = UnityEngine_Vector4_API;
},{"decorator-cache-getter":338}],290:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_Vector4_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_Vector4_Impl extends class_1.System_ValueType_Impl {
    kEpsilon = lfv(this.handle, "kEpsilon");
    x = lfv(this.handle, "x");
    y = lfv(this.handle, "y");
    z = lfv(this.handle, "z");
    w = lfv(this.handle, "w");
    zeroVector = lfv(this.handle, "zeroVector");
    oneVector = lfv(this.handle, "oneVector");
    positiveInfinityVector = lfv(this.handle, "positiveInfinityVector");
    negativeInfinityVector = lfv(this.handle, "negativeInfinityVector");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    get_Item(index) {
        return Il2Cpp.Api.Vector4._get_Item(this.handle, index);
    }
    set_Item(index, value) {
        return Il2Cpp.Api.Vector4._set_Item(this.handle, index, value);
    }
    _ctor_xyzw(x, y, z, w) {
        return Il2Cpp.Api.Vector4.__ctor(this.handle, x, y, z, w);
    }
    _ctor_xyz(x, y, z) {
        return Il2Cpp.Api.Vector4.__ctor(this.handle, x, y, z);
    }
    Lerp(a, b, t) {
        return Il2Cpp.Api.Vector4._Lerp(a, b, t);
    }
    GetHashCode() {
        return Il2Cpp.Api.Vector4._GetHashCode(this.handle);
    }
    Equals_obj(other) {
        return Il2Cpp.Api.Vector4._Equals(this.handle, other);
    }
    Equals_v4(other) {
        return Il2Cpp.Api.Vector4._Equals(this.handle, other);
    }
    Normalize(a) {
        return Il2Cpp.Api.Vector4._Normalize(a);
    }
    get_normalized() {
        return Il2Cpp.Api.Vector4._get_normalized(this.handle);
    }
    Dot(a, b) {
        return Il2Cpp.Api.Vector4._Dot(a, b);
    }
    Magnitude(a) {
        return Il2Cpp.Api.Vector4._Magnitude(a);
    }
    get_magnitude() {
        return Il2Cpp.Api.Vector4._get_magnitude(this.handle);
    }
    get_sqrMagnitude() {
        return Il2Cpp.Api.Vector4._get_sqrMagnitude(this.handle);
    }
    get_zero() {
        return Il2Cpp.Api.Vector4._get_zero();
    }
    op_Addition(a, b) {
        return Il2Cpp.Api.Vector4._op_Addition(a, b);
    }
    op_Subtraction(a, b) {
        return Il2Cpp.Api.Vector4._op_Subtraction(a, b);
    }
    op_Multiply(a, d) {
        return Il2Cpp.Api.Vector4._op_Multiply(a, d);
    }
    op_Division(a, d) {
        return Il2Cpp.Api.Vector4._op_Division(a, d);
    }
    op_Equality(lhs, rhs) {
        return Il2Cpp.Api.Vector4._op_Equality(lhs, rhs);
    }
    op_Inequality(lhs, rhs) {
        return Il2Cpp.Api.Vector4._op_Inequality(lhs, rhs);
    }
    op_Implicit_v3(v) {
        return Il2Cpp.Api.Vector4._op_Implicit(v);
    }
    op_Implicit_v4(v) {
        return Il2Cpp.Api.Vector4._op_Implicit(v);
    }
    ToString() {
        return readU16(Il2Cpp.Api.Vector4._ToString(this.handle));
    }
    ToString_2(format, formatProvider) {
        return readU16(Il2Cpp.Api.Vector4._ToString(this.handle, format, formatProvider));
    }
    _cctor() {
        return Il2Cpp.Api.Vector4.__cctor();
    }
}
exports.UnityEngine_Vector4_Impl = UnityEngine_Vector4_Impl;
Il2Cpp.Vector4 = UnityEngine_Vector4_Impl;
},{"../class":294}],291:[function(require,module,exports){
"use strict";
},{}],292:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
},{"./api":289,"./class":290,"./export":291}],293:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class System_ValueType_API {
    static get __ctor() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", ".ctor", 0, "void", ["pointer"]);
    }
    static get _InternalEquals() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", "InternalEquals", 3, "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _DefaultEquals() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", "DefaultEquals", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", "Equals", 1, "pointer", ["pointer", "pointer"]);
    }
    static get _InternalGetHashCode() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", "InternalGetHashCode", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _GetHashCode() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", "GetHashCode", 0, "pointer", ["pointer"]);
    }
    static get _ToString() {
        return Il2Cpp.Api.t("mscorlib", "System.ValueType", "ToString", 0, "pointer", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "__ctor", null);
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "_InternalEquals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "_DefaultEquals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "_Equals", null);
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "_InternalGetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "_GetHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], System_ValueType_API, "_ToString", null);
mscorlib.Api.ValueType = System_ValueType_API;
},{"decorator-cache-getter":338}],294:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.System_ValueType_Impl = void 0;
const class_1 = require("../class");
class System_ValueType_Impl extends class_1.mscorlib_System_Object_impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor() {
        return mscorlib.Api.ValueType.__ctor(this.handle);
    }
    InternalEquals(o1, o2, fields) {
        return mscorlib.Api.ValueType._InternalEquals(o1.handle, o2.handle, fields);
    }
    DefaultEquals(o1, o2) {
        return mscorlib.Api.ValueType._DefaultEquals(o1.handle, o2.handle);
    }
    Equals(obj) {
        return mscorlib.Api.ValueType._Equals(this.handle, obj.handle);
    }
    InternalGetHashCode(o, fields) {
        return mscorlib.Api.ValueType._InternalGetHashCode(o, fields);
    }
    GetHashCode() {
        return mscorlib.Api.ValueType._GetHashCode(this.handle);
    }
    ToString() {
        return readU16(mscorlib.Api.ValueType._ToString(this.handle));
    }
}
exports.System_ValueType_Impl = System_ValueType_Impl;
},{"../class":304}],295:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTypeName = void 0;
const class_1 = require("../class");
const getTypeInner = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    return new class_1.mscorlib_System_Object_impl(mPtr).getType();
};
const getTypeNameInner = (mPtr) => {
    return getTypeInner(mPtr).name;
};
exports.getTypeName = getTypeNameInner;
const showTypeModuleByIns = (mPtr) => {
    mPtr = checkCmdInput(mPtr);
    const RuntimeType = getType(mPtr).caseToRuntimeType;
    lfs(RuntimeType.get_Module().handle, findClass("Module"));
};
const showTypeModuleByType = (mPtr) => {
    mPtr = checkCmdInput(mPtr);
    const RuntimeType = new mscorlib.Type(mPtr).caseToRuntimeType;
    LOGJSON(RuntimeType.get_Module());
};
const getTypeParent = (mPtr, needRetArr = false) => {
    const MAX_PARENT_INDEX = 20;
    let retArr = [];
    let current = getType(mPtr).caseToRuntimeType;
    for (let i = 0; i < MAX_PARENT_INDEX; ++i) {
        let type = getBaseType(current, i);
        if (type.handle.isNull())
            break;
        retArr.push(type);
    }
    if (needRetArr)
        return retArr;
    newLine();
    LOGD(retArr.map((type) => `${type.name}(${type.handle})`).join(" <--- "));
    newLine();
    function getBaseType(current, parentIndex = 0) {
        if (mPtr == undefined || mPtr == null)
            throw new Error("current mPtr can't be null");
        for (let i = 0; i < parentIndex; ++i)
            current = current.caseToRuntimeType.get_BaseType();
        return current;
    }
};
globalThis.getType = getTypeInner;
globalThis.getTypeName = getTypeNameInner;
globalThis.showTypeParent = getTypeParent;
globalThis.getTypeParent = (mPtr) => getTypeParent(mPtr, true);
globalThis.showTypeModuleByType = showTypeModuleByType;
globalThis.showTypeModuleByIns = showTypeModuleByIns;
},{"../class":304}],296:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./exports");
require("./Boolean/include");
require("./Color/include");
require("./Color32/include");
require("./EmitParams/include");
require("./LoadSceneParameters/include");
require("./MainModule/include");
require("./Matrix4x4/include");
require("./Quaternion/include");
require("./Rect/include");
require("./Scene/include");
require("./Touch/include");
require("./Vector2/include");
require("./Vector3/include");
require("./Vector4/include");
require("./Ray/include");
require("./Int32/include");
require("./DateTime/include");
},{"./Boolean/include":229,"./Color/include":237,"./Color32/include":233,"./DateTime/include":241,"./EmitParams/include":245,"./Int32/include":248,"./LoadSceneParameters/include":252,"./MainModule/include":256,"./Matrix4x4/include":260,"./Quaternion/include":264,"./Ray/include":267,"./Rect/include":271,"./Scene/include":275,"./Touch/include":280,"./Vector2/include":284,"./Vector3/include":288,"./Vector4/include":292,"./api":293,"./class":294,"./exports":295}],297:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_AsyncOperation_API {
    static get _InternalDestroy() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "InternalDestroy", 1, "void", ["pointer"]);
    }
    static get _get_isDone() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "get_isDone", 0, "pointer", ["pointer"]);
    }
    static get _get_progress() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "get_progress", 0, "pointer", ["pointer"]);
    }
    static get _set_allowSceneActivation() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "set_allowSceneActivation", 1, "void", ["pointer", "pointer"]);
    }
    static get _Finalize() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "Finalize", 0, "void", ["pointer"]);
    }
    static get _InvokeCompletionEvent() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", "InvokeCompletionEvent", 0, "void", ["pointer"]);
    }
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.AsyncOperation", ".ctor", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "_InternalDestroy", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "_get_isDone", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "_get_progress", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "_set_allowSceneActivation", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "_Finalize", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "_InvokeCompletionEvent", null);
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_AsyncOperation_API, "__ctor", null);
Il2Cpp.Api.AsyncOperation = UnityEngine_AsyncOperation_API;
},{"decorator-cache-getter":338}],298:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_AsyncOperation_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_AsyncOperation_Impl extends class_1.UnityEngine_YieldInstruction_Impl {
    m_Ptr = lfv(this.handle, "m_Ptr");
    m_completeCallback = lfv(this.handle, "m_completeCallback");
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    static InternalDestroy(ptr) {
        return Il2Cpp.Api.AsyncOperation._InternalDestroy(ptr);
    }
    get_isDone() {
        return Il2Cpp.Api.AsyncOperation._get_isDone(this.handle);
    }
    get_progress() {
        return Il2Cpp.Api.AsyncOperation._get_progress(this.handle);
    }
    set_allowSceneActivation(value) {
        return Il2Cpp.Api.AsyncOperation._set_allowSceneActivation(this.handle, value);
    }
    Finalize() {
        return Il2Cpp.Api.AsyncOperation._Finalize(this.handle);
    }
    InvokeCompletionEvent() {
        return Il2Cpp.Api.AsyncOperation._InvokeCompletionEvent(this.handle);
    }
    _ctor() {
        return Il2Cpp.Api.AsyncOperation.__ctor(this.handle);
    }
}
exports.UnityEngine_AsyncOperation_Impl = UnityEngine_AsyncOperation_Impl;
Il2Cpp.AsyncOperation = UnityEngine_AsyncOperation_Impl;
},{"../class":301}],299:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
},{"./api":297,"./class":298}],300:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class UnityEngine_YieldInstruction_API {
    static get __ctor() {
        return Il2Cpp.Api.t("UnityEngine.CoreModule", "UnityEngine.YieldInstruction", ".ctor", 0, "void", ["pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], UnityEngine_YieldInstruction_API, "__ctor", null);
Il2Cpp.Api.YieldInstruction = UnityEngine_YieldInstruction_API;
},{"decorator-cache-getter":338}],301:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnityEngine_YieldInstruction_Impl = void 0;
const class_1 = require("../class");
class UnityEngine_YieldInstruction_Impl extends class_1.mscorlib_System_Object_impl {
    constructor(handleOrWrapper) {
        super(handleOrWrapper);
    }
    _ctor() {
        return Il2Cpp.Api.YieldInstruction.__ctor(this.handle);
    }
}
exports.UnityEngine_YieldInstruction_Impl = UnityEngine_YieldInstruction_Impl;
Il2Cpp.YieldInstruction = UnityEngine_YieldInstruction_Impl;
},{"../class":304}],302:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./AsyncOperation/include");
},{"./AsyncOperation/include":299,"./api":300,"./class":301}],303:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
class mscorlibObjAPI {
    static get _ctor_0() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", ".ctor", 0, "pointer", ["pointer"]);
    }
    static get _toString() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", "ToString", 0, "pointer", ["pointer"]);
    }
    static get _getType() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", "GetType", 0, "pointer", ["pointer"]);
    }
    static get _finalize() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", "finalize", 0, "pointer", ["pointer"]);
    }
    static get _getHashCode() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", "getHashCode", 0, "pointer", ["pointer"]);
    }
    static get _Equals_1() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", "Equals", 2, "pointer", ["pointer", "pointer"]);
    }
    static get _Equals_2() {
        return Il2Cpp.Api.t("mscorlib", "System.Object", "Equals", 2, "pointer", ["pointer", "pointer", "pointer"]);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_ctor_0", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_toString", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_getType", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_finalize", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_getHashCode", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_Equals_1", null);
__decorate([
    decorator_cache_getter_1.cache
], mscorlibObjAPI, "_Equals_2", null);
Reflect.set(globalThis, "mscorlib", class {
});
Reflect.set(mscorlib, "Api", class {
});
mscorlib.Api.mscorlibObj = mscorlibObjAPI;
},{"decorator-cache-getter":338}],304:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mscorlib_System_Object_impl = void 0;
class mscorlib_System_Object_impl {
    handle;
    constructor(handleOrWrapper) {
        this.handle = handleOrWrapper;
    }
    ctor() {
        return mscorlib.Api.mscorlibObj._ctor_0(allocP(1));
    }
    toString() {
        return readU16(mscorlib.Api.mscorlibObj._toString(this.handle));
    }
    memberwiseClone() {
        throw new Error("Not implemented");
    }
    getType() {
        return new mscorlib.Type(mscorlib.Api.mscorlibObj._getType(this.handle));
    }
    finalize() {
        return mscorlib.Api.mscorlibObj._finalize(this.handle);
    }
    getHashCode() {
        return mscorlib.Api.mscorlibObj._getHashCode(this.handle);
    }
}
exports.mscorlib_System_Object_impl = mscorlib_System_Object_impl;
mscorlib.Object = mscorlib_System_Object_impl;
},{}],305:[function(require,module,exports){
"use strict";
},{}],306:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./api");
require("./class");
require("./export");
require("./Application/include");
require("./GUI/include");
require("./Object/include");
require("./Input/include");
require("./Delegate/include");
require("./Module/include");
require("./Physics/include");
require("./SystemInfo/include");
require("./Exception/include");
require("./PlayerPrefs/include");
require("./Resources/include");
require("./ResourcesAPI/include");
require("./ResourcesRequest/include");
require("./Times/include");
require("./FontData/include");
require("./Type/include");
require("./RuntimeType/include");
require("./RuntimeTypeHandle/include");
require("./SceneManager/include");
require("./AbstractEventData/include");
require("./Debug/include");
require("./Logger/include");
require("./YieldInstruction/include");
require("./ValueType/include");
require("./UnityEventBase/include");
require("./InvokableCallList/include");
},{"./AbstractEventData/include":41,"./Application/include":47,"./Debug/include":51,"./Delegate/include":60,"./Exception/include":64,"./FontData/include":68,"./GUI/include":72,"./Input/include":77,"./InvokableCallList/include":80,"./Logger/include":85,"./Module/include":88,"./Object/include":176,"./Physics/include":181,"./PlayerPrefs/include":185,"./Resources/include":198,"./ResourcesAPI/include":190,"./ResourcesRequest/include":194,"./RuntimeType/include":205,"./RuntimeTypeHandle/include":201,"./SceneManager/include":210,"./SystemInfo/include":213,"./Times/include":214,"./Type/include":217,"./UnityEventBase/include":226,"./ValueType/include":296,"./YieldInstruction/include":302,"./api":303,"./class":304,"./export":305}],307:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./thread");
},{"./thread":308}],308:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const attachCurrentThread = () => {
    let thread = Il2Cpp.Api._threadCurrent();
    if (thread.isNull())
        Il2Cpp.Domain.attach();
};
const detachCurrentThread = () => {
    let threadHandle = Il2Cpp.Api._threadCurrent();
    if (!threadHandle.isNull())
        new Il2Cpp.Thread(threadHandle).detach();
};
globalThis.attachCurrentThread = attachCurrentThread;
globalThis.detachCurrentThread = detachCurrentThread;
},{}],309:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./TypeExtends/include");
},{"./TypeExtends/include":28}],310:[function(require,module,exports){
"use strict";
},{}],311:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("frida-il2cpp-bridge");
require("./API/include");
require("./expand/include");
require("./base/include");
require("./bridge/include");
require("./java/include");
require("./utils/include");
require("./plugin/include");
require("./globel");
},{"./API/include":1,"./base/include":9,"./bridge/include":25,"./expand/include":309,"./globel":310,"./java/include":316,"./plugin/include":320,"./utils/include":332,"frida-il2cpp-bridge":366}],312:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./include");
globalThis.main = () => {
};
},{"./include":311}],313:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.iterClassLoader = exports.listClassLoader = void 0;
const formart_1 = require("../utils/formart");
class classLoaderManager {
    static iterClassLoader = (callback, log = false) => {
        Java.perform(() => {
            Java.enumerateClassLoaders({
                onMatch: function (loader) {
                    if (log)
                        LOGD('classLoader' + loader.toString());
                    if (loader.toString().indexOf('dalvik.system.DexClassLoader') > -1) {
                        if (callback != null)
                            interCall(loader, callback);
                    }
                    else {
                        if (callback != null)
                            interCall(loader, callback);
                    }
                }, onComplete: function () { }
            });
        });
        function interCall(loader, interCallBack) {
            Java.classFactory.loader = loader;
            interCallBack(loader);
        }
    };
    static loaders = new Array();
    static listClassLoader = (formart = true, needLog = true) => {
        if (!needLog && classLoaderManager.loaders.length === 0) {
            fillCacle();
            return;
        }
        if (!formart) {
            Java.perform(() => classLoaderManager.iterClassLoader(() => { }, true));
        }
        else {
            fillCacle();
            let classLoaderList = ["java.lang.BootClassLoader", "dalvik.system.DexClassLoader", "dalvik.system.PathClassLoader", "dalvik.system.InMemoryDexClassLoader"];
            classLoaderList.forEach((classLoaderName) => {
                formart_1.formartClass.printTitile(classLoaderName);
                this.loaders.forEach((loader) => {
                    if (loader.toString().indexOf(classLoaderName) > -1)
                        LOGD('  [' + classLoaderManager.loaders.indexOf(loader) + '] ' + loader.toString());
                });
            });
        }
        function fillCacle() {
            if (classLoaderManager.loaders.length !== 0)
                return;
            Java.perform(() => classLoaderManager.iterClassLoader((loader) => {
                if (!classLoaderManager.loaders.includes(loader))
                    classLoaderManager.loaders.push(loader);
            }, false));
        }
    };
    static getClassLoaderByDescriptor = (descriptor) => {
        let ret = null;
        classLoaderManager.loaders.forEach((loader) => {
            if (loader.toString().indexOf(descriptor) > -1)
                ret = loader;
        });
        return ret;
    };
    static getClassLoaderByIndex = (index) => {
        return classLoaderManager.loaders[index];
    };
}
const listClassLoaderTMP = classLoaderManager.listClassLoader;
exports.listClassLoader = listClassLoaderTMP;
const iterClassLoaderTMP = classLoaderManager.iterClassLoader;
exports.iterClassLoader = iterClassLoaderTMP;
const getClassLoaderByDescriptorTMP = classLoaderManager.getClassLoaderByDescriptor;
const getClassLoaderByIndexTMP = classLoaderManager.getClassLoaderByIndex;
globalThis.listClassLoader = listClassLoaderTMP;
globalThis.iterClassLoader = iterClassLoaderTMP;
globalThis.getClassLoaderByDescriptor = getClassLoaderByDescriptorTMP;
globalThis.getClassLoaderByIndex = getClassLoaderByIndexTMP;
},{"../utils/formart":331}],314:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const classLoader_1 = require("./classLoader");
const findJavaClass = (className = "com.unity3d.player.UnityPlayerActivity") => {
    let boolLoader = true;
    Java.perform(() => {
        (0, classLoader_1.iterClassLoader)(function (loader) {
            if (loader) {
                try {
                    let clazz = loader.loadClass(className);
                    if (clazz)
                        boolLoader = false;
                    Java.choose(className, {
                        onMatch: function (clazz) {
                            LOGD('[*] onMatch : \n\t' + clazz.toString() + " at " + loader.toString());
                        }, onComplete: function () { }
                    });
                }
                catch { }
            }
        }, false);
    });
};
const showAllClassesMethods = () => {
    Java.perform(function () {
        Java.enumerateLoadedClasses({
            onMatch: function (className) {
                LOG("[*] Class Name: " + className);
                var db1 = Java.use(className);
                var methodArr = db1.class.getMethods();
                for (var m in methodArr) {
                    LOG("\t" + methodArr[m]);
                }
            },
            onComplete: function () { }
        });
    });
};
const showAllClasses = () => {
    Java.perform(function () {
        Java.enumerateLoadedClasses({
            onMatch: function (className) {
                LOG(className);
            },
            onComplete: function () { }
        });
    });
};
const showSpecificClassMethods = () => {
    Java.perform(function () {
        var class_name = "android.security.keystore.KeyGenParameterSpec$Builder";
        var db1 = Java.use(class_name);
        var methodArr = db1.class.getMethods();
        LOG("[*] Class Name: " + class_name);
        LOG("[*] Method Names:");
        for (var m in methodArr) {
            LOG(methodArr[m]);
        }
    });
};
globalThis.findJavaClass = findJavaClass;
},{"./classLoader":313}],315:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setClick = exports.HookMotionEvent = void 0;
const HookMotionEvent = () => {
    Java.perform(() => {
        Java.use("android.view.View").onTouchEvent.implementation = function (event) {
            let ret = this.onTouchEvent(event);
            LOG("\n" + getLine(25) + " onTouchEvent " + getLine(25), LogColor.YELLOW);
            LOG(ret + "\t" + event, LogColor.C36);
            return ret;
        };
        Java.use("android.app.Activity").dispatchTouchEvent.implementation = function (event) {
            let ret = this.dispatchTouchEvent(event);
            LOG("\n" + getLine(25) + " dispatchTouchEvent " + getLine(25), LogColor.YELLOW);
            LOG(ret + "\t" + event, LogColor.C36);
            return ret;
        };
    });
};
exports.HookMotionEvent = HookMotionEvent;
const setClick = (x, y) => {
    if (x == undefined || y == undefined)
        return;
    Java.perform(() => {
        let Instrumentation = Java.use("android.app.Instrumentation");
        let SystemClock = Java.use("android.os.SystemClock");
        let MotionEvent = Java.use("android.view.MotionEvent");
        let inst = Instrumentation.$new();
        let downTime = SystemClock.uptimeMillis();
        let downEvent = MotionEvent.obtain(downTime, downTime, 0, x, y, 0);
        let upTime = SystemClock.uptimeMillis();
        let upEvent = MotionEvent.obtain(upTime, upTime, 1, x, y, 0);
        inst.sendPointerSync(downEvent);
        inst.sendPointerSync(upEvent);
    });
};
exports.setClick = setClick;
globalThis.HookMotionEvent = HookMotionEvent;
globalThis.setClick = setClick;
},{}],316:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./click");
require("./info");
require("./others");
require("./logcat");
require("./classUtils");
require("./classLoader");
},{"./classLoader":313,"./classUtils":314,"./click":315,"./info":317,"./logcat":318,"./others":319}],317:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.launchApp = exports.getApkInfo = void 0;
const fastest_levenshtein_1 = require("fastest-levenshtein");
const base_1 = require("../base/base");
const breaker_1 = require("../base/breaker");
const il2cppM_1 = require("../bridge/fix/il2cppM");
const formart_1 = require("../utils/formart");
function getApkInfo() {
    Java.perform(() => {
        LOGO(getLine(100));
        let context = Java.use('android.app.ActivityThread').currentApplication().getApplicationContext();
        let pkgInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 0);
        let appInfo = pkgInfo.applicationInfo.value;
        let labelRes = appInfo.labelRes.value;
        let strName = context.getResources().getString(labelRes);
        LOGD("[*]AppName\t\t" + strName + " (UID:" + appInfo.uid.value + ")\t ID:0x" + (appInfo.labelRes.value).toString(16));
        let flags = appInfo.flags.value;
        LOGZ("\t\t\tBackupable -> " + ((flags & 32768) != 0) + "\t" + "Debugable -> " + ((flags & 2) != 0));
        let str_pkgName = context.getPackageName();
        LOGD("\n[*]PkgName\t\t" + str_pkgName);
        let verName = pkgInfo.versionName.value;
        let verCode = pkgInfo.versionCode.value;
        let targetSdkVersion = pkgInfo.applicationInfo.value.targetSdkVersion.value;
        LOGD("\n[*]Verison\t\t{ " + verName + " / " + verCode + " }\t(targetSdkVersion:" + targetSdkVersion + ")");
        let appSize = Java.use("java.io.File").$new(appInfo.sourceDir.value).length();
        LOGD("\n[*]AppSize\t\t" + appSize + "\t(" + (appSize / 1024 / 1024).toFixed(2) + " MB)");
        LOGD("\n[*]Time\t\t\tInstallTime\t" + new Date(pkgInfo.firstInstallTime.value).toLocaleString());
        LOGD("\t\t\tUpdateTime\t" + new Date(pkgInfo.lastUpdateTime.value).toLocaleString());
        let ApkLocation = appInfo.sourceDir.value;
        let TempFile = appInfo.dataDir.value;
        LOGD("\n[*]Location\t\t" + ApkLocation + "\n\t\t\t" + getLibPath() + "\n\t\t\t" + TempFile);
        let pis = context.getPackageManager().getPackageInfo(str_pkgName, 0x00000040);
        let hexDigist = (pis.signatures.value)[0].toByteArray();
        LOGD("\n[*]Signatures\t\tMD5\t " + hexdigest(hexDigist, 'MD5') +
            "\n\t\t\tSHA-1\t " + hexdigest(hexDigist, 'SHA-1') +
            "\n\t\t\tSHA-256\t " + hexdigest(hexDigist, 'SHA-256'));
        LOGD("\n[*]unity.build-id\t" + getMetaData('unity.build-id'));
        LOGO(getLine(100));
    });
    function getMetaData(key) {
        let context = Java.use('android.app.ActivityThread').currentApplication().getApplicationContext();
        let appInfo = context.getPackageManager().getApplicationInfo(context.getPackageName(), 0x00000080);
        let metaData = appInfo.metaData.value;
        if (null != metaData) {
            return metaData.getString(key);
        }
        return "...";
    }
    function hexdigest(paramArrayOfByte, algorithm) {
        const hexDigits = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102];
        let localMessageDigest = Java.use("java.security.MessageDigest").getInstance(algorithm);
        localMessageDigest.update(paramArrayOfByte);
        let arrayOfByte = localMessageDigest.digest();
        let arrayOfChar = [];
        for (let i = 0, j = 0;; i++, j++) {
            let strLenth = algorithm == "MD5" ? 16 : (algorithm == "SHA-1" ? 20 : 32);
            if (i >= strLenth)
                return Java.use("java.lang.String").$new(arrayOfChar);
            let k = arrayOfByte[i];
            arrayOfChar[j] = hexDigits[(0xF & k >>> 4)];
            arrayOfChar[++j] = hexDigits[(k & 0xF)];
        }
    }
    function getLibPath(name = undefined) {
        let retStr = "";
        Java.perform(() => {
            let context = Java.use('android.app.ActivityThread').currentApplication().getApplicationContext();
            let libPath = context.getApplicationInfo().nativeLibraryDir.value;
            retStr = libPath + "/" + (name == undefined ? "" : name);
        });
        return retStr;
    }
}
exports.getApkInfo = getApkInfo;
function getUnityInfo() {
    let line20 = getLine(20);
    let retStr = undefined;
    Application();
    function Application() {
        LOGE(`${line20} Application ${line20}`);
        LOGD(`Application.dataPath\t\t${Il2Cpp.Application.dataPath}`);
        LOGD(`Application.persistentDataPath\t${Il2Cpp.Application.persistentDataPath}`);
        LOGD(`Application.streamingAssetsPath\t${Il2Cpp.Application.streamingAssetsPath}`);
        LOGD(`Application.temporaryCachePath\t${Il2Cpp.Application.temporaryCachePath}`);
        LOGD(`Application.unityVersion\t\t${Il2Cpp.Application.unityVersion}`);
        LOGD(`Application.version\t\t${Il2Cpp.Application.version}`);
        LOGD(`Application.identifier\t\t${Il2Cpp.Application.identifier}`);
        LOGD(`Application.companyName\t\t${Il2Cpp.Application.companyName}`);
        LOGD(`Application.productName\t\t${Il2Cpp.Application.productName}`);
    }
}
let allMethodsCacheArray = new Array();
const cacheMethods = (withLog = true) => {
    if (withLog)
        LOGZ("Caching methods ...");
    let timeCurrent = Date.now();
    Il2Cpp.Domain.assemblies.forEach((assembly) => {
        assembly.image.classes.forEach((klass) => {
            klass.methods.forEach((item) => allMethodsCacheArray.push(item));
        });
    });
    if (withLog)
        LOGZ(`Caching methods done. ${allMethodsCacheArray.length} Methods . cost ${Date.now() - timeCurrent} ms\n`);
};
const printExp = (filter = "", findAll = false, formartMaxLine = -1, retArr = false) => {
    let countIndex = -1;
    let arrStrResult = new Array();
    let arrPtrResult = new Array();
    let enterTime = Date.now();
    findExport("il2cpp_", "libil2cpp.so", (item) => {
        if (item.type == "function" && item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
            formartAndSaveModuleDetails(item);
    });
    findExport("", "libunity.so", (item) => {
        if (item.type == "function" && item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
            formartAndSaveModuleDetails(item);
    });
    if (findAll) {
        if (allMethodsCacheArray.length == 0)
            cacheMethods();
        allMethodsCacheArray
            .filter((item) => item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
            .forEach(formartAndSaveIl2cppMehods);
    }
    else {
        new Il2Cpp.Class(findClass("Text")).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("Transform")).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("GameObject")).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("Application")).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("Input")).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("PlayerPrefs")).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("Object", ["UnityEngine.CoreModule"], false)).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
        new Il2Cpp.Class(findClass("Object", ["mscorlib"], false)).methods.forEach((item) => {
            if (item.name.toLocaleLowerCase().includes(filter.toLowerCase()))
                formartAndSaveIl2cppMehods(item);
        });
    }
    if (retArr)
        return arrPtrResult;
    newLine();
    arrStrResult.sort(fastest_levenshtein_1.distance).forEach(LOGD);
    LOGZ(`\nTake ${Date.now() - enterTime}ms to find ${arrStrResult.length} ${arrStrResult.length <= 1 ? "result" : "results"}`);
    if (formartMaxLine != -1 && formartMaxLine < 100)
        LOGZ(`\n${formartMaxLine} lines of results are shown recommended to be greater than 100`);
    newLine(1);
    function formartAndSaveModuleDetails(item) {
        if (retArr)
            return;
        let index = formart_1.formartClass.alignStr(`[${++countIndex}]`, 6);
        let result = `${index} ${formart_1.formartClass.alignStr(item.address, p_size * 4)}  --->   ${item.address.sub(soAddr)}\t${item.name}`;
        if (formartMaxLine != -1 && formartMaxLine > 10)
            result = formart_1.formartClass.alignStr(result, formartMaxLine);
        arrStrResult.push(result);
    }
    function formartAndSaveIl2cppMehods(item) {
        if (retArr) {
            arrPtrResult.push(item);
            return;
        }
        let index = formart_1.formartClass.alignStr(`[${++countIndex}]`, 6);
        let result = `${index} ${formart_1.formartClass.alignStr(item.handle, p_size * 4)}  --->   ${item.relativeVirtualAddress}\t${item.class.name}( ${item.class.handle} ) | ${(0, il2cppM_1.getMethodDesFromMethodInfo)(item)}`;
        if (formartMaxLine != -1 && formartMaxLine > 10)
            result = formart_1.formartClass.alignStr(result, formartMaxLine);
        arrStrResult.push(result);
    }
};
const AddressToMethod = (mPtr, withLog = true) => {
    allMethodsCacheArray.length == 0 ? cacheMethods(withLog) : null;
    if (typeof mPtr == "string" && String(mPtr).startsWith("0x"))
        mPtr = ptr(mPtr);
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    let result = allMethodsCacheArray.find((item) => item.virtualAddress.equals(mPtr) || item.relativeVirtualAddress.equals(mPtr));
    if (result)
        return result;
    throw new Error(`Can't find method by address ${mPtr}`);
};
const AddressToMethodToString = (mPtr, simple = true) => {
    if (simple)
        return base_1.HookerBase.MethodToShow(AddressToMethod(mPtr));
    let method = AddressToMethod(mPtr);
    let ImageName = method.class.image.name;
    let NameSpace = method.class.namespace;
    let MethodName = method.class.name;
    let maxLen = Math.max(ImageName.length, NameSpace.length, MethodName.length) + 1;
    ImageName = formart_1.formartClass.alignStr(ImageName, maxLen);
    NameSpace = formart_1.formartClass.alignStr(NameSpace, maxLen);
    MethodName = formart_1.formartClass.alignStr(MethodName, maxLen);
    let line1 = `image\t\t${ImageName} @ ${method.class.image.handle}`;
    let line2 = `namespace\t${NameSpace.trim().length == 0 ? formart_1.formartClass.centerStr("---", maxLen) : NameSpace} @ ${method.class.handle}`;
    let line3 = `class\t\t${MethodName} @ ${method.class.handle}`;
    let line4 = `methodInfo\t${method.handle} -> ${method.virtualAddress} -> ${method.relativeVirtualAddress}`;
    let line5 = `methodName\t${(0, il2cppM_1.getMethodDesFromMethodInfo)(method)}`;
    let maxDispLen = Math.max(line1.length, line2.length, line3.length, line4.length, line5.length) + 4;
    LOGW(getLine(maxDispLen));
    LOGD(`${line1}\n${line2}\n${line3}\n${line4}\n${line5}`);
    LOGW(getLine(maxDispLen));
};
const launchApp = (pkgName) => Java.perform(() => {
    let context = Java.use('android.app.ActivityThread').currentApplication().getApplicationContext();
    context.startActivity(Java.use("android.content.Intent").$new(context.getPackageManager().getLaunchIntentForPackage(pkgName)));
});
exports.launchApp = launchApp;
globalThis.bp = (filterName, breakMethodInfo = false) => {
    printExp(filterName, true, -1, true)
        .forEach((item) => {
        if (!item.virtualAddress.isNull())
            breakMethodInfo ? b(item.handle) : breaker_1.Breaker.attachMethod(item);
    });
};
Reflect.set(globalThis, "launchApp", launchApp);
Reflect.set(globalThis, "getApkInfo", getApkInfo);
Reflect.set(globalThis, "printExp", printExp);
Reflect.set(globalThis, "getUnityInfo", getUnityInfo);
Reflect.set(globalThis, "AddressToMethod", AddressToMethod);
Reflect.set(globalThis, "AddressToMethodToString", AddressToMethodToString);
},{"../base/base":4,"../base/breaker":5,"../bridge/fix/il2cppM":18,"../utils/formart":331,"fastest-levenshtein":339}],318:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HookJavaLog = void 0;
const formart_1 = require("../utils/formart");
const HookJavaLog = () => {
    Java.perform(() => {
        var class_name = Java.use("android.util.Log");
        class_name.isLoggable.overload("java.lang.String", "int").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " isLoggable was called:");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.d.overload("java.lang.String", "java.lang.String").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " DEBUG (d):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.d.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function (tag, message, error) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " DEBUG (d):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            LOGD("\targ3 : " + error.toString());
            return true;
        };
        class_name.e.overload("java.lang.String", "java.lang.String").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " ERROR (e):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.e.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function (tag, message, error) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " ERROR (e):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            LOGD("\targ3 : " + error.toString());
            return true;
        };
        class_name.i.overload("java.lang.String", "java.lang.String").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " INFO (i):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.i.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function (tag, message, error) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " INFO (i):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            LOGD("\targ3 : " + error.toString());
            return true;
        };
        class_name.v.overload("java.lang.String", "java.lang.String").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " VERBOSE (v):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.v.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function (tag, message, error) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " VERBOSE (v):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            LOGD("\targ3 : " + error.toString());
            return true;
        };
        class_name.w.overload("java.lang.String", "java.lang.String").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " WARNING (w):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.w.overload("java.lang.String", "java.lang.Throwable").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " WARNING (w):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.w.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function (tag, message, error) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " WARNING (w):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            LOGD("\targ3 : " + error.toString());
            return true;
        };
        class_name.wtf.overload("java.lang.String", "java.lang.String").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " WTF (wtf):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.wtf.overload("java.lang.String", "java.lang.Throwable").implementation = function (tag, message) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " WTF (wtf):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            return true;
        };
        class_name.wtf.overload("java.lang.String", "java.lang.String", "java.lang.Throwable").implementation = function (tag, message, error) {
            LOGD("[*] " + formart_1.formartClass.getTime() + " WTF (wtf):");
            LOGD("\targ1 : " + tag.toString());
            LOGD("\targ2 : " + message.toString());
            LOGD("\targ3 : " + error.toString());
            return true;
        };
    });
};
exports.HookJavaLog = HookJavaLog;
globalThis.HookJavaLog = HookJavaLog;
},{"../utils/formart":331}],319:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Toast = void 0;
var Toast = (msg) => {
    Java.scheduleOnMainThread(() => {
        let context = Java.use('android.app.ActivityThread').currentApplication().getApplicationContext();
        Java.use("android.widget.Toast").makeText(context, Java.use("java.lang.String").$new(msg), 1).show();
    });
};
exports.Toast = Toast;
globalThis.Toast = Toast;
},{}],320:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./std/_include");
},{"./std/_include":321}],321:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./std_deque");
require("./std_string");
require("./std_vector");
},{"./std_deque":322,"./std_string":323,"./std_vector":324}],322:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class StdDeque {
    constructor(addr, valueSize, introspectElement) {
        this.addr = addr;
        this.valueSize = valueSize;
        this.introspectElement = introspectElement;
    }
    get DEQUESIZ() {
        return this.valueSize <= 1 ? 16 :
            this.valueSize <= 2 ? 8 :
                this.valueSize <= 4 ? 4 :
                    this.valueSize <= 8 ? 2 :
                        1;
    }
    get containerProxy() {
        return this.addr.readPointer();
    }
    get map() {
        return this.addr.add(Process.pointerSize).readPointer();
    }
    get mapsize() {
        return this.addr.add(Process.pointerSize * 2).readPointer();
    }
    get myoff() {
        return this.addr.add(Process.pointerSize * 3).readPointer();
    }
    get mysize() {
        return this.addr.add(Process.pointerSize * 4).readPointer();
    }
    get contents() {
        const r = [];
        const DEQUESIZ = this.DEQUESIZ;
        const map = this.map;
        const mapsize = this.mapsize;
        const myoff = this.myoff.toInt32();
        const mysize = this.mysize.toInt32();
        for (let i = myoff; i < myoff + mysize; i++) {
            const wrappedIndex = i % mapsize;
            const blockIndex = Math.floor(wrappedIndex / DEQUESIZ);
            const off = wrappedIndex % DEQUESIZ;
            const blockAddr = map.add(Process.pointerSize * blockIndex).readPointer();
            const elemAddr = blockAddr.add(this.valueSize * off);
            let elem;
            if (this.introspectElement) {
                elem = this.introspectElement(elemAddr);
            }
            else {
                elem = elemAddr.readByteArray(this.valueSize);
            }
            r.push(elem);
        }
        return r;
    }
    toString() {
        return "deque@" + this.addr +
            "{ map=" + this.map +
            ", offset=" + this.myoff +
            ", size=" + this.mysize +
            ", contents: " + this.contents + "}";
    }
}
exports.default = StdDeque;
},{}],323:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BUF_SIZE = 16;
class StdString {
    constructor(addr) {
        this.addr = addr;
    }
    get bufAddr() {
        if (this.reservedSize.compare(16) > 0) {
            return this.addr.readPointer();
        }
        else {
            return this.addr;
        }
    }
    get size() {
        return this.addr.add(BUF_SIZE).readPointer();
    }
    get reservedSize() {
        return this.addr.add(BUF_SIZE).add(Process.pointerSize).readPointer();
    }
    toString() {
        const size = this.size;
        if (size.isNull()) {
            return "<EMPTY std::string>";
        }
        return Memory.readCString(this.bufAddr, size.toInt32());
    }
}
exports.default = StdString;
},{}],324:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class StdVector {
    constructor(addr, options) {
        this.addr = addr;
        this.elementSize = options.elementSize ? options.elementSize : Process.pointerSize;
        this.introspectElement = options.introspectElement;
    }
    get myfirst() {
        return this.addr.readPointer();
    }
    get mylast() {
        return this.addr.add(Process.pointerSize).readPointer();
    }
    get myend() {
        return this.addr.add(2 * Process.pointerSize).readPointer();
    }
    countBetween(begin, end) {
        if (begin.isNull()) {
            return 0;
        }
        const delta = end.sub(begin);
        return delta.toInt32() / this.elementSize;
    }
    get size() {
        return this.countBetween(this.myfirst, this.mylast);
    }
    get capacity() {
        return this.countBetween(this.myfirst, this.myend);
    }
    toString() {
        let r = "std::vector(" + this.myfirst + ", " + this.mylast + ", " + this.myend + ")";
        r += "{ size: " + this.size + ", capacity: " + this.capacity;
        if (this.introspectElement) {
            r += ", content: [";
            const first = this.myfirst;
            if (!first.isNull()) {
                const last = this.mylast;
                for (let p = first; p.compare(last) < 0; p = p.add(this.elementSize)) {
                    if (p.compare(first) > 0) {
                        r += ", ";
                    }
                    r += this.introspectElement(p);
                }
            }
            r += "]";
        }
        r += " }";
        return r;
    }
}
exports.default = StdVector;
},{}],325:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.allocVector = exports.allocUStr = exports.allocCStr = exports.alloc = void 0;
const enum_1 = require("../base/enum");
const allocStrInner = (str, type = enum_1.TYPE_STR.C_STR) => type == enum_1.TYPE_STR.C_STR ? Memory.allocUtf8String(str) : Il2Cpp.Api._stringNew(Memory.allocUtf8String(str));
const allocCStr = (str) => allocStrInner(str, enum_1.TYPE_STR.C_STR);
exports.allocCStr = allocCStr;
const allocUStr = (str) => allocStrInner(str, enum_1.TYPE_STR.U_STR);
exports.allocUStr = allocUStr;
const allocP = (size = Process.pointerSize) => Memory.alloc(size);
const alloc = (size = 1) => allocP(size * p_size);
exports.alloc = alloc;
function allocVector(x = 0, y = 0, z = 0, w) {
    let argsLength = arguments.length;
    argsLength = argsLength == 0 ? 3 : argsLength;
    let temp_vector = alloc(argsLength + 1);
    for (let index = 0; index < argsLength; ++index)
        temp_vector.add(Process.pointerSize * index).writeFloat(arguments[index] == undefined ? 0 : arguments[index]);
    temp_vector.add(Process.pointerSize * argsLength).writeInt(0);
    return temp_vector;
}
exports.allocVector = allocVector;
globalThis.allocCStr = allocCStr;
globalThis.allocUStr = allocUStr;
globalThis.allocVector = allocVector;
globalThis.alloc = alloc;
globalThis.allocP = allocP;
},{"../base/enum":6}],326:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runOnce = exports.cacheInstances = void 0;
function cacheInstances(Class) {
    const instanceCache = new Map();
    return new Proxy(Class, {
        construct(Target, argArray) {
            const handle = argArray[0].toUInt32();
            if (!instanceCache.has(handle)) {
                instanceCache.set(handle, new Target(argArray[0]));
            }
            return instanceCache.get(handle);
        }
    });
}
exports.cacheInstances = cacheInstances;
const runOnceCache = new Map();
function runOnce(name) {
    return function decorator(t, n, descriptor) {
        const original = descriptor.value;
        if (!runOnceCache.has(original)) {
            if (typeof original === 'function') {
                descriptor.value = function (...args) {
                    console.log("Logged at:", new Date().toLocaleString());
                    const result = original.apply(this, args);
                    console.log(`Result from ${name}: ${result}`);
                    runOnceCache.set(original, result);
                    return result;
                };
            }
        }
        return runOnceCache.get(original);
    };
}
exports.runOnce = runOnce;
},{}],327:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.callFunctionRA = exports.callFunctionRCS = exports.callFunctionRUS = exports.callFunctionRF = exports.callFunctionRS = exports.callFunctionRI = exports.callFunctionRB = exports.callFunction = void 0;
const checkP_1 = require("./checkP");
const reader_1 = require("./reader");
function callFunction(value, ...args) {
    try {
        if (value == undefined)
            return ptr(0x0);
        for (let i = 1; i <= (arguments.length < 5 ? 5 : arguments.length) - 1; i++)
            arguments[i] = arguments[i] == undefined ? ptr(0x0) : ptr(String(arguments[i]));
        return new NativeFunction((0, checkP_1.checkPointer)(value, true), 'pointer', ['pointer', 'pointer', 'pointer', 'pointer'])(arguments[1], arguments[2], arguments[3], arguments[4]);
    }
    catch (e) {
        LOG(e, LogColor.C95);
        return ptr(0);
    }
}
exports.callFunction = callFunction;
function callFunctionWithOutError(value, ...args) {
    try {
        if (value == undefined)
            return ptr(0x0);
        for (let i = 1; i <= (arguments.length < 5 ? 5 : arguments.length) - 1; i++)
            arguments[i] = arguments[i] == undefined ? ptr(0x0) : ptr(String(arguments[i]));
        return new NativeFunction((0, checkP_1.checkPointer)(value, true), 'pointer', ['pointer', 'pointer', 'pointer', 'pointer'])(arguments[1], arguments[2], arguments[3], arguments[4]);
    }
    catch (e) {
        return ptr(0);
    }
}
const callFunctionRB = (mPtr, ...args) => callFunctionRI(mPtr, ...args) == 1;
exports.callFunctionRB = callFunctionRB;
const callFunctionRI = (mPtr, ...args) => callFunctionWithOutError(mPtr, ...args).toInt32();
exports.callFunctionRI = callFunctionRI;
const callFunctionRS = (mPtr, ...args) => (0, reader_1.readSingle)(callFunctionWithOutError(mPtr, ...args));
exports.callFunctionRS = callFunctionRS;
const callFunctionRF = (mPtr, ...args) => alloc(p_size * 2).writePointer(callFunctionWithOutError(mPtr, ...args)).readFloat();
exports.callFunctionRF = callFunctionRF;
const callFunctionRUS = (mPtr, ...args) => (0, reader_1.readU16)(callFunction(mPtr, ...args));
exports.callFunctionRUS = callFunctionRUS;
const callFunctionRCS = (mPtr, ...args) => {
    let tmpRet = callFunction(mPtr, ...args).readCString();
    return tmpRet == null ? "" : tmpRet;
};
exports.callFunctionRCS = callFunctionRCS;
const callFunctionRA = (mPtr, ...args) => (0, reader_1.showArray)(callFunctionWithOutError(mPtr, ...args));
exports.callFunctionRA = callFunctionRA;
globalThis.callFunction = callFunction;
globalThis.callFunctionRB = callFunctionRB;
globalThis.callFunctionRI = callFunctionRI;
globalThis.callFunctionRS = callFunctionRS;
globalThis.callFunctionRF = callFunctionRF;
globalThis.callFunctionRUS = callFunctionRUS;
globalThis.callFunctionRCS = callFunctionRCS;
globalThis.callFunctionRA = callFunctionRA;
globalThis.callFunctionWithOutError = callFunctionWithOutError;
},{"./checkP":328,"./reader":335}],328:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkPointer = void 0;
const checkPointer = (value, throwErr = false, showLog = false) => {
    if (Il2Cpp.module.base.isNull())
        return ptr(value);
    if (Process.arch == 'arm64' && typeof value === "string" && value.trim().startsWith('0x'))
        value = Number(value);
    if (typeof value === "number") {
        return calPointer(ptr(value));
    }
    else if (typeof value === "string") {
        return Module.findExportByName(null, value);
    }
    else if (typeof value === "function") {
        return value;
    }
    else if (typeof value === "object") {
        if (value instanceof NativePointer) {
            return calPointer(value);
        }
        else if (value instanceof (Array)) {
            if (!checkValue(value)) {
                if (throwErr)
                    throw new Error("checkPointer: checkValue Error");
                else
                    return ptr(0);
            }
            switch (value.length) {
                case 1:
                    return Module.findExportByName(null, value[0]);
                case 2:
                    return Module.findExportByName(value[0], value[1]);
                case 3:
                    return find_method(value[0], value[1], value[2], value[3]);
                default:
                    if (throwErr)
                        throw new Error("checkPointer:UnKnow value length \nArray<> length must be 1,2,3");
                    else
                        return ptr(0);
            }
        }
        else {
            if (throwErr)
                throw new Error("checkPointer: Error type");
            else
                return ptr(0);
        }
    }
    return ptr(0);
    function calPointer(mPtr) {
        if (mPtr.isNull() || !mPtr.compare(soAddr))
            return mPtr;
        try {
            let tmpValue = Process.findModuleByAddress(mPtr);
            if (tmpValue === null) {
                let addValue = Il2Cpp.module.base.add(mPtr);
                let tmpModule = Process.findModuleByAddress(addValue);
                if (tmpModule === null) {
                    if (throwErr)
                        throw new Error("checkPointer: can't find module");
                    else
                        return ptr(0);
                }
                else
                    return addValue;
            }
            else
                return mPtr;
        }
        catch (error) {
            if (throwErr)
                throw error;
            return ptr(0);
        }
    }
    function checkValue(value) {
        if (value.length == 3) {
            if (typeof value[0] !== "string")
                return false;
            if (typeof value[1] !== "string")
                return false;
            if (typeof value[2] !== "number")
                return false;
        }
        for (let i = 0; i < value.length; i++) {
            if (value.length != 3) {
                if (typeof value[i] !== "string")
                    return false;
            }
        }
        return true;
    }
};
exports.checkPointer = checkPointer;
globalThis.checkPointer = exports.checkPointer;
globalThis.checkCmdInput = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (typeof mPtr == "string" && (String(mPtr).startsWith("0x") || String(mPtr).startsWith("0X")))
        mPtr = ptr(mPtr);
    if (mPtr.isNull())
        throw new Error("mPtr can't be null");
    return mPtr;
};
const getMD = (mdName = "libil2cpp.so") => {
    let md = Process.findModuleByName("libil2cpp.so");
    if (typeof mdName === "string") {
        try {
            md = Process.findModuleByName(mdName);
        }
        catch (error) {
            throw error;
        }
    }
    else if (typeof mdName === "number") {
        try {
            md = Process.getModuleByAddress(mdName);
        }
        catch (error) {
            md = Process.findModuleByName(mdName);
        }
    }
    else {
        mdName = ptr(mdName);
    }
    if (md == null)
        throw new Error("getSubBasePtr: can't find module");
    return md;
};
globalThis.getSubBasePtr = (mPtr) => {
    let md = getMD(mPtr);
    return mPtr.sub(md.base);
};
globalThis.getSubBaseDes = (mPtr) => {
    let md = getMD(mPtr);
    return `${mPtr.sub(md.base)} <--- ${mPtr} @ ${md.name} (${md.base})`;
};
},{}],329:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJclassName = exports.mapValueToArray = exports.PTR2NativePtr = exports.filterDuplicateOBJ = exports.checkCtx = exports.cancelAllNopedFunction = exports.cancelNop = exports.nopFunction = exports.replaceFunction = exports.detachAll = exports.attachNative = exports.SeeTypeToString = exports.getFunctionAddrFromCls = void 0;
const enum_1 = require("../base/enum");
const globle_1 = require("../base/globle");
function PTR2NativePtr(mPtr) {
    if (mPtr == undefined)
        return ptr(0);
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    return mPtr;
}
exports.PTR2NativePtr = PTR2NativePtr;
var passValueKey;
(function (passValueKey) {
    passValueKey["org"] = "org";
    passValueKey["src"] = "src";
    passValueKey["enter"] = "enter";
    passValueKey["leave"] = "leave";
    passValueKey["time"] = "time";
})(passValueKey || (passValueKey = {}));
let map_attach_listener = (0, globle_1.GET_MAP)(enum_1.MapKAY.map_attach_listener);
const attachNative = (mPtr, mOnEnter, mOnLeave, needRecord = true) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (mPtr instanceof NativePointer && mPtr.isNull())
        return;
    var passValue = new Map();
    passValue.set(passValueKey.org, mPtr);
    passValue.set(passValueKey.src, mPtr);
    passValue.set(passValueKey.enter, mOnEnter);
    passValue.set(passValueKey.leave, mOnLeave);
    passValue.set(passValueKey.time, new Date());
    mPtr = checkPointer(mPtr);
    let Listener = Interceptor.attach(mPtr, {
        onEnter: function (args) {
            if (mOnEnter != undefined)
                mOnEnter(args, this.context, passValue);
        },
        onLeave: function (retval) {
            if (mOnLeave != undefined)
                mOnLeave(retval, this.context, passValue);
        }
    });
    if (needRecord)
        map_attach_listener.set(String(mPtr), Listener);
};
exports.attachNative = attachNative;
let arr_nop_addr = new Array();
var nopFunction = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (mPtr == undefined)
        return;
    replaceFunction(mPtr, () => ptr(0), true);
};
exports.nopFunction = nopFunction;
var cancelNop = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (mPtr == ptr(0))
        return;
    mPtr = checkPointer(mPtr);
    Interceptor.revert(mPtr);
    for (let i = 0; i < arr_nop_addr.length; i++) {
        if (String(arr_nop_addr[i]) == String(mPtr)) {
            arr_nop_addr = arr_nop_addr.splice(arr_nop_addr[i], 1);
        }
    }
};
exports.cancelNop = cancelNop;
var cancelAllNopedFunction = () => arr_nop_addr.forEach((addr) => Interceptor.revert(addr));
exports.cancelAllNopedFunction = cancelAllNopedFunction;
const detachAll = (mPtr) => {
    let map_attach_listener = (0, globle_1.GET_MAP)(enum_1.MapKAY.map_attach_listener);
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (mPtr == undefined) {
        map_attach_listener.clear();
        Interceptor.detachAll();
    }
    else {
        let key = String(checkPointer(mPtr));
        let listener = map_attach_listener.get(key);
        if (listener != undefined) {
            listener.detach();
            map_attach_listener.delete(key);
        }
    }
};
exports.detachAll = detachAll;
function replaceFunction(mPtr, callBack, TYPENOP = true) {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    let src_ptr = mPtr;
    mPtr = checkPointer(mPtr);
    if (String(arr_nop_addr).indexOf(String(mPtr)) == -1) {
        arr_nop_addr.push(String(mPtr));
    }
    else {
        Interceptor.revert(mPtr);
    }
    let srcFunc = new NativeFunction(mPtr, 'pointer', ['pointer', 'pointer', 'pointer', 'pointer']);
    Interceptor.replace(mPtr, new NativeCallback((arg0, arg1, arg2, arg3) => {
        LOGW("\nCalled " + (TYPENOP ? "Replaced" : "Nop") + " function ---> " + mPtr + " (" + src_ptr.sub(Il2Cpp.module.base) + ")");
        let ret = callBack(srcFunc, arg0, arg1, arg2, arg3);
        return ret == null ? ptr(0) : ret;
    }, 'pointer', ['pointer', 'pointer', 'pointer', 'pointer']));
}
exports.replaceFunction = replaceFunction;
const getFunctionAddrFromCls = (clsptr, funcName) => {
    if (typeof clsptr == "string")
        clsptr = findClass(clsptr);
    if (typeof clsptr == "number")
        clsptr = ptr(clsptr);
    let retArray = new Il2Cpp.Class(clsptr).methods;
    for (let i = 0; i < retArray.length; i++)
        if (retArray[i].name.indexOf(funcName) != -1)
            return retArray[i].relativeVirtualAddress;
    return -1;
};
exports.getFunctionAddrFromCls = getFunctionAddrFromCls;
const SeeTypeToString = (obj, b) => {
    if (typeof obj == "number")
        obj = ptr(obj);
    if (obj == undefined || obj == ptr(0))
        return;
    let s_type = callFunction(find_method("UnityEngine.CoreModule", "Object", "ToString", 0), obj);
    if (b == undefined) {
        LOG(readU16(s_type));
    }
    else {
        return readU16(s_type);
    }
};
exports.SeeTypeToString = SeeTypeToString;
const getJclassName = (jclsName, ShouldRet) => {
    ShouldRet == undefined ? false : true;
    let pVoid = callFunction((0, globle_1.GET_F)(enum_1.EpFunc.DecodeJObject), (0, globle_1.GET_F)(enum_1.EpFunc.ArtCurrent), jclsName);
    let k_class = callFunction((0, globle_1.GET_F)(enum_1.EpFunc.GetDescriptor), pVoid, alloc());
    if (ShouldRet)
        return String(k_class.readCString());
    LOG("\n" + String(k_class.readCString()) + "\n", enum_1.LogColor.C36);
};
exports.getJclassName = getJclassName;
function checkCtx(ctx, type = "LR") {
    let TMP = getPlatformCtx(ctx);
    let lr = TMP.lr;
    let pc = TMP.pc;
    let md_lr = Process.findModuleByAddress(lr);
    if (type == "LR" && md_lr != null)
        return lr.sub(md_lr.base) + `|${md_lr.name}`;
    let md_pc = Process.findModuleByAddress(pc);
    if (type == "PC" && md_pc != null)
        return pc.sub(md_pc.base) + `|${md_pc.name}`;
    if (type == "SP")
        return String(TMP.sp).toString();
    return JSON.stringify(ctx);
}
exports.checkCtx = checkCtx;
const mapValueToArray = (map) => {
    var list = [];
    for (var key in map)
        list.push([key, map.get(key)]);
    return list;
};
exports.mapValueToArray = mapValueToArray;
var runOnMain = (UpDatePtr, Callback) => {
    if (Callback == undefined)
        return;
    if (typeof (UpDatePtr) == "function") {
        Callback = UpDatePtr;
        UpDatePtr = find_method("UnityEngine.UI", "CanvasUpdateRegistry", "PerformUpdate", 0);
    }
    A(UpDatePtr, () => {
        if (Callback != undefined && Callback != null) {
            try {
                Callback();
            }
            catch (e) {
                LOGE(e);
            }
            Callback = () => { };
        }
    });
};
var SendMessage = (str0, str1, str2 = "") => {
    Java.perform(() => Java.use("com.unity3d.player.UnityPlayer").UnitySendMessage(str0, str1, str2));
};
var SendMessageImpl = (platform) => {
    switch (platform) {
        case "IronSource":
            IronSourceEvents();
            break;
        case "MaxSdkCallbacks":
            MaxSdkCallbacks();
            break;
        case "MoPubManager":
            MoPubManager();
            break;
        case "TPluginsGameObject":
            TTPluginsGameObject();
            break;
        default:
            IronSourceEvents();
            MaxSdkCallbacks();
            MoPubManager();
            TTPluginsGameObject();
            break;
    }
    SendMessage('GameAnalytics', 'OnCommandCenterUpdated', '');
    SendMessage('GameAnalytics', 'OnRemoteConfigsUpdated', '');
    SendMessage('UnityFacebookSDKPlugin', 'OnInitComplete', '{"key_hash":"0eWmEB4CY7TpepNbZdxCOaz2Crs=\n"}');
    function IronSourceEvents() {
        SendMessage("IronSourceEvents", "onRewardedVideoAvailabilityChanged", "true");
        SendMessage("IronSourceEvents", "onRewardedVideoAdShowFailedDemandOnly", "true");
        SendMessage('IronSourceEvents', 'onInterstitialAdReady', '');
        SendMessage("IronSourceEvents", "onRewardedVideoAdOpened", "");
        SendMessage("IronSourceEvents", "onRewardedVideoAdStarted", "");
        SendMessage("IronSourceEvents", "onRewardedVideoAdEnded", "");
        SendMessage("IronSourceEvents", "onRewardedVideoAdRewarded", "{'placement_reward_name':'Virtual Item','placement_name':'rewardedVideo','placement_reward_amount':'1','placement_id':'2'}");
        SendMessage("IronSourceEvents", "onRewardedVideoAdClosed", "");
        SendMessage("IronSourceRewardedVideoAndroid", "onRewardedVideoAvailabilityChanged", "true");
        SendMessage("IronSourceRewardedVideoAndroid", "onRewardedVideoAdShowFailedDemandOnly", "true");
        SendMessage('IronSourceRewardedVideoAndroid', 'onInterstitialAdReady', '');
        SendMessage("IronSourceRewardedVideoAndroid", "onRewardedVideoAdOpened", "");
        SendMessage("IronSourceRewardedVideoAndroid", "onRewardedVideoAdStarted", "");
        SendMessage("IronSourceRewardedVideoAndroid", "onRewardedVideoAdEnded", "");
        SendMessage("IronSourceRewardedVideoAndroid", "OnRewardedVideoAdRewarded", "{'placement_reward_name':'Virtual Item','placement_name':'rewardedVideo','placement_reward_amount':'1','placement_id':'2'}");
        SendMessage("IronSourceRewardedVideoAndroid", "onRewardedVideoAdClosed", "");
    }
    function MaxSdkCallbacks() {
        SendMessage('MaxSdkCallbacks', 'ForwardEvent', 'networkName=AppLovin\nname=OnRewardedAdRevenuePaidEvent\nrevenue=0.014579974174499511\nplacement=\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\n');
        SendMessage('MaxSdkCallbacks', 'ForwardEvent', 'networkName=AppLovin\nname=OnRewardedAdDisplayedEvent\nrevenue=0.014579974174499511\nplacement=\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\n');
        SendMessage('MaxSdkCallbacks', 'ForwardEvent', 'revenue=0.014579974174499511\nnetworkName=AppLovin\nname=OnRewardedAdReceivedRewardEvent\nplacement=\nrewardAmount=0\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\nrewardLabel=\n');
        SendMessage('MaxSdkCallbacks', 'ForwardEvent', 'networkName=AppLovin\nname=OnRewardedAdHiddenEvent\nrevenue=0.014579974174499511\nplacement=\nadUnitId=e01cb721520cd33c\ncreativeId=11831000\n');
        SendMessage('MaxSdkCallbacks', 'OnRollicAdsRewardedVideoClickedEvent', 'name=OnSdkInitializedEvent\nconsentDialogState=2\ncountryCode=SG\n');
        SendMessage("MaxSdkCallbacks", "OnRollicAdsRewardedVideoClosedEvent", "name=OnRewardedAdDisplayedEvent\nadUnitId=ec1a772e0459f45b");
        SendMessage("MaxSdkCallbacks", "OnRollicAdsRewardedVideoReceivedRewardEvent", "name=OnRewardedAdReceivedRewardEvent\nrewardAmount=0\nadUnitId=ec1a772e0459f45b\nrewardLabel=");
        SendMessage("MaxSdkCallbacks", "OnRollicAdsRewardedVideoShownEvent", "name=OnRewardedAdHiddenEvent\nadUnitId=ec1a772e0459f45b");
        SendMessage("MaxSdkCallbacks", "OnRollicAdsRewardedVideoLoadedEvent", "name=OnRewardedAdLoadedEvent\nadUnitId=ec1a772e0459f45b");
    }
    function MoPubManager() {
        SendMessage("UnityFacebookSDKPlugin", "UnityFacebookSDKPlugin", "{\"key_hash\":\"NgS2u0aEWjJAWRbMgtyAolzO6s8=\\n\"}");
        SendMessage("MoPubManager", "EmitSdkInitializedEvent", "[\"0fe07d2ca88549ff9598aed6c45f0773\",\"70\"]");
        SendMessage("MoPubManager", "EmitInterstitialLoadedEvent", "[\"a44632b619174dfa98c46420592a3756\"]");
        SendMessage('MoPubManager', 'EmitAdLoadedEvent', '["f7a8241fad1041bda59f303eae75be2d","320","50"]');
        SendMessage("MoPubManager", "EmitRewardedVideoLoadedEvent", "[\"a44632b619174dfa98c46420592a3756\"]");
        SendMessage("MoPubManager", "EmitRewardedVideoShownEvent", "[\"a44632b619174dfa98c46420592a3756\"]");
        SendMessage('MoPubManager', 'EmitRewardedVideoReceivedRewardEvent', '["a44632b619174dfa98c46420592a3756","","0"]');
        SendMessage("MoPubManager", "EmitRewardedVideoClosedEvent", "[\"a44632b619174dfa98c46420592a3756\"]");
    }
    function TTPluginsGameObject() {
        SendMessage("TTPluginsGameObject", "OnRewardedAdsShown", "");
        SendMessage("TTPluginsGameObject", "OnRewardedAdsClosed", "{\"shouldReward\":true,\"network\":\"admob-unityads\",\"revenue\":0.00138,\"currency\":\"USD\",\"precision\":\"ESTIMATED\"}");
        SendMessage("TTPluginsGameObject", "OnRewardedAdsReady", "{\"loaded\":true}");
    }
};
const filterDuplicateOBJ = (objstr, maxCount = 10) => {
    if (!(0, globle_1.GET_MAP)(enum_1.MapKAY.outFilterMap).has(objstr)) {
        (0, globle_1.SET_MAP_VALUE)(enum_1.MapKAY.outFilterMap, objstr, 0);
        return 0;
    }
    let count = Number((0, globle_1.GET_MAP_VALUE)(enum_1.MapKAY.outFilterMap, objstr)) + 1;
    (0, globle_1.SET_MAP_VALUE)(enum_1.MapKAY.outFilterMap, objstr, count);
    return (count >= maxCount) ? -1 : count;
};
exports.filterDuplicateOBJ = filterDuplicateOBJ;
Number.prototype.add = (num) => {
    return Number(this) + Number(num);
};
globalThis.d = detachAll;
globalThis.A = attachNative;
globalThis.n = nopFunction;
globalThis.nn = cancelNop;
globalThis.nnn = cancelAllNopedFunction;
globalThis.R = replaceFunction;
globalThis.getJclassName = getJclassName;
globalThis.checkCtx = checkCtx;
globalThis.runOnMain = runOnMain;
globalThis.SendMessage = SendMessage;
globalThis.SendMessageImpl = SendMessageImpl;
},{"../base/enum":6,"../base/globle":8}],330:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printCtx = void 0;
const enum_1 = require("../base/enum");
var printCtx = (mPtr, range = 5, type = 0, redLine = enum_1.LogColor.WHITE, space = 0) => {
    if (Process.arch != "arm")
        return;
    mPtr = checkPointer(mPtr);
    if (mPtr.isNull())
        return;
    if (type != 0) {
        for (let offset = 0; offset < range; offset++)
            printLOG(mPtr, offset);
    }
    else {
        let max = range == undefined ? 5 : (range % 2 == 1 ? (range + 1) : range) / 2;
        let min = range == undefined ? -4 : max - range;
        for (let offset = min; offset < max; offset++)
            printLOG(mPtr, offset);
    }
    function printLOG(pointer, offset) {
        let cur_p = pointer.add(p_size * offset);
        let cur_value = String(cur_p.readPointer());
        if (Process.arch == "arm" && cur_value.length != 10)
            cur_value = cur_value.replace("000", "0000");
        let cur_tmp = Array.from(cur_value.toUpperCase());
        let cur_str = (cur_tmp.length == 10) ? cur_value : "";
        if (type == 1) {
            cur_str = cur_tmp[2] + cur_tmp[3] + ' ' + cur_tmp[4] + cur_tmp[5] + ' ' + cur_tmp[6] + cur_tmp[7] + ' ' + cur_tmp[8] + cur_tmp[9];
        }
        else if (type == 2) {
            cur_str = cur_tmp[8] + cur_tmp[9] + ' ' + cur_tmp[6] + cur_tmp[7] + ' ' + cur_tmp[4] + cur_tmp[5] + ' ' + cur_tmp[2] + cur_tmp[3];
        }
        try {
            LOG(getLine(space, "\t") + cur_p + "\t" + cur_str + "\t" + Instruction.parse(cur_p), redLine);
        }
        catch (e) { }
    }
};
exports.printCtx = printCtx;
globalThis.printCtx = printCtx;
},{"../base/enum":6}],331:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formartClass = void 0;
const enum_1 = require("../base/enum");
class formartClass {
    static printTitileA = (strTitle, color = enum_1.LogColor.C33) => formartClass.printTitile(strTitle, color, color, color);
    static printTitile = (strTitle, Line1 = enum_1.LogColor.C33, Line2 = enum_1.LogColor.C33, Line3 = enum_1.LogColor.C33) => {
        let len = strTitle.length + 2;
        LOG(` ${getLine(len)} `, Line1);
        LOG(`| ${strTitle} |`, Line2);
        LOG(` ${getLine(len)} `, Line3);
        return len;
    };
    static linesMap = new Map();
    static getLine = (length, fillStr = "-") => {
        let key = length + "|" + fillStr;
        if (formartClass.linesMap.get(key) != null)
            return formartClass.linesMap.get(key);
        for (var index = 0, tmpRet = ""; index < length; index++)
            tmpRet += fillStr;
        formartClass.linesMap.set(key, tmpRet);
        return tmpRet;
    };
    static alignStr(str, size = p_size * 2 + 3, fillStr = ".") {
        str = String(str);
        let srcSize = str.length;
        if (srcSize >= size) {
            str = str.substring(0, size - 1);
            str += fillStr;
        }
        else
            for (let i = size - srcSize; i > 0; i--)
                str += " ";
        return str;
    }
    static getTime = () => {
        let today = new Date();
        return today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
    };
    static insertStr(str1, n, str2) {
        var s1 = '';
        var s2 = '';
        if (str1.length < n) {
            return str1 + "" + str2;
        }
        else {
            s1 = str1.substring(0, n);
            s2 = str1.substring(n, str1.length);
            return `${s1}${str2}${s2}`;
        }
    }
    static getPtrFormart = (ptr, size = String(Il2Cpp.module.base).length) => {
        let str = ptr.toString(16);
        if (str.length > size)
            return str.substring(0, size - 1) + ".";
        for (let i = size - str.length; i > 0; i--)
            str += " ";
        return `0x${str}`;
    };
    static centerStr = (str = "...", size = Process.pointerSize + 2) => {
        if (size <= str.length)
            return str;
        let paddingNum = (size - str.length) / 2;
        return `${getLine(paddingNum, " ")}${str}${getLine(paddingNum, " ")}`;
    };
}
exports.formartClass = formartClass;
globalThis.insertStr = formartClass.insertStr;
},{"../base/enum":6}],332:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./alloc");
require("./cache");
require("./caller");
require("./checkP");
require("./common");
require("./formart");
require("./logger");
require("./math");
require("./reader");
require("./stack");
require("./context");
require("./stdString");
},{"./alloc":325,"./cache":326,"./caller":327,"./checkP":328,"./common":329,"./context":330,"./formart":331,"./logger":333,"./math":334,"./reader":335,"./stack":336,"./stdString":337}],333:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLine = exports.printLogColors = exports.LOGZ = exports.LOGH = exports.LOGO = exports.LOGD = exports.LOGG = exports.LOGE = exports.LOGW = exports.LOGS = exports.LOGJSON = exports.LOG = void 0;
const enum_1 = require("../base/enum");
const globle_1 = require("../base/globle");
const formart_1 = require("./formart");
const setNeedLog = (flag) => (0, globle_1.SET_G)(enum_1.GKEY.LogFlag, flag);
const getNeedLog = () => (0, globle_1.GET_GT)(enum_1.GKEY.LogFlag);
const LOG = (str, type = enum_1.LogColor.WHITE) => {
    switch (type) {
        case enum_1.LogColor.WHITE:
            console.log(str);
            break;
        case enum_1.LogColor.RED:
            console.error(str);
            break;
        case enum_1.LogColor.YELLOW:
            console.warn(str);
            break;
        default:
            console.log("\x1b[" + type + "m" + str + "\x1b[0m");
            break;
    }
};
exports.LOG = LOG;
const LOGJSON = (obj, type = enum_1.LogColor.C36, lines = 1) => (0, exports.LOG)(JSON.stringify(obj, null, lines), type);
exports.LOGJSON = LOGJSON;
const colorEndDes = "\x1b[0m";
const colorStartDes = (color) => {
    return `\x1b[${color}m`;
};
const LOGS = (str, colorDescription = [[0, str.length, enum_1.LogColor.RED]]) => {
    let localStr = str;
    for (let i = 0; i < colorDescription.length; i++) {
        const [start, end, color] = colorDescription[i];
        let strStart = colorStartDes(color);
        localStr = formart_1.formartClass.insertStr(localStr, start, strStart);
        localStr = formart_1.formartClass.insertStr(localStr, end + strStart.length, colorEndDes);
    }
    console.log(localStr);
};
exports.LOGS = LOGS;
const LOGW = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.YELLOW);
exports.LOGW = LOGW;
const LOGE = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.RED);
exports.LOGE = LOGE;
const LOGG = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.C32);
exports.LOGG = LOGG;
const LOGD = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.C36);
exports.LOGD = LOGD;
const LOGO = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.C33);
exports.LOGO = LOGO;
const LOGH = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.C96);
exports.LOGH = LOGH;
const LOGZ = (msg) => (0, exports.LOG)(msg, enum_1.LogColor.C90);
exports.LOGZ = LOGZ;
function printLogColors() {
    let str = "123456789";
    console.log("----------------  listLogColors  ----------------");
    for (let i = 30; i <= 37; i++) {
        console.log(`\t\t${colorStartDes(i)} C${i}\t${str} ${colorEndDes}`);
    }
    console.log("----------------------------------------------");
    for (let i = 40; i <= 47; i++) {
        console.log(`\t\t${colorStartDes(i)} C${i}\t${str} ${colorEndDes}`);
    }
    console.log("----------------------------------------------");
    for (let i = 90; i <= 97; i++) {
        console.log(`\t\t${colorStartDes(i)} C${i}\t${str} ${colorEndDes}`);
    }
    console.log("----------------------------------------------");
    for (let i = 100; i <= 107; i++) {
        console.log(`\t\t${colorStartDes(i)} C${i}\t${str} ${colorEndDes}`);
    }
    console.log("----------------------------------------------");
}
exports.printLogColors = printLogColors;
let linesMap = new Map();
const getLine = (length, fillStr = "-") => {
    if (length == 0)
        return "";
    let key = length + "|" + fillStr;
    if (linesMap.get(key) != null)
        return linesMap.get(key);
    for (var index = 0, tmpRet = ""; index < length; index++)
        tmpRet += fillStr;
    linesMap.set(key, tmpRet);
    return tmpRet;
};
exports.getLine = getLine;
globalThis.LOG = exports.LOG;
globalThis.LOGJSON = exports.LOGJSON;
globalThis.LOGW = exports.LOGW;
globalThis.LOGE = exports.LOGE;
globalThis.LOGG = exports.LOGG;
globalThis.LOGD = exports.LOGD;
globalThis.LOGO = exports.LOGO;
globalThis.LOGH = exports.LOGH;
globalThis.LOGZ = exports.LOGZ;
globalThis.getLine = exports.getLine;
globalThis.printLogColors = printLogColors;
globalThis.LogColor = enum_1.LogColor;
globalThis.newLine = (lines = 1) => (0, exports.LOG)((0, exports.getLine)(lines, "\n"));
},{"../base/enum":6,"../base/globle":8,"./formart":331}],334:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Random = exports.randomSeed = void 0;
function randomSeed() {
    return Math.floor(Math.random() * 2 ** 31);
}
exports.randomSeed = randomSeed;
class Random {
    seed;
    constructor(seed) {
        this.seed = seed;
    }
    next = () => this.seed ? ((2 ** 31 - 1) & (this.seed = Math.imul(48271, this.seed))) / 2 ** 31 : Math.random();
    nextInt = (min, max) => Math.floor(this.next() * (max - min + 1) + min);
}
exports.Random = Random;
},{}],335:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFloat = exports.seeHexA = exports.seeHexR = exports.showArray = exports.readU16 = exports.readInt64 = exports.readUInt64 = exports.readUInt = exports.readInt = exports.readBoolean = exports.readSingle = void 0;
const enum_1 = require("../base/enum");
const common_1 = require("./common");
const readSingle = (value) => alloc(2).writePointer(value).readFloat();
exports.readSingle = readSingle;
const readBoolean = (value) => alloc(0.25).writePointer(value).readU8() == 0x1;
exports.readBoolean = readBoolean;
const readInt = (value) => alloc().writePointer(value).readInt();
exports.readInt = readInt;
const readUInt = (value) => alloc(1).writePointer(value).readUInt();
exports.readUInt = readUInt;
const readInt64 = (value) => alloc(2).writePointer(value).readS64();
exports.readInt64 = readInt64;
const readUInt64 = (value) => alloc(2).writePointer(value).readU64();
exports.readUInt64 = readUInt64;
const readU16 = (mPtr) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (typeof mPtr == "string" && (String(mPtr).startsWith('0x') || String(mPtr).startsWith('0X')))
        mPtr = ptr(mPtr);
    if (mPtr instanceof NativePointer)
        mPtr = mPtr;
    if (mPtr == undefined || mPtr == 0)
        return "";
    try {
        return mPtr.add(p_size * 2 + 4).readUtf16String();
    }
    catch {
        return "";
    }
};
exports.readU16 = readU16;
const showArray = (mPtr, funcTransform) => {
    if (typeof mPtr == "number")
        mPtr = ptr(mPtr);
    if (mPtr == undefined || mPtr == ptr(0))
        return;
    let retPtr = mPtr;
    let arrLength = retPtr.add(p_size * 3).readUInt();
    LOGD(`\n[*] Array length : ${arrLength}  |  RET => ${retPtr}\n`);
    if (arrLength == 0)
        return;
    seeHexA(retPtr.add(p_size * 4), (arrLength > 32 ? 32 : arrLength) * p_size, false, enum_1.LogColor.C33);
    newLine();
    for (let i = 0; i < arrLength; ++i) {
        let tmpPtr = ptr(retPtr).add(p_size * (4 + i));
        let relItem = tmpPtr.readPointer();
        let ObjToString = "";
        try {
            ObjToString = `${getType(relItem).toString()} | ${new Il2Cpp.Object(relItem).toString()}`;
        }
        catch {
            ObjToString = new Il2Cpp.Object(relItem).toString();
        }
        if (ObjToString.indexOf("String"))
            ObjToString += `\t|${readU16(relItem)}|`;
        if (ObjToString.indexOf("Text"))
            ObjToString += `\t${callFunctionRUS(["UnityEngine.UI", "Text", "get_fontSize", 0])} ${relItem}`;
        if (ObjToString.indexOf("TermData") || ObjToString.indexOf("LanguageData"))
            ObjToString += `\t | ${readU16(tmpPtr.readPointer().add(0x8).readPointer())}| `;
        LOGD(String("[" + i + "]").padEnd(5, " ") + " " + tmpPtr + " ---> " + relItem + "  |  " + ObjToString);
        if (funcTransform != undefined && typeof funcTransform == "function")
            LOG("\t" + funcTransform(relItem, ObjToString), enum_1.LogColor.C90);
    }
    newLine();
};
exports.showArray = showArray;
var seeHexR = (addr, length = 0x40, color) => {
    addr = (0, common_1.PTR2NativePtr)(addr);
    LOG(hexdump(addr.readPointer(), {
        length: length
    }), color == undefined ? enum_1.LogColor.WHITE : color);
};
exports.seeHexR = seeHexR;
var seeHexA = (addr, length = 0x40, header = true, color) => {
    addr = (0, common_1.PTR2NativePtr)(addr);
    LOG(hexdump(addr, {
        length: length,
        header: header,
    }), color == undefined ? enum_1.LogColor.WHITE : color);
};
exports.seeHexA = seeHexA;
const getFloat = (intNum) => alloc(1).writeFloat(intNum).readPointer();
exports.getFloat = getFloat;
globalThis.readSingle = readSingle;
globalThis.readBoolean = readBoolean;
globalThis.readInt = readInt;
globalThis.readUInt = readUInt;
globalThis.readInt64 = readInt64;
globalThis.readUInt64 = readUInt64;
globalThis.readU16 = readU16;
globalThis.showArray = showArray;
globalThis.seeHexR = seeHexR;
globalThis.seeHexA = seeHexA;
},{"../base/enum":6,"./common":329}],336:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetStackTraceN = exports.GetStackTrace = exports.PrintStackTraceN = exports.PrintStackTrace = void 0;
const PrintStackTrace = () => LOG(Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Throwable").$new()), LogColor.C36);
exports.PrintStackTrace = PrintStackTrace;
const PrintStackTraceN = (ctx, retText = false, slice = 6, reverse = false) => {
    let tmpText = "";
    if (reverse) {
        tmpText = Thread.backtrace(ctx, Backtracer.FUZZY)
            .slice(0, slice)
            .reverse()
            .map(DebugSymbol.fromAddress).join("\n");
    }
    else {
        tmpText = Thread.backtrace(ctx, Backtracer.FUZZY)
            .slice(0, slice)
            .map(DebugSymbol.fromAddress).join("\n");
    }
    return !retText ? LOGD(tmpText) : tmpText;
};
exports.PrintStackTraceN = PrintStackTraceN;
var GetStackTrace = () => Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Throwable").$new());
exports.GetStackTrace = GetStackTrace;
var GetStackTraceN = (ctx, level = 6) => {
    return Thread.backtrace(ctx, Backtracer.FUZZY)
        .slice(0, level)
        .map(frame => DebugSymbol.fromAddress(frame))
        .join("\n");
};
exports.GetStackTraceN = GetStackTraceN;
globalThis.PrintStackTrace = PrintStackTrace;
globalThis.PrintStackTraceN = PrintStackTraceN;
globalThis.GetStackTrace = GetStackTrace;
globalThis.GetStackTraceN = GetStackTraceN;
},{}],337:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.get_PrettyMethod = exports.readStdString = void 0;
const get_PrettyMethod = () => {
    let PrettyMethod_ptr = Module.findExportByName("libart.so", "_ZN3art9ArtMethod12PrettyMethodEb");
    if (PrettyMethod_ptr == null) {
        LOGD(`libart.so PrettyMethod_ptr is null`);
        return;
    }
    LOGD(`PrettyMethod_ptr => ${PrettyMethod_ptr}`);
    let PrettyMethod_func = new NativeFunction(PrettyMethod_ptr, ["pointer", "pointer", "pointer"], ["pointer", "bool"]);
    return PrettyMethod_func;
};
exports.get_PrettyMethod = get_PrettyMethod;
globalThis.readStdString = (pointers) => {
    let str = Memory.alloc(Process.pointerSize * 3);
    str.writePointer(pointers[0]);
    str.add(Process.pointerSize * 1).writePointer(pointers[1]);
    str.add(Process.pointerSize * 2).writePointer(pointers[2]);
    let isTiny = (str.readU8() & 1) === 0;
    if (isTiny)
        return str.add(1).readUtf8String();
    return str.add(2 * Process.pointerSize).readPointer().readUtf8String();
};
},{}],338:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
;
function cache(target, name, descriptor) {
    var getter = descriptor.get;
    if (!getter)
        throw new TypeError("Getter property descriptor expected");
    descriptor.get = function () {
        var value = getter.call(this);
        Object.defineProperty(this, name, {
            configurable: descriptor.configurable,
            enumerable: descriptor.enumerable,
            writable: false,
            value: value
        });
        return value;
    };
}
exports.cache = cache;

},{}],339:[function(require,module,exports){
"use strict";
const peq = new Uint32Array(0x10000);
const myers_32 = (a, b) => {
  const n = a.length;
  const m = b.length;
  const lst = 1 << (n - 1);
  let pv = -1;
  let mv = 0;
  let sc = n;
  let i = n;
  while (i--) {
    peq[a.charCodeAt(i)] |= 1 << i;
  }
  for (i = 0; i < m; i++) {
    let eq = peq[b.charCodeAt(i)];
    const xv = eq | mv;
    eq |= ((eq & pv) + pv) ^ pv;
    mv |= ~(eq | pv);
    pv &= eq;
    if (mv & lst) {
      sc++;
    }
    if (pv & lst) {
      sc--;
    }
    mv = (mv << 1) | 1;
    pv = (pv << 1) | ~(xv | mv);
    mv &= xv;
  }
  i = n;
  while (i--) {
    peq[a.charCodeAt(i)] = 0;
  }
  return sc;
};

const myers_x = (a, b) => {
  const n = a.length;
  const m = b.length;
  const mhc = [];
  const phc = [];
  const hsize = Math.ceil(n / 32);
  const vsize = Math.ceil(m / 32);
  let score = m;
  for (let i = 0; i < hsize; i++) {
    phc[i] = -1;
    mhc[i] = 0;
  }
  let j = 0;
  for (; j < vsize - 1; j++) {
    let mv = 0;
    let pv = -1;
    const start = j * 32;
    const end = Math.min(32, m) + start;
    for (let k = start; k < end; k++) {
      peq[b.charCodeAt(k)] |= 1 << k;
    }
    score = m;
    for (let i = 0; i < n; i++) {
      const eq = peq[a.charCodeAt(i)];
      const pb = (phc[(i / 32) | 0] >>> i) & 1;
      const mb = (mhc[(i / 32) | 0] >>> i) & 1;
      const xv = eq | mv;
      const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;
      let ph = mv | ~(xh | pv);
      let mh = pv & xh;
      if ((ph >>> 31) ^ pb) {
        phc[(i / 32) | 0] ^= 1 << i;
      }
      if ((mh >>> 31) ^ mb) {
        mhc[(i / 32) | 0] ^= 1 << i;
      }
      ph = (ph << 1) | pb;
      mh = (mh << 1) | mb;
      pv = mh | ~(xv | ph);
      mv = ph & xv;
    }
    for (let k = start; k < end; k++) {
      peq[b.charCodeAt(k)] = 0;
    }
  }
  let mv = 0;
  let pv = -1;
  const start = j * 32;
  const end = Math.min(32, m - start) + start;
  for (let k = start; k < end; k++) {
    peq[b.charCodeAt(k)] |= 1 << k;
  }
  score = m;
  for (let i = 0; i < n; i++) {
    const eq = peq[a.charCodeAt(i)];
    const pb = (phc[(i / 32) | 0] >>> i) & 1;
    const mb = (mhc[(i / 32) | 0] >>> i) & 1;
    const xv = eq | mv;
    const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;
    let ph = mv | ~(xh | pv);
    let mh = pv & xh;
    score += (ph >>> (m - 1)) & 1;
    score -= (mh >>> (m - 1)) & 1;
    if ((ph >>> 31) ^ pb) {
      phc[(i / 32) | 0] ^= 1 << i;
    }
    if ((mh >>> 31) ^ mb) {
      mhc[(i / 32) | 0] ^= 1 << i;
    }
    ph = (ph << 1) | pb;
    mh = (mh << 1) | mb;
    pv = mh | ~(xv | ph);
    mv = ph & xv;
  }
  for (let k = start; k < end; k++) {
    peq[b.charCodeAt(k)] = 0;
  }
  return score;
};

const distance = (a, b) => {
  if (a.length > b.length) {
    const tmp = b;
    b = a;
    a = tmp;
  }
  if (a.length === 0) {
    return b.length;
  }
  if (a.length <= 32) {
    return myers_32(a, b);
  }
  return myers_x(a, b);
};

const closest = (str, arr) => {
  let min_distance = Infinity;
  let min_index = 0;
  for (let i = 0; i < arr.length; i++) {
    const dist = distance(str, arr[i]);
    if (dist < min_distance) {
      min_distance = dist;
      min_index = i;
    }
  }
  return arr[min_index];
};

module.exports = {
  closest, distance
}

},{}],340:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const versioning_1 = __importDefault(require("versioning"));
const console_1 = require("../utils/console");
class Il2CppApi {
    constructor() { }
    static get _alloc() {
        return this.r("il2cpp_alloc", "pointer", ["size_t"]);
    }
    static get _arrayGetElements() {
        return this.r("il2cpp_array_get_elements", "pointer", ["pointer"]);
    }
    static get _arrayGetLength() {
        return this.r("il2cpp_array_length", "uint32", ["pointer"]);
    }
    static get _arrayNew() {
        return this.r("il2cpp_array_new", "pointer", ["pointer", "uint32"]);
    }
    static get _assemblyGetImage() {
        return this.r("il2cpp_assembly_get_image", "pointer", ["pointer"]);
    }
    static get _classForEach() {
        return this.r("il2cpp_class_for_each", "void", ["pointer", "pointer"]);
    }
    static get _classFromName() {
        return this.r("il2cpp_class_from_name", "pointer", ["pointer", "pointer", "pointer"]);
    }
    static get _classFromSystemType() {
        return this.r("il2cpp_class_from_system_type", "pointer", ["pointer"]);
    }
    static get _classFromType() {
        return this.r("il2cpp_class_from_type", "pointer", ["pointer"]);
    }
    static get _classGetActualInstanceSize() {
        return this.r("il2cpp_class_get_actual_instance_size", "int32", ["pointer"]);
    }
    static get _classGetArrayClass() {
        return this.r("il2cpp_array_class_get", "pointer", ["pointer", "uint32"]);
    }
    static get _classGetArrayElementSize() {
        return this.r("il2cpp_class_array_element_size", "int", ["pointer"]);
    }
    static get _classGetAssemblyName() {
        return this.r("il2cpp_class_get_assemblyname", "pointer", ["pointer"]);
    }
    static get _classGetBaseType() {
        return this.r("il2cpp_class_enum_basetype", "pointer", ["pointer"]);
    }
    static get _classGetDeclaringType() {
        return this.r("il2cpp_class_get_declaring_type", "pointer", ["pointer"]);
    }
    static get _classGetElementClass() {
        return this.r("il2cpp_class_get_element_class", "pointer", ["pointer"]);
    }
    static get _classGetFieldFromName() {
        return this.r("il2cpp_class_get_field_from_name", "pointer", ["pointer", "pointer"]);
    }
    static get _classGetFields() {
        return this.r("il2cpp_class_get_fields", "pointer", ["pointer", "pointer"]);
    }
    static get _classGetFlags() {
        return this.r("il2cpp_class_get_flags", "int", ["pointer"]);
    }
    static get _classGetImage() {
        return this.r("il2cpp_class_get_image", "pointer", ["pointer"]);
    }
    static get _classGetInstanceSize() {
        return this.r("il2cpp_class_instance_size", "int32", ["pointer"]);
    }
    static get _classGetInterfaces() {
        return this.r("il2cpp_class_get_interfaces", "pointer", ["pointer", "pointer"]);
    }
    static get _classGetMethodFromName() {
        return this.r("il2cpp_class_get_method_from_name", "pointer", ["pointer", "pointer", "int"]);
    }
    static get _classGetMethods() {
        return this.r("il2cpp_class_get_methods", "pointer", ["pointer", "pointer"]);
    }
    static get _classGetName() {
        return this.r("il2cpp_class_get_name", "pointer", ["pointer"]);
    }
    static get _classGetNamespace() {
        return this.r("il2cpp_class_get_namespace", "pointer", ["pointer"]);
    }
    static get _classGetNestedClasses() {
        return this.r("il2cpp_class_get_nested_types", "pointer", ["pointer", "pointer"]);
    }
    static get _classGetParent() {
        return this.r("il2cpp_class_get_parent", "pointer", ["pointer"]);
    }
    static get _classGetRank() {
        return this.r("il2cpp_class_get_rank", "int", ["pointer"]);
    }
    static get _classGetStaticFieldData() {
        return this.r("il2cpp_class_get_static_field_data", "pointer", ["pointer"]);
    }
    static get _classGetValueSize() {
        return this.r("il2cpp_class_value_size", "int32", ["pointer", "pointer"]);
    }
    static get _classGetType() {
        return this.r("il2cpp_class_get_type", "pointer", ["pointer"]);
    }
    static get _classHasReferences() {
        return this.r("il2cpp_class_has_references", "bool", ["pointer"]);
    }
    static get _classInit() {
        return this.r("il2cpp_runtime_class_init", "void", ["pointer"]);
    }
    static get _classIsAbstract() {
        return this.r("il2cpp_class_is_abstract", "bool", ["pointer"]);
    }
    static get _classIsAssignableFrom() {
        return this.r("il2cpp_class_is_assignable_from", "bool", ["pointer", "pointer"]);
    }
    static get _classIsBlittable() {
        return this.r("il2cpp_class_is_blittable", "bool", ["pointer"]);
    }
    static get _classIsEnum() {
        return this.r("il2cpp_class_is_enum", "bool", ["pointer"]);
    }
    static get _classIsGeneric() {
        return this.r("il2cpp_class_is_generic", "bool", ["pointer"]);
    }
    static get _classIsInflated() {
        return this.r("il2cpp_class_is_inflated", "bool", ["pointer"]);
    }
    static get _classIsInterface() {
        return this.r("il2cpp_class_is_interface", "bool", ["pointer"]);
    }
    static get _classIsSubclassOf() {
        return this.r("il2cpp_class_is_subclass_of", "bool", ["pointer", "pointer", "bool"]);
    }
    static get _classIsValueType() {
        return this.r("il2cpp_class_is_valuetype", "bool", ["pointer"]);
    }
    static get _domainAssemblyOpen() {
        return this.r("il2cpp_domain_assembly_open", "pointer", ["pointer", "pointer"]);
    }
    static get _domainGet() {
        return this.r("il2cpp_domain_get", "pointer", []);
    }
    static get _domainGetAssemblies() {
        return this.r("il2cpp_domain_get_assemblies", "pointer", ["pointer", "pointer"]);
    }
    static get _fieldGetModifier() {
        return this.r("il2cpp_field_get_modifier", "pointer", ["pointer"]);
    }
    static get _fieldGetClass() {
        return this.r("il2cpp_field_get_parent", "pointer", ["pointer"]);
    }
    static get _fieldGetFlags() {
        return this.r("il2cpp_field_get_flags", "int", ["pointer"]);
    }
    static get _fieldGetName() {
        return this.r("il2cpp_field_get_name", "pointer", ["pointer"]);
    }
    static get _fieldGetOffset() {
        return this.r("il2cpp_field_get_offset", "int32", ["pointer"]);
    }
    static get _fieldGetStaticValue() {
        return this.r("il2cpp_field_static_get_value", "void", ["pointer", "pointer"]);
    }
    static get _fieldGetType() {
        return this.r("il2cpp_field_get_type", "pointer", ["pointer"]);
    }
    static get _fieldIsLiteral() {
        return this.r("il2cpp_field_is_literal", "bool", ["pointer"]);
    }
    static get _fieldIsStatic() {
        return this.r("il2cpp_field_is_static", "bool", ["pointer"]);
    }
    static get _fieldIsThreadStatic() {
        return this.r("il2cpp_field_is_thread_static", "bool", ["pointer"]);
    }
    static get _fieldSetStaticValue() {
        return this.r("il2cpp_field_static_set_value", "void", ["pointer", "pointer"]);
    }
    static get _free() {
        return this.r("il2cpp_free", "void", ["pointer"]);
    }
    static get _gcCollect() {
        return this.r("il2cpp_gc_collect", "void", ["int"]);
    }
    static get _gcCollectALittle() {
        return this.r("il2cpp_gc_collect_a_little", "void", []);
    }
    static get _gcDisable() {
        return this.r("il2cpp_gc_disable", "void", []);
    }
    static get _gcEnable() {
        return this.r("il2cpp_gc_enable", "void", []);
    }
    static get _gcGetHeapSize() {
        return this.r("il2cpp_gc_get_heap_size", "int64", []);
    }
    static get _gcGetMaxTimeSlice() {
        return this.r("il2cpp_gc_get_max_time_slice_ns", "int64", []);
    }
    static get _gcGetUsedSize() {
        return this.r("il2cpp_gc_get_used_size", "int64", []);
    }
    static get _gcHandleGetTarget() {
        return this.r("il2cpp_gchandle_get_target", "pointer", ["uint32"]);
    }
    static get _gcHandleFree() {
        return this.r("il2cpp_gchandle_free", "void", ["uint32"]);
    }
    static get _gcHandleNew() {
        return this.r("il2cpp_gchandle_new", "uint32", ["pointer", "bool"]);
    }
    static get _gcHandleNewWeakRef() {
        return this.r("il2cpp_gchandle_new_weakref", "uint32", ["pointer", "bool"]);
    }
    static get _gcIsDisabled() {
        return this.r("il2cpp_gc_is_disabled", "bool", []);
    }
    static get _gcIsIncremental() {
        return this.r("il2cpp_gc_is_incremental", "bool", []);
    }
    static get _gcSetMaxTimeSlice() {
        return this.r("il2cpp_gc_set_max_time_slice_ns", "void", ["int64"]);
    }
    static get _gcStartIncrementalCollection() {
        return this.r("il2cpp_gc_start_incremental_collection", "void", []);
    }
    static get _gcStartWorld() {
        return this.r("il2cpp_start_gc_world", "void", []);
    }
    static get _gcStopWorld() {
        return this.r("il2cpp_stop_gc_world", "void", []);
    }
    static get _getCorlib() {
        return this.r("il2cpp_get_corlib", "pointer", []);
    }
    static get _imageGetAssembly() {
        return this.r("il2cpp_image_get_assembly", "pointer", ["pointer"]);
    }
    static get _imageGetClass() {
        return this.r("il2cpp_image_get_class", "pointer", ["pointer", "uint"]);
    }
    static get _imageGetClassCount() {
        return this.r("il2cpp_image_get_class_count", "uint32", ["pointer"]);
    }
    static get _imageGetName() {
        return this.r("il2cpp_image_get_name", "pointer", ["pointer"]);
    }
    static get _init() {
        return this.r("il2cpp_init", "void", []);
    }
    static get _livenessAllocateStruct() {
        return this.r("il2cpp_unity_liveness_allocate_struct", "pointer", ["pointer", "int", "pointer", "pointer", "pointer"]);
    }
    static get _livenessCalculationBegin() {
        return this.r("il2cpp_unity_liveness_calculation_begin", "pointer", ["pointer", "int", "pointer", "pointer", "pointer", "pointer"]);
    }
    static get _livenessCalculationEnd() {
        return this.r("il2cpp_unity_liveness_calculation_end", "void", ["pointer"]);
    }
    static get _livenessCalculationFromStatics() {
        return this.r("il2cpp_unity_liveness_calculation_from_statics", "void", ["pointer"]);
    }
    static get _livenessFinalize() {
        return this.r("il2cpp_unity_liveness_finalize", "void", ["pointer"]);
    }
    static get _livenessFreeStruct() {
        return this.r("il2cpp_unity_liveness_free_struct", "void", ["pointer"]);
    }
    static get _memorySnapshotCapture() {
        return this.r("il2cpp_capture_memory_snapshot", "pointer", []);
    }
    static get _memorySnapshotFree() {
        return this.r("il2cpp_free_captured_memory_snapshot", "void", ["pointer"]);
    }
    static get _memorySnapshotGetClasses() {
        return this.r("il2cpp_memory_snapshot_get_classes", "pointer", ["pointer", "pointer"]);
    }
    static get _memorySnapshotGetGCHandles() {
        return this.r("il2cpp_memory_snapshot_get_gc_handles", ["uint32", "pointer"], ["pointer"]);
    }
    static get _memorySnapshotGetRuntimeInformation() {
        return this.r("il2cpp_memory_snapshot_get_information", ["uint32", "uint32", "uint32", "uint32", "uint32", "uint32"], ["pointer"]);
    }
    static get _methodGetModifier() {
        return this.r("il2cpp_method_get_modifier", "pointer", ["pointer"]);
    }
    static get _methodGetClass() {
        return this.r("il2cpp_method_get_class", "pointer", ["pointer"]);
    }
    static get _methodGetFlags() {
        return this.r("il2cpp_method_get_flags", "uint32", ["pointer", "pointer"]);
    }
    static get _methodGetFromReflection() {
        return this.r("il2cpp_method_get_from_reflection", "pointer", ["pointer"]);
    }
    static get _methodGetName() {
        return this.r("il2cpp_method_get_name", "pointer", ["pointer"]);
    }
    static get _methodGetObject() {
        return this.r("il2cpp_method_get_object", "pointer", ["pointer", "pointer"]);
    }
    static get _methodGetParameterCount() {
        return this.r("il2cpp_method_get_param_count", "uint8", ["pointer"]);
    }
    static get _methodGetParameterName() {
        return this.r("il2cpp_method_get_param_name", "pointer", ["pointer", "uint32"]);
    }
    static get _methodGetParameters() {
        return this.r("il2cpp_method_get_parameters", "pointer", ["pointer", "pointer"]);
    }
    static get _methodGetParameterType() {
        return this.r("il2cpp_method_get_param", "pointer", ["pointer", "uint32"]);
    }
    static get _methodGetPointer() {
        return this.r("il2cpp_method_get_pointer", "pointer", ["pointer"]);
    }
    static get _methodGetReturnType() {
        return this.r("il2cpp_method_get_return_type", "pointer", ["pointer"]);
    }
    static get _methodIsExternal() {
        return this.r("il2cpp_method_is_external", "bool", ["pointer"]);
    }
    static get _methodIsGeneric() {
        return this.r("il2cpp_method_is_generic", "bool", ["pointer"]);
    }
    static get _methodIsInflated() {
        return this.r("il2cpp_method_is_inflated", "bool", ["pointer"]);
    }
    static get _methodIsInstance() {
        return this.r("il2cpp_method_is_instance", "bool", ["pointer"]);
    }
    static get _methodIsSynchronized() {
        return this.r("il2cpp_method_is_synchronized", "bool", ["pointer"]);
    }
    static get _monitorEnter() {
        return this.r("il2cpp_monitor_enter", "void", ["pointer"]);
    }
    static get _monitorExit() {
        return this.r("il2cpp_monitor_exit", "void", ["pointer"]);
    }
    static get _monitorPulse() {
        return this.r("il2cpp_monitor_pulse", "void", ["pointer"]);
    }
    static get _monitorPulseAll() {
        return this.r("il2cpp_monitor_pulse_all", "void", ["pointer"]);
    }
    static get _monitorTryEnter() {
        return this.r("il2cpp_monitor_try_enter", "bool", ["pointer", "uint32"]);
    }
    static get _monitorTryWait() {
        return this.r("il2cpp_monitor_try_wait", "bool", ["pointer", "uint32"]);
    }
    static get _monitorWait() {
        return this.r("il2cpp_monitor_wait", "void", ["pointer"]);
    }
    static get _objectGetClass() {
        return this.r("il2cpp_object_get_class", "pointer", ["pointer"]);
    }
    static get _objectGetVirtualMethod() {
        return this.r("il2cpp_object_get_virtual_method", "pointer", ["pointer", "pointer"]);
    }
    static get _objectInit() {
        return this.r("il2cpp_runtime_object_init_exception", "void", ["pointer", "pointer"]);
    }
    static get _objectNew() {
        return this.r("il2cpp_object_new", "pointer", ["pointer"]);
    }
    static get _objectGetSize() {
        return this.r("il2cpp_object_get_size", "uint32", ["pointer"]);
    }
    static get _objectUnbox() {
        return this.r("il2cpp_object_unbox", "pointer", ["pointer"]);
    }
    static get _resolveInternalCall() {
        return this.r("il2cpp_resolve_icall", "pointer", ["pointer"]);
    }
    static get _stringChars() {
        return this.r("il2cpp_string_chars", "pointer", ["pointer"]);
    }
    static get _stringLength() {
        return this.r("il2cpp_string_length", "int32", ["pointer"]);
    }
    static get _stringNew() {
        return this.r("il2cpp_string_new", "pointer", ["pointer"]);
    }
    static get _stringSetLength() {
        return this.r("il2cpp_string_set_length", "void", ["pointer", "int32"]);
    }
    static get _valueBox() {
        return this.r("il2cpp_value_box", "pointer", ["pointer", "pointer"]);
    }
    static get _threadAttach() {
        return this.r("il2cpp_thread_attach", "pointer", ["pointer"]);
    }
    static get _threadCurrent() {
        return this.r("il2cpp_thread_current", "pointer", []);
    }
    static get _threadGetAllAttachedThreads() {
        return this.r("il2cpp_thread_get_all_attached_threads", "pointer", ["pointer"]);
    }
    static get _threadIsVm() {
        return this.r("il2cpp_is_vm_thread", "bool", ["pointer"]);
    }
    static get _threadDetach() {
        return this.r("il2cpp_thread_detach", "void", ["pointer"]);
    }
    static get _typeGetName() {
        return this.r("il2cpp_type_get_name", "pointer", ["pointer"]);
    }
    static get _typeGetObject() {
        return this.r("il2cpp_type_get_object", "pointer", ["pointer"]);
    }
    static get _typeGetTypeEnum() {
        return this.r("il2cpp_type_get_type", "int", ["pointer"]);
    }
    static get _typeIsByReference() {
        return this.r("il2cpp_type_is_byref", "bool", ["pointer"]);
    }
    static get _typeIsPrimitive() {
        return this.r("il2cpp_type_is_primitive", "bool", ["pointer"]);
    }
    /** @internal */
    static get cModule() {
        if (versioning_1.default.lt(Il2Cpp.unityVersion, "5.3.0") || versioning_1.default.gte(Il2Cpp.unityVersion, "2022.2.0")) {
            (0, console_1.warn)(`current Unity version ${Il2Cpp.unityVersion} is not supported, expect breakage`);
        }
        const offsetsFinderCModule = new CModule(`\
#include <stdint.h>

#define OFFSET_OF(name, type) \
    int16_t name (char * p,\
                  type e)\
    {\
        for (int16_t i = 0; i < 512; i++) if (* ((type *) p + i) == e) return i;\
        return -1;\
    }

OFFSET_OF (offset_of_int32, int32_t)
OFFSET_OF (offset_of_pointer, void *)
            `);
        const offsetOfInt32 = new NativeFunction(offsetsFinderCModule.offset_of_int32, "int16", ["pointer", "int32"]);
        const offsetOfPointer = new NativeFunction(offsetsFinderCModule.offset_of_pointer, "int16", ["pointer", "pointer"]);
        const SystemString = Il2Cpp.Image.corlib.class("System.String");
        const SystemDateTime = Il2Cpp.Image.corlib.class("System.DateTime");
        const SystemReflectionModule = Il2Cpp.Image.corlib.class("System.Reflection.Module");
        SystemDateTime.initialize();
        SystemReflectionModule.initialize();
        const DaysToMonth365 = (SystemDateTime.tryField("daysmonth") ??
            SystemDateTime.tryField("DaysToMonth365") ??
            SystemDateTime.field("s_daysToMonth365")).value;
        const FilterTypeName = SystemReflectionModule.field("FilterTypeName").value;
        const FilterTypeNameMethodPointer = FilterTypeName.field("method_ptr").value;
        const FilterTypeNameMethod = FilterTypeName.field("method").value;
        const source = `\
#include <stdint.h>
#include <string.h>


typedef struct _Il2CppObject Il2CppObject;
typedef enum _Il2CppTypeEnum Il2CppTypeEnum;
typedef struct _Il2CppReflectionMethod Il2CppReflectionMethod;
typedef struct _Il2CppManagedMemorySnapshot Il2CppManagedMemorySnapshot;
typedef struct _Il2CppMetadataType Il2CppMetadataType;


struct _Il2CppObject
{
    void * class;
    void * monitor;
};

enum _Il2CppTypeEnum
{
    IL2CPP_TYPE_END = 0x00,
    IL2CPP_TYPE_VOID = 0x01,
    IL2CPP_TYPE_BOOLEAN = 0x02,
    IL2CPP_TYPE_CHAR = 0x03,
    IL2CPP_TYPE_I1 = 0x04,
    IL2CPP_TYPE_U1 = 0x05,
    IL2CPP_TYPE_I2 = 0x06,
    IL2CPP_TYPE_U2 = 0x07,
    IL2CPP_TYPE_I4 = 0x08,
    IL2CPP_TYPE_U4 = 0x09,
    IL2CPP_TYPE_I8 = 0x0a,
    IL2CPP_TYPE_U8 = 0x0b,
    IL2CPP_TYPE_R4 = 0x0c,
    IL2CPP_TYPE_R8 = 0x0d,
    IL2CPP_TYPE_STRING = 0x0e,
    IL2CPP_TYPE_PTR = 0x0f,
    IL2CPP_TYPE_BYREF = 0x10,
    IL2CPP_TYPE_VALUETYPE = 0x11,
    IL2CPP_TYPE_CLASS = 0x12,
    IL2CPP_TYPE_VAR = 0x13,
    IL2CPP_TYPE_ARRAY = 0x14,
    IL2CPP_TYPE_GENERICINST = 0x15,
    IL2CPP_TYPE_TYPEDBYREF = 0x16,
    IL2CPP_TYPE_I = 0x18,
    IL2CPP_TYPE_U = 0x19,
    IL2CPP_TYPE_FNPTR = 0x1b,
    IL2CPP_TYPE_OBJECT = 0x1c,
    IL2CPP_TYPE_SZARRAY = 0x1d,
    IL2CPP_TYPE_MVAR = 0x1e,
    IL2CPP_TYPE_CMOD_REQD = 0x1f,
    IL2CPP_TYPE_CMOD_OPT = 0x20,
    IL2CPP_TYPE_INTERNAL = 0x21,
    IL2CPP_TYPE_MODIFIER = 0x40,
    IL2CPP_TYPE_SENTINEL = 0x41,
    IL2CPP_TYPE_PINNED = 0x45,
    IL2CPP_TYPE_ENUM = 0x55
};

struct _Il2CppReflectionMethod
{
    Il2CppObject object;
    void * method;
    void * name;
    void * reftype;
};

struct _Il2CppManagedMemorySnapshot
{
    struct Il2CppManagedHeap
    {
        uint32_t section_count;
        void * sections;
    } heap;
    struct Il2CppStacks
    {
        uint32_t stack_count;
        void * stacks;
    } stacks;
    struct Il2CppMetadataSnapshot
    {
        uint32_t type_count;
        Il2CppMetadataType * types;
    } metadata_snapshot;
    struct Il2CppGCHandles
    {
        uint32_t tracked_object_count;
        Il2CppObject ** pointers_to_objects;
    } gc_handles;
    struct Il2CppRuntimeInformation
    {
        uint32_t pointer_size;
        uint32_t object_header_size;
        uint32_t array_header_size;
        uint32_t array_bounds_offset_in_header;
        uint32_t array_size_offset_in_header;
        uint32_t allocation_granularity;
    } runtime_information;
    void * additional_user_information;
};

struct _Il2CppMetadataType
{
    uint32_t flags;
    void * fields;
    uint32_t field_count;
    uint32_t statics_size;
    uint8_t * statics;
    uint32_t base_or_element_type_index;
    char * name;
    const char * assembly_name;
    uint64_t type_info_address;
    uint32_t size;
};


#define THREAD_STATIC_FIELD_OFFSET -1;

#define FIELD_ATTRIBUTE_FIELD_ACCESS_MASK 0x0007
#define FIELD_ATTRIBUTE_COMPILER_CONTROLLED 0x0000
#define FIELD_ATTRIBUTE_PRIVATE 0x0001
#define FIELD_ATTRIBUTE_FAM_AND_ASSEM 0x0002
#define FIELD_ATTRIBUTE_ASSEMBLY 0x0003
#define FIELD_ATTRIBUTE_FAMILY 0x0004
#define FIELD_ATTRIBUTE_FAM_OR_ASSEM 0x0005
#define FIELD_ATTRIBUTE_PUBLIC 0x0006

#define FIELD_ATTRIBUTE_STATIC 0x0010
#define FIELD_ATTRIBUTE_LITERAL 0x0040

#define METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK 0x0007
#define METHOD_ATTRIBUTE_COMPILER_CONTROLLED 0x0000
#define METHOD_ATTRIBUTE_PRIVATE 0x0001
#define METHOD_ATTRIBUTE_FAM_AND_ASSEM 0x0002
#define METHOD_ATTRIBUTE_ASSEMBLY 0x0003
#define METHOD_ATTRIBUTE_FAMILY 0x0004
#define METHOD_ATTRIBUTE_FAM_OR_ASSEM 0x0005
#define METHOD_ATTRIBUTE_PUBLIC 0x0006

#define METHOD_ATTRIBUTE_STATIC 0x0010
#define METHOD_IMPL_ATTRIBUTE_INTERNAL_CALL 0x1000
#define METHOD_IMPL_ATTRIBUTE_SYNCHRONIZED 0x0020


static const char * (*il2cpp_class_get_name) (void *) = (void *) ${this._classGetName};
static int (*il2cpp_field_get_flags) (void *) = (void *) ${this._fieldGetFlags};
static size_t (*il2cpp_field_get_offset) (void *) = (void *) ${this._fieldGetOffset};
static uint32_t (*il2cpp_method_get_flags) (void *, uint32_t *) = (void *) ${this._methodGetFlags};
static char * (*il2cpp_type_get_name) (void *) = (void *) ${this._typeGetName};
static Il2CppTypeEnum (*il2cpp_type_get_type_enum) (void *) = (void *) ${this._typeGetTypeEnum};
static void (*il2cpp_free) (void * pointer) = (void *) ${this._free};


void
il2cpp_string_set_length (int32_t * string,
                          int32_t length)
{
    *(string + ${offsetOfInt32(Il2Cpp.String.from("vfsfitvnm"), 9)}) = length;
}

void *
il2cpp_array_get_elements (int32_t * array)
{ 
    return array + ${offsetOfInt32(DaysToMonth365, 31) - 1};
}

uint8_t
il2cpp_type_is_byref (void * type)
{   
    char * name;
    char last_char;

    name = il2cpp_type_get_name (type);
    last_char = name[strlen (name) - 1];

    il2cpp_free (name);
    return last_char == '&';
}

uint8_t
il2cpp_type_is_primitive (void * type)
{
    Il2CppTypeEnum type_enum;

    type_enum = il2cpp_type_get_type_enum (type);

    return ((type_enum >= IL2CPP_TYPE_BOOLEAN && 
        type_enum <= IL2CPP_TYPE_R8) || 
        type_enum == IL2CPP_TYPE_I || 
        type_enum == IL2CPP_TYPE_U
    );
}

int32_t
il2cpp_class_get_actual_instance_size (int32_t * class)
{
    return *(class + ${offsetOfInt32(SystemString, SystemString.instanceSize - 2)});
}

uint8_t
il2cpp_class_get_rank (void * class)
{
    uint8_t rank;
    const char * name;
    
    rank = 0;
    name = il2cpp_class_get_name (class);

    for (uint16_t i = strlen (name) - 1; i > 0; i--)
    {
        char c = name[i];

        if (c == ']') rank++;
        else if (c == '[' || rank == 0) break;
        else if (c == ',') rank++;
        else break;
    }

    return rank;
}

const char *
il2cpp_field_get_modifier (void * field)
{   
    int flags;

    flags = il2cpp_field_get_flags (field);

    switch (flags & FIELD_ATTRIBUTE_FIELD_ACCESS_MASK) {
        case FIELD_ATTRIBUTE_PRIVATE:
            return "private";
        case FIELD_ATTRIBUTE_FAM_AND_ASSEM:
            return "private protected";
        case FIELD_ATTRIBUTE_ASSEMBLY:
            return "internal";
        case FIELD_ATTRIBUTE_FAMILY:
            return "protected";
        case FIELD_ATTRIBUTE_FAM_OR_ASSEM:
            return "protected internal";
        case FIELD_ATTRIBUTE_PUBLIC:
            return "public";
    }

    return "";
}

uint8_t
il2cpp_field_is_literal (void * field)
{
    return (il2cpp_field_get_flags (field) & FIELD_ATTRIBUTE_LITERAL) != 0;
}

uint8_t
il2cpp_field_is_static (void * field)
{
    return (il2cpp_field_get_flags (field) & FIELD_ATTRIBUTE_STATIC) != 0;
}

uint8_t
il2cpp_field_is_thread_static (void * field)
{
    return il2cpp_field_get_offset (field) == THREAD_STATIC_FIELD_OFFSET;
}

const char *
il2cpp_method_get_modifier (void * method)
{
    uint32_t flags;

    flags = il2cpp_method_get_flags (method, NULL);

    switch (flags & METHOD_ATTRIBUTE_MEMBER_ACCESS_MASK) {
        case METHOD_ATTRIBUTE_PRIVATE:
            return "private";
        case METHOD_ATTRIBUTE_FAM_AND_ASSEM:
            return "private protected";
        case METHOD_ATTRIBUTE_ASSEMBLY:
            return "internal";
        case METHOD_ATTRIBUTE_FAMILY:
            return "protected";
        case METHOD_ATTRIBUTE_FAM_OR_ASSEM:
            return "protected internal";
        case METHOD_ATTRIBUTE_PUBLIC:
            return "public";
    }

    return "";
}

void *
il2cpp_method_get_from_reflection (const Il2CppReflectionMethod * method)
{
    return method->method;
}

void *
il2cpp_method_get_pointer (void ** method)
{
    return * (method + ${offsetOfPointer(FilterTypeNameMethod, FilterTypeNameMethodPointer)});
}

uint8_t
il2cpp_method_is_external (void * method)
{
    uint32_t implementation_flags;

    il2cpp_method_get_flags (method, &implementation_flags);

    return (implementation_flags & METHOD_IMPL_ATTRIBUTE_INTERNAL_CALL) != 0;
}

uint8_t
il2cpp_method_is_synchronized (void * method)
{
    uint32_t implementation_flags;

    il2cpp_method_get_flags (method, &implementation_flags);

    return (implementation_flags & METHOD_IMPL_ATTRIBUTE_SYNCHRONIZED) != 0;
}

uintptr_t
il2cpp_memory_snapshot_get_classes (const Il2CppManagedMemorySnapshot * snapshot,
                                    Il2CppMetadataType ** iter)
{
    const int zero;
    const void * null;

    if (iter != NULL && snapshot->metadata_snapshot.type_count > zero)
    {
        if (*iter == null)
        {
            *iter = snapshot->metadata_snapshot.types;
            return (uintptr_t) (*iter)->type_info_address;
        }
        else
        {
            Il2CppMetadataType * metadata_type = *iter + 1;

            if (metadata_type < snapshot->metadata_snapshot.types + snapshot->metadata_snapshot.type_count)
            {
                *iter = metadata_type;
                return (uintptr_t) (*iter)->type_info_address;
            }
        }
    }
    return 0;
}

struct Il2CppGCHandles
il2cpp_memory_snapshot_get_gc_handles (const Il2CppManagedMemorySnapshot * snapshot)
{
    return snapshot->gc_handles;
}

struct Il2CppRuntimeInformation
il2cpp_memory_snapshot_get_information (const Il2CppManagedMemorySnapshot * snapshot)
{
    return snapshot->runtime_information;
}
        `;
        offsetsFinderCModule.dispose();
        return new CModule(source);
    }
    /** @internal */
    static r(exportName, retType, argTypes) {
        const exportPointer = Il2Cpp.module.findExportByName(exportName) ?? this.cModule[exportName];
        if (exportPointer == null) {
            (0, console_1.raise)(`cannot resolve export ${exportName}`);
        }
        return new NativeFunction(exportPointer, retType, argTypes);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_alloc", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_arrayGetElements", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_arrayGetLength", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_arrayNew", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_assemblyGetImage", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classForEach", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classFromName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classFromSystemType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classFromType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetActualInstanceSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetArrayClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetArrayElementSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetAssemblyName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetBaseType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetDeclaringType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetElementClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetFieldFromName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetFields", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetFlags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetImage", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetInstanceSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetInterfaces", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetMethodFromName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetMethods", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetNamespace", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetNestedClasses", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetParent", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetRank", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetStaticFieldData", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetValueSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classGetType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classHasReferences", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classInit", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsAbstract", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsAssignableFrom", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsBlittable", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsEnum", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsGeneric", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsInflated", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsInterface", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsSubclassOf", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_classIsValueType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_domainAssemblyOpen", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_domainGet", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_domainGetAssemblies", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetModifier", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetFlags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetOffset", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetStaticValue", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldGetType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldIsLiteral", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldIsStatic", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldIsThreadStatic", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_fieldSetStaticValue", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_free", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcCollect", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcCollectALittle", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcDisable", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcEnable", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcGetHeapSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcGetMaxTimeSlice", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcGetUsedSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcHandleGetTarget", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcHandleFree", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcHandleNew", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcHandleNewWeakRef", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcIsDisabled", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcIsIncremental", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcSetMaxTimeSlice", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcStartIncrementalCollection", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcStartWorld", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_gcStopWorld", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_getCorlib", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_imageGetAssembly", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_imageGetClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_imageGetClassCount", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_imageGetName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_init", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_livenessAllocateStruct", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_livenessCalculationBegin", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_livenessCalculationEnd", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_livenessCalculationFromStatics", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_livenessFinalize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_livenessFreeStruct", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_memorySnapshotCapture", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_memorySnapshotFree", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_memorySnapshotGetClasses", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_memorySnapshotGetGCHandles", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_memorySnapshotGetRuntimeInformation", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetModifier", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetFlags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetFromReflection", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetObject", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetParameterCount", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetParameterName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetParameters", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetParameterType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetPointer", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodGetReturnType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodIsExternal", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodIsGeneric", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodIsInflated", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodIsInstance", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_methodIsSynchronized", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorEnter", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorExit", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorPulse", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorPulseAll", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorTryEnter", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorTryWait", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_monitorWait", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_objectGetClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_objectGetVirtualMethod", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_objectInit", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_objectNew", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_objectGetSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_objectUnbox", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_resolveInternalCall", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_stringChars", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_stringLength", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_stringNew", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_stringSetLength", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_valueBox", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_threadAttach", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_threadCurrent", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_threadGetAllAttachedThreads", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_threadIsVm", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_threadDetach", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_typeGetName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_typeGetObject", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_typeGetTypeEnum", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_typeIsByReference", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "_typeIsPrimitive", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppApi, "cModule", null);
Il2Cpp.Api = Il2CppApi;

},{"../utils/console":367,"decorator-cache-getter":338,"versioning":373}],341:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const versioning_1 = __importDefault(require("versioning"));
const console_1 = require("../utils/console");
const native_wait_1 = require("../utils/native-wait");
/** */
class Il2CppBase {
    constructor() { }
    /** @internal Gets the Il2Cpp module name. */
    static get moduleName() {
        switch (Process.platform) {
            case "linux":
                try {
                    const _ = Java.androidVersion;
                    return "libil2cpp.so";
                }
                catch (e) {
                    return "GameAssembly.so";
                }
            case "windows":
                return "GameAssembly.dll";
            case "darwin":
                try {
                    return "UnityFramework";
                }
                catch (e) {
                    return "GameAssembly.dylib";
                }
        }
        (0, console_1.raise)(`${Process.platform} is not supported yet`);
    }
    /** */
    static get applicationDataPath() {
        const get_persistentDataPath = this.internalCall("UnityEngine.Application::get_persistentDataPath", "pointer", []);
        return new Il2Cpp.String(get_persistentDataPath()).content;
    }
    /** */
    static get applicationIdentifier() {
        const get_identifier = this.internalCall("UnityEngine.Application::get_identifier", "pointer", []) ??
            this.internalCall("UnityEngine.Application::get_bundleIdentifier", "pointer", []);
        return get_identifier ? new Il2Cpp.String(get_identifier()).content : null;
    }
    /** Gets the version of the application */
    static get applicationVersion() {
        const get_version = this.internalCall("UnityEngine.Application::get_version", "pointer", []);
        return get_version ? new Il2Cpp.String(get_version()).content : null;
    }
    /** Gets the attached threads. */
    static get attachedThreads() {
        if (Il2Cpp.currentThread == null) {
            (0, console_1.raise)("only Il2Cpp threads can invoke Il2Cpp.attachedThreads");
        }
        const array = [];
        const sizePointer = Memory.alloc(Process.pointerSize);
        const startPointer = Il2Cpp.Api._threadGetAllAttachedThreads(sizePointer);
        const size = sizePointer.readInt();
        for (let i = 0; i < size; i++) {
            array.push(new Il2Cpp.Thread(startPointer.add(i * Process.pointerSize).readPointer()));
        }
        return array;
    }
    /** Gets the current attached thread, if any. */
    static get currentThread() {
        const handle = Il2Cpp.Api._threadCurrent();
        return handle.isNull() ? null : new Il2Cpp.Thread(handle);
    }
    /** Gets the Il2Cpp module as a Frida module. */
    static get module() {
        return Process.getModuleByName(this.moduleName);
    }
    /** Gets the Unity version of the current application. */
    static get unityVersion() {
        const get_unityVersion = this.internalCall("UnityEngine.Application::get_unityVersion", "pointer", []);
        if (get_unityVersion == null) {
            (0, console_1.raise)("couldn't determine the Unity version, please specify it manually");
        }
        return new Il2Cpp.String(get_unityVersion()).content;
    }
    /** @internal */
    static get unityVersionIsBelow201830() {
        return versioning_1.default.lt(this.unityVersion, "2018.3.0");
    }
    /** Allocates the given amount of bytes. */
    static alloc(size = Process.pointerSize) {
        return Il2Cpp.Api._alloc(size);
    }
    /** Dumps the application. */
    static dump(fileName, path) {
        fileName = fileName ?? `${Il2Cpp.applicationIdentifier ?? "unknown"}_${Il2Cpp.applicationVersion ?? "unknown"}.cs`;
        const destination = `${path ?? Il2Cpp.applicationDataPath}/${fileName}`;
        const file = new File(destination, "w");
        for (const assembly of Il2Cpp.Domain.assemblies) {
            (0, console_1.inform)(`dumping ${assembly.name}...`);
            for (const klass of assembly.image.classes) {
                file.write(`${klass}\n\n`);
            }
        }
        file.flush();
        file.close();
        (0, console_1.ok)(`dump saved to ${destination}`);
    }
    /** Frees memory. */
    static free(pointer) {
        return Il2Cpp.Api._free(pointer);
    }
    /** @internal Waits for Unity and Il2Cpp native libraries to be loaded and initialized. */
    static async initialize() {
        if (Process.platform == "darwin") {
            let il2cppModuleName = Process.findModuleByAddress(Module.findExportByName(null, "il2cpp_init") ?? NULL)?.name;
            if (il2cppModuleName == undefined) {
                il2cppModuleName = await (0, native_wait_1.forModule)("UnityFramework", "GameAssembly.dylib");
            }
            Reflect.defineProperty(Il2Cpp, "moduleName", { value: il2cppModuleName });
        }
        else {
            await (0, native_wait_1.forModule)(this.moduleName);
        }
        if (Il2Cpp.Api._getCorlib().isNull()) {
            await new Promise(resolve => {
                const interceptor = Interceptor.attach(Il2Cpp.Api._init, {
                    onLeave() {
                        interceptor.detach();
                        setImmediate(resolve);
                    }
                });
            });
        }
    }
    /** */
    static installExceptionListener(targetThread = "current") {
        const threadId = Process.getCurrentThreadId();
        return Interceptor.attach(Il2Cpp.module.getExportByName("__cxa_throw"), function (args) {
            if (targetThread == "current" && this.threadId != threadId) {
                return;
            }
            (0, console_1.inform)(new Il2Cpp.Object(args[0].readPointer()));
        });
    }
    /** */
    static internalCall(name, retType, argTypes) {
        const handle = Il2Cpp.Api._resolveInternalCall(Memory.allocUtf8String(name));
        return handle.isNull() ? null : new NativeFunction(handle, retType, argTypes);
    }
    /** Schedules a callback on the Il2Cpp initializer thread. */
    static scheduleOnInitializerThread(block) {
        return new Promise(resolve => {
            const listener = Interceptor.attach(Il2Cpp.Api._threadCurrent, () => {
                const currentThreadId = Il2Cpp.currentThread?.id;
                if (currentThreadId != undefined && currentThreadId == Il2Cpp.attachedThreads[0].id) {
                    listener.detach();
                    const result = block();
                    setImmediate(() => resolve(result));
                }
            });
        });
    }
    /** Attaches the caller thread to Il2Cpp domain and executes the given block.  */
    static async perform(block) {
        await this.initialize();
        let thread = this.currentThread;
        const isForeignThread = thread == null;
        if (thread == null) {
            thread = Il2Cpp.Domain.attach();
        }
        try {
            const result = block();
            return result instanceof Promise ? await result : result;
        }
        catch (e) {
            globalThis.console.log(e);
            throw e;
        }
        finally {
            if (isForeignThread) {
                thread.detach();
            }
        }
    }
    /** Creates a new `Il2Cpp.Tracer` instance. */
    static trace() {
        return new Il2Cpp.Tracer();
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppBase, "applicationDataPath", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppBase, "applicationIdentifier", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppBase, "applicationVersion", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppBase, "module", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppBase, "unityVersion", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppBase, "unityVersionIsBelow201830", null);
Reflect.set(globalThis, "Il2Cpp", Il2CppBase);

}).call(this)}).call(this,require("timers").setImmediate)

},{"../utils/console":367,"../utils/native-wait":369,"decorator-cache-getter":338,"timers":372,"versioning":373}],342:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** Filtering utilities. */
class Il2CppFiltering {
    constructor() { }
    /** Creates a filter which includes `element`s whose type can be assigned to `klass` variables. */
    static Is(klass) {
        return (element) => {
            if (element instanceof Il2Cpp.Class) {
                return klass.isAssignableFrom(element);
            }
            else {
                return klass.isAssignableFrom(element.class);
            }
        };
    }
    /** Creates a filter which includes `element`s whose type corresponds to `klass` type. */
    static IsExactly(klass) {
        return (element) => {
            if (element instanceof Il2Cpp.Class) {
                return element.equals(klass);
            }
            else {
                return element.class.equals(klass);
            }
        };
    }
}
Il2Cpp.Filtering = Il2CppFiltering;

},{}],343:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./base");
require("./api");
require("./filtering");
require("./runtime");
require("./tracer");
require("./structs/array");
require("./structs/assembly");
require("./structs/class");
require("./structs/domain");
require("./structs/field");
require("./structs/gc");
require("./structs/gc-handle");
require("./structs/image");
require("./structs/memory-snapshot");
require("./structs/method");
require("./structs/object");
require("./structs/parameter");
require("./structs/pointer");
require("./structs/reference");
require("./structs/string");
require("./structs/thread");
require("./structs/type");
require("./structs/type-enum");
require("./structs/value-type");

},{"./api":340,"./base":341,"./filtering":342,"./runtime":344,"./structs/array":345,"./structs/assembly":346,"./structs/class":347,"./structs/domain":348,"./structs/field":349,"./structs/gc":351,"./structs/gc-handle":350,"./structs/image":352,"./structs/memory-snapshot":353,"./structs/method":354,"./structs/object":355,"./structs/parameter":356,"./structs/pointer":357,"./structs/reference":358,"./structs/string":359,"./structs/thread":360,"./structs/type":362,"./structs/type-enum":361,"./structs/value-type":363,"./tracer":364}],344:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
/** */
class Il2CppRuntime {
    constructor() { }
    /** Gets the allocation granularity. */
    static get allocationGranularity() {
        return this.information[5];
    }
    /** Gets the size of the Il2CppArray struct. */
    static get arrayHeaderSize() {
        return this.information[2];
    }
    /** @internal */
    static get information() {
        const snapshot = Il2Cpp.MemorySnapshot.capture();
        try {
            return Il2Cpp.Api._memorySnapshotGetRuntimeInformation(snapshot);
        }
        finally {
            Il2Cpp.Api._memorySnapshotFree(snapshot);
        }
    }
    /** Gets the pointer size. */
    static get pointerSize() {
        return this.information[0];
    }
    /** Gets the size of the Il2CppObject struct. */
    static get objectHeaderSize() {
        return this.information[1];
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppRuntime, "information", null);
Il2Cpp.Runtime = Il2CppRuntime;

},{"decorator-cache-getter":338}],345:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const console_1 = require("../../utils/console");
const native_struct_1 = require("../../utils/native-struct");
/** Represents a `Il2CppArraySize`. */
class Il2CppArray extends native_struct_1.NativeStruct {
    /** @internal */
    static from(klass, lengthOrElements) {
        const length = typeof lengthOrElements == "number" ? lengthOrElements : lengthOrElements.length;
        const array = new Il2Cpp.Array(Il2Cpp.Api._arrayNew(klass, length));
        if (Array.isArray(lengthOrElements)) {
            array.elements.write(lengthOrElements);
        }
        return array;
    }
    /** @internal Gets a pointer to the first element of the current array. */
    get elements() {
        return new Il2Cpp.Pointer(Il2Cpp.Api._arrayGetElements(this), this.elementType);
    }
    /** Gets the size of the object encompassed by the current array. */
    get elementSize() {
        return this.elementType.class.arrayElementSize;
    }
    /** Gets the type of the object encompassed by the current array. */
    get elementType() {
        return this.object.class.type.class.baseType;
    }
    /** Gets the total number of elements in all the dimensions of the current array. */
    get length() {
        return Il2Cpp.Api._arrayGetLength(this);
    }
    /** Gets the encompassing object of the current array. */
    get object() {
        return new Il2Cpp.Object(this);
    }
    /** Gets the element at the specified index of the current array. */
    get(index) {
        if (index < 0 || index >= this.length) {
            (0, console_1.raise)(`cannot get element at index ${index}: array length is ${this.length}`);
        }
        return this.elements.get(index);
    }
    /** Sets the element at the specified index of the current array. */
    set(index, value) {
        if (index < 0 || index >= this.length) {
            (0, console_1.raise)(`cannot get element at index ${index}: array length is ${this.length}`);
        }
        this.elements.set(index, value);
    }
    /** */
    toString() {
        return this.isNull() ? "null" : `[${this.elements.read(this.length, 0)}]`;
    }
    /** Iterable. */
    *[Symbol.iterator]() {
        for (let i = 0; i < this.length; i++) {
            yield this.elements.get(i);
        }
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppArray.prototype, "elements", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppArray.prototype, "elementSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppArray.prototype, "elementType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppArray.prototype, "length", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppArray.prototype, "object", null);
Il2Cpp.Array = Il2CppArray;

},{"../../utils/console":367,"../../utils/native-struct":368,"decorator-cache-getter":338}],346:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const native_struct_1 = require("../../utils/native-struct");
const utils_1 = require("../../utils/utils");
/** Represents a `Il2CppAssembly`. */
let Il2CppAssembly = class Il2CppAssembly extends native_struct_1.NonNullNativeStruct {
    /** Gets the image of this assembly. */
    get image() {
        return new Il2Cpp.Image(Il2Cpp.Api._assemblyGetImage(this));
    }
    /** Gets the name of this assembly. */
    get name() {
        return this.image.name.replace(".dll", "");
    }
    /** Gets the encompassing object of the current assembly. */
    get object() {
        return Il2Cpp.Image.corlib.class("System.Reflection.Assembly").method("Load").invoke(Il2Cpp.String.from(this.name));
    }
};
__decorate([
    decorator_cache_getter_1.cache
], Il2CppAssembly.prototype, "image", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppAssembly.prototype, "name", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppAssembly.prototype, "object", null);
Il2CppAssembly = __decorate([
    utils_1.cacheInstances
], Il2CppAssembly);
Il2Cpp.Assembly = Il2CppAssembly;

},{"../../utils/native-struct":368,"../../utils/utils":370,"decorator-cache-getter":338}],347:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const console_1 = require("../../utils/console");
const native_struct_1 = require("../../utils/native-struct");
const utils_1 = require("../../utils/utils");
/** Represents a `Il2CppClass`. */
let Il2CppClass = class Il2CppClass extends native_struct_1.NonNullNativeStruct {
    /** Gets the actual size of the instance of the current class. */
    get actualInstanceSize() {
        return Il2Cpp.Api._classGetActualInstanceSize(this);
    }
    /** Gets the array class which encompass the current class. */
    get arrayClass() {
        return new Il2Cpp.Class(Il2Cpp.Api._classGetArrayClass(this, 1));
    }
    /** Gets the size of the object encompassed by the current array class. */
    get arrayElementSize() {
        return Il2Cpp.Api._classGetArrayElementSize(this);
    }
    /** Gets the name of the assembly in which the current class is defined. */
    get assemblyName() {
        return Il2Cpp.Api._classGetAssemblyName(this).readUtf8String();
    }
    /** Gets the class that declares the current nested class. */
    get declaringClass() {
        const handle = Il2Cpp.Api._classGetDeclaringType(this);
        return handle.isNull() ? null : new Il2Cpp.Class(handle);
    }
    /** Gets the encompassed type of this array, reference, pointer or enum type. */
    get baseType() {
        const handle = Il2Cpp.Api._classGetBaseType(this);
        return handle.isNull() ? null : new Il2Cpp.Type(handle);
    }
    /** Gets the class of the object encompassed or referred to by the current array, pointer or reference class. */
    get elementClass() {
        const handle = Il2Cpp.Api._classGetElementClass(this);
        return handle.isNull() ? null : new Il2Cpp.Class(handle);
    }
    /** Gets the fields of the current class. */
    get fields() {
        return Array.from((0, utils_1.nativeIterator)(this, Il2Cpp.Api._classGetFields, Il2Cpp.Field));
    }
    /** Gets the flags of the current class. */
    get flags() {
        return Il2Cpp.Api._classGetFlags(this);
    }
    /** Gets the amount of generic parameters of this generic class. */
    get genericParameterCount() {
        if (!this.isGeneric) {
            return 0;
        }
        return this.type.object.method("GetGenericArguments").invoke().length;
    }
    /** Determines whether the GC has tracking references to the current class instances. */
    get hasReferences() {
        return !!Il2Cpp.Api._classHasReferences(this);
    }
    /** Determines whether ther current class has a valid static constructor. */
    get hasStaticConstructor() {
        const staticConstructor = this.tryMethod(".cctor");
        return staticConstructor != null && !staticConstructor.virtualAddress.isNull();
    }
    /** Gets the image in which the current class is defined. */
    get image() {
        return new Il2Cpp.Image(Il2Cpp.Api._classGetImage(this));
    }
    /** Gets the size of the instance of the current class. */
    get instanceSize() {
        return Il2Cpp.Api._classGetInstanceSize(this);
    }
    /** Determines whether the current class is abstract. */
    get isAbstract() {
        return !!Il2Cpp.Api._classIsAbstract(this);
    }
    /** Determines whether the current class is blittable. */
    get isBlittable() {
        return !!Il2Cpp.Api._classIsBlittable(this);
    }
    /** Determines whether the current class is an enumeration. */
    get isEnum() {
        return !!Il2Cpp.Api._classIsEnum(this);
    }
    /** Determines whether the current class is a generic one. */
    get isGeneric() {
        return !!Il2Cpp.Api._classIsGeneric(this);
    }
    /** Determines whether the current class is inflated. */
    get isInflated() {
        return !!Il2Cpp.Api._classIsInflated(this);
    }
    /** Determines whether the current class is an interface. */
    get isInterface() {
        return !!Il2Cpp.Api._classIsInterface(this);
    }
    /** Determines whether the current class is a value type. */
    get isValueType() {
        return !!Il2Cpp.Api._classIsValueType(this);
    }
    /** Gets the interfaces implemented or inherited by the current class. */
    get interfaces() {
        return Array.from((0, utils_1.nativeIterator)(this, Il2Cpp.Api._classGetInterfaces, Il2Cpp.Class));
    }
    /** Gets the methods implemented by the current class. */
    get methods() {
        return Array.from((0, utils_1.nativeIterator)(this, Il2Cpp.Api._classGetMethods, Il2Cpp.Method));
    }
    /** Gets the name of the current class. */
    get name() {
        return Il2Cpp.Api._classGetName(this).readUtf8String();
    }
    /** Gets the namespace of the current class. */
    get namespace() {
        return Il2Cpp.Api._classGetNamespace(this).readUtf8String();
    }
    /** Gets the classes nested inside the current class. */
    get nestedClasses() {
        return Array.from((0, utils_1.nativeIterator)(this, Il2Cpp.Api._classGetNestedClasses, Il2Cpp.Class));
    }
    /** Gets the class from which the current class directly inherits. */
    get parent() {
        const handle = Il2Cpp.Api._classGetParent(this);
        return handle.isNull() ? null : new Il2Cpp.Class(handle);
    }
    /** Gets the rank (number of dimensions) of the current array class. */
    get rank() {
        return Il2Cpp.Api._classGetRank(this);
    }
    /** Gets a pointer to the static fields of the current class. */
    get staticFieldsData() {
        return Il2Cpp.Api._classGetStaticFieldData(this);
    }
    /** Gets the size of the instance - as a value type - of the current class. */
    get valueSize() {
        return Il2Cpp.Api._classGetValueSize(this, NULL);
    }
    /** Gets the type of the current class. */
    get type() {
        return new Il2Cpp.Type(Il2Cpp.Api._classGetType(this));
    }
    /** Allocates a new object of the current class. */
    alloc() {
        return new Il2Cpp.Object(Il2Cpp.Api._objectNew(this));
    }
    /** Gets the field identified by the given name. */
    field(name) {
        return this.tryField(name);
    }
    /** Builds a generic instance of the current generic class. */
    inflate(...classes) {
        if (!this.isGeneric) {
            (0, console_1.raise)(`cannot inflate class ${this.type.name}: it has no generic parameters`);
        }
        if (this.genericParameterCount != classes.length) {
            (0, console_1.raise)(`cannot inflate class ${this.type.name}: it needs ${this.genericParameterCount} generic parameter(s), not ${classes.length}`);
        }
        const types = classes.map(klass => klass.type.object);
        const typeArray = Il2Cpp.Array.from(Il2Cpp.Image.corlib.class("System.Type"), types);
        const inflatedType = this.type.object.method("MakeGenericType", 1).invoke(typeArray);
        return new Il2Cpp.Class(Il2Cpp.Api._classFromSystemType(inflatedType));
    }
    /** Calls the static constructor of the current class. */
    initialize() {
        Il2Cpp.Api._classInit(this);
    }
    /** Determines whether an instance of `other` class can be assigned to a variable of the current type. */
    isAssignableFrom(other) {
        return !!Il2Cpp.Api._classIsAssignableFrom(this, other);
    }
    /** Determines whether the current class derives from `other` class. */
    isSubclassOf(other, checkInterfaces) {
        return !!Il2Cpp.Api._classIsSubclassOf(this, other, +checkInterfaces);
    }
    /** Gets the method identified by the given name and parameter count. */
    method(name, parameterCount = -1) {
        return this.tryMethod(name, parameterCount);
    }
    /** Gets the nested class with the given name. */
    nested(name) {
        return this.tryNested(name);
    }
    /** Allocates a new object of the current class and calls its default constructor. */
    new() {
        const object = this.alloc();
        const exceptionArray = Memory.alloc(Process.pointerSize);
        Il2Cpp.Api._objectInit(object, exceptionArray);
        const exception = exceptionArray.readPointer();
        if (!exception.isNull()) {
            (0, console_1.raise)(new Il2Cpp.Object(exception).toString());
        }
        return object;
    }
    /** Gets the field with the given name. */
    tryField(name) {
        const handle = Il2Cpp.Api._classGetFieldFromName(this, Memory.allocUtf8String(name));
        return handle.isNull() ? null : new Il2Cpp.Field(handle);
    }
    /** Gets the method with the given name and parameter count. */
    tryMethod(name, parameterCount = -1) {
        const handle = Il2Cpp.Api._classGetMethodFromName(this, Memory.allocUtf8String(name), parameterCount);
        return handle.isNull() ? null : new Il2Cpp.Method(handle);
    }
    /** Gets the nested class with the given name. */
    tryNested(name) {
        return this.nestedClasses.find(e => e.name == name);
    }
    /** */
    toString() {
        const inherited = [this.parent].concat(this.interfaces);
        return `\
// ${this.assemblyName}
${this.isEnum ? `enum` : this.isValueType ? `struct` : this.isInterface ? `interface` : `class`} \
${this.type.name}\
${inherited ? ` : ${inherited.map(e => e?.type.name).join(`, `)}` : ``}
{
    ${this.fields.join(`\n    `)}
    ${this.methods.join(`\n    `)}
}`;
    }
    /** Executes a callback for every defined class. */
    static enumerate(block) {
        const callback = new NativeCallback(function (klass, _) {
            block(new Il2Cpp.Class(klass));
        }, "void", ["pointer", "pointer"]);
        return Il2Cpp.Api._classForEach(callback, NULL);
    }
};
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "actualInstanceSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "arrayClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "arrayElementSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "assemblyName", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "declaringClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "baseType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "elementClass", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "fields", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "flags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "genericParameterCount", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "hasReferences", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "hasStaticConstructor", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "image", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "instanceSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isAbstract", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isBlittable", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isEnum", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isGeneric", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isInflated", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isInterface", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "isValueType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "interfaces", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "methods", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "name", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "namespace", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "nestedClasses", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "parent", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "rank", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "staticFieldsData", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "valueSize", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppClass.prototype, "type", null);
__decorate([
    (0, utils_1.levenshtein)("fields")
], Il2CppClass.prototype, "field", null);
__decorate([
    (0, utils_1.levenshtein)("methods")
], Il2CppClass.prototype, "method", null);
__decorate([
    (0, utils_1.levenshtein)("nestedClasses")
], Il2CppClass.prototype, "nested", null);
Il2CppClass = __decorate([
    utils_1.cacheInstances
], Il2CppClass);
Il2Cpp.Class = Il2CppClass;

},{"../../utils/console":367,"../../utils/native-struct":368,"../../utils/utils":370,"decorator-cache-getter":338}],348:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const utils_1 = require("../../utils/utils");
/** Represents a `Il2CppDomain`. */
class Il2CppDomain {
    constructor() { }
    /** Gets the assemblies that have been loaded into the execution context of the application domain. */
    static get assemblies() {
        const sizePointer = Memory.alloc(Process.pointerSize);
        const startPointer = Il2Cpp.Api._domainGetAssemblies(this, sizePointer);
        const count = sizePointer.readInt();
        const array = new Array(count);
        for (let i = 0; i < count; i++) {
            array[i] = new Il2Cpp.Assembly(startPointer.add(i * Process.pointerSize).readPointer());
        }
        if (count == 0) {
            for (const assemblyObject of this.object.method("GetAssemblies").overload().invoke()) {
                const assemblyName = assemblyObject.method("GetSimpleName").invoke().content;
                if (assemblyName != null) {
                    array.push(this.assembly(assemblyName));
                }
            }
        }
        return array;
    }
    /** Gets the application domain handle. */
    static get handle() {
        return Il2Cpp.Api._domainGet();
    }
    /** Gets the encompassing object of the application domain. */
    static get object() {
        return Il2Cpp.Image.corlib.class("System.AppDomain").method("get_CurrentDomain").invoke();
    }
    /** Opens and loads the assembly with the given name. */
    static assembly(name) {
        return this.tryAssembly(name);
    }
    /** Attached a new thread to the application domain. */
    static attach() {
        return new Il2Cpp.Thread(Il2Cpp.Api._threadAttach(this));
    }
    /** Opens and loads the assembly with the given name. */
    static tryAssembly(name) {
        const handle = Il2Cpp.Api._domainAssemblyOpen(this, Memory.allocUtf8String(name));
        return handle.isNull() ? null : new Il2Cpp.Assembly(handle);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppDomain, "assemblies", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppDomain, "handle", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppDomain, "object", null);
__decorate([
    (0, utils_1.levenshtein)("assemblies")
], Il2CppDomain, "assembly", null);
Il2Cpp.Domain = Il2CppDomain;

},{"../../utils/utils":370,"decorator-cache-getter":338}],349:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const console_1 = require("../../utils/console");
const native_struct_1 = require("../../utils/native-struct");
const utils_1 = require("../utils");
/** Represents a `FieldInfo`. */
class Il2CppField extends native_struct_1.NonNullNativeStruct {
    /** Gets the class in which this field is defined. */
    get class() {
        return new Il2Cpp.Class(Il2Cpp.Api._fieldGetClass(this));
    }
    /** Gets the flags of the current field. */
    get flags() {
        return Il2Cpp.Api._fieldGetFlags(this);
    }
    /** Determines whether this field value is known at compile time. */
    get isLiteral() {
        return !!Il2Cpp.Api._fieldIsLiteral(this);
    }
    /** Determines whether this field is static. */
    get isStatic() {
        return !!Il2Cpp.Api._fieldIsStatic(this);
    }
    /** Determines whether this field is thread static. */
    get isThreadStatic() {
        return !!Il2Cpp.Api._fieldIsThreadStatic(this);
    }
    /** Gets the access modifier of this field. */
    get modifier() {
        return Il2Cpp.Api._fieldGetModifier(this).readUtf8String();
    }
    /** Gets the name of this field. */
    get name() {
        return Il2Cpp.Api._fieldGetName(this).readUtf8String();
    }
    /** Gets the offset of this field, calculated as the difference with its owner virtual address. */
    get offset() {
        return Il2Cpp.Api._fieldGetOffset(this);
    }
    /** Gets the type of this field. */
    get type() {
        return new Il2Cpp.Type(Il2Cpp.Api._fieldGetType(this));
    }
    /** Gets the value of this field. */
    get value() {
        const handle = Memory.alloc(Process.pointerSize);
        Il2Cpp.Api._fieldGetStaticValue(this.handle, handle);
        return (0, utils_1.read)(handle, this.type);
    }
    /** Sets the value of this field. Thread static or literal values cannot be altered yet. */
    set value(value) {
        if (this.isThreadStatic || this.isLiteral) {
            (0, console_1.raise)(`cannot modify the value of field ${this.name}: is thread static or literal`);
        }
        const handle = Memory.alloc(Process.pointerSize);
        (0, utils_1.write)(handle, value, this.type);
        Il2Cpp.Api._fieldSetStaticValue(this.handle, handle);
    }
    /** */
    toString() {
        return `\
${this.isThreadStatic ? `[ThreadStatic] ` : ``}\
${this.isStatic ? `static ` : ``}\
${this.type.name} \
${this.name}\
${this.isLiteral ? ` = ${this.type.class.isEnum ? (0, utils_1.read)(this.value.handle, this.type.class.baseType) : this.value}` : ``};\
${this.isThreadStatic || this.isLiteral ? `` : ` // 0x${this.offset.toString(16)}`}`;
    }
    /** @internal */
    withHolder(instance) {
        let valueHandle = instance.handle.add(this.offset);
        if (instance instanceof Il2Cpp.ValueType) {
            valueHandle = valueHandle.sub(Il2Cpp.Runtime.objectHeaderSize);
        }
        return new Proxy(this, {
            get(target, property) {
                if (property == "value") {
                    return (0, utils_1.read)(valueHandle, target.type);
                }
                return Reflect.get(target, property);
            },
            set(target, property, value) {
                if (property == "value") {
                    (0, utils_1.write)(valueHandle, value, target.type);
                    return true;
                }
                return Reflect.set(target, property, value);
            }
        });
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "class", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "flags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "isLiteral", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "isStatic", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "isThreadStatic", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "name", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "offset", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppField.prototype, "type", null);
Reflect.set(Il2Cpp, "Field", Il2CppField);

},{"../../utils/console":367,"../../utils/native-struct":368,"../utils":365,"decorator-cache-getter":338}],350:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** Represents a GCHandle. */
class Il2CppGCHandle {
    handle;
    /** @internal */
    constructor(handle) {
        this.handle = handle;
    }
    /** Gets the object associated to this handle. */
    get target() {
        const handle = Il2Cpp.Api._gcHandleGetTarget(this.handle);
        return handle.isNull() ? null : new Il2Cpp.Object(handle);
    }
    /** Frees this handle. */
    free() {
        return Il2Cpp.Api._gcHandleFree(this.handle);
    }
}
Il2Cpp.GC.Handle = Il2CppGCHandle;

},{}],351:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const versioning_1 = __importDefault(require("versioning"));
/** Garbage collector utility functions. */
class Il2CppGC {
    constructor() { }
    /** Gets the heap size in bytes. */
    static get heapSize() {
        return Il2Cpp.Api._gcGetHeapSize();
    }
    /** Determines whether the garbage collector is disabled. */
    static get isEnabled() {
        return !Il2Cpp.Api._gcIsDisabled();
    }
    /** Determines whether the garbage collector is incremental. */
    static get isIncremental() {
        return !!Il2Cpp.Api._gcIsIncremental();
    }
    /** Gets the number of nanoseconds the garbage collector can spend in a collection step. */
    static get maxTimeSlice() {
        return Il2Cpp.Api._gcGetMaxTimeSlice();
    }
    /** Gets the used heap size in bytes. */
    static get usedHeapSize() {
        return Il2Cpp.Api._gcGetUsedSize();
    }
    /** Enables or disables the garbage collector. */
    static set isEnabled(value) {
        value ? Il2Cpp.Api._gcEnable() : Il2Cpp.Api._gcDisable();
    }
    /** Sets the number of nanoseconds the garbage collector can spend in a collection step. */
    static set maxTimeSlice(nanoseconds) {
        Il2Cpp.Api._gcSetMaxTimeSlice(nanoseconds);
    }
    /** Returns the heap allocated objects of the specified class. This variant reads GC descriptors. */
    static choose(klass) {
        const matches = [];
        const callback = (objects, size, _) => {
            for (let i = 0; i < size; i++) {
                matches.push(new Il2Cpp.Object(objects.add(i * Process.pointerSize).readPointer()));
            }
        };
        const chooseCallback = new NativeCallback(callback, "void", ["pointer", "int", "pointer"]);
        if (versioning_1.default.gte(Il2Cpp.unityVersion, "2021.2.0")) {
            const realloc = (handle, size) => {
                if (!handle.isNull() && size.compare(0) == 0) {
                    Il2Cpp.free(handle);
                    return NULL;
                }
                else {
                    return Il2Cpp.alloc(size);
                }
            };
            const reallocCallback = new NativeCallback(realloc, "pointer", ["pointer", "size_t", "pointer"]);
            const state = Il2Cpp.Api._livenessAllocateStruct(klass.handle, 0, chooseCallback, NULL, reallocCallback);
            Il2Cpp.Api._livenessCalculationFromStatics(state);
            Il2Cpp.Api._livenessFinalize(state);
            Il2Cpp.Api._livenessFreeStruct(state);
        }
        else {
            const onWorld = new NativeCallback(() => { }, "void", []);
            const state = Il2Cpp.Api._livenessCalculationBegin(klass.handle, 0, chooseCallback, NULL, onWorld, onWorld);
            Il2Cpp.Api._livenessCalculationFromStatics(state);
            Il2Cpp.Api._livenessCalculationEnd(state);
        }
        return matches;
    }
    /** Forces a garbage collection of the specified generation. */
    static collect(generation) {
        Il2Cpp.Api._gcCollect(generation < 0 ? 0 : generation > 2 ? 2 : generation);
    }
    /** Forces a garbage collection. */
    static collectALittle() {
        Il2Cpp.Api._gcCollectALittle();
    }
    /** Resumes all the previously stopped threads. */
    static startWorld() {
        return Il2Cpp.Api._gcStartWorld();
    }
    /** Performs an incremental garbage collection. */
    static startIncrementalCollection() {
        return Il2Cpp.Api._gcStartIncrementalCollection();
    }
    /** Stops all threads which may access the garbage collected heap, other than the caller. */
    static stopWorld() {
        return Il2Cpp.Api._gcStopWorld();
    }
}
Reflect.set(Il2Cpp, "GC", Il2CppGC);

},{"versioning":373}],352:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const native_struct_1 = require("../../utils/native-struct");
const utils_1 = require("../../utils/utils");
/** Represents a `Il2CppImage`. */
let Il2CppImage = class Il2CppImage extends native_struct_1.NonNullNativeStruct {
    /** Gets the COR library. */
    static get corlib() {
        return new Il2Cpp.Image(Il2Cpp.Api._getCorlib());
    }
    /** Gets the assembly in which the current image is defined. */
    get assembly() {
        return new Il2Cpp.Assembly(Il2Cpp.Api._imageGetAssembly(this));
    }
    /** Gets the amount of classes defined in this image. */
    get classCount() {
        return Il2Cpp.Api._imageGetClassCount(this);
    }
    /** Gets the classes defined in this image. */
    get classes() {
        if (Il2Cpp.unityVersionIsBelow201830) {
            const types = this.assembly.object.method("GetTypes").invoke(false);
            // On Unity 5.3.8f1, getting System.Reflection.Emit.OpCodes type name
            // without iterating all the classes first somehow blows things up at
            // app startup, hence the `Array.from`.
            return Array.from(types).map(e => new Il2Cpp.Class(Il2Cpp.Api._classFromSystemType(e)));
        }
        else {
            return Array.from(Array(this.classCount), (_, i) => new Il2Cpp.Class(Il2Cpp.Api._imageGetClass(this, i)));
        }
    }
    /** Gets the name of this image. */
    get name() {
        return Il2Cpp.Api._imageGetName(this).readUtf8String();
    }
    /** Gets the class with the specified name defined in this image. */
    class(name) {
        return this.tryClass(name);
    }
    /** Gets the class with the specified name defined in this image. */
    tryClass(name) {
        const dotIndex = name.lastIndexOf(".");
        const classNamespace = Memory.allocUtf8String(dotIndex == -1 ? "" : name.slice(0, dotIndex));
        const className = Memory.allocUtf8String(name.slice(dotIndex + 1));
        const handle = Il2Cpp.Api._classFromName(this, classNamespace, className);
        return handle.isNull() ? null : new Il2Cpp.Class(handle);
    }
};
__decorate([
    decorator_cache_getter_1.cache
], Il2CppImage.prototype, "assembly", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppImage.prototype, "classCount", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppImage.prototype, "classes", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppImage.prototype, "name", null);
__decorate([
    (0, utils_1.levenshtein)("classes", e => (e.namespace ? `${e.namespace}.${e.name}` : e.name))
], Il2CppImage.prototype, "class", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppImage, "corlib", null);
Il2CppImage = __decorate([
    utils_1.cacheInstances
], Il2CppImage);
Il2Cpp.Image = Il2CppImage;

},{"../../utils/native-struct":368,"../../utils/utils":370,"decorator-cache-getter":338}],353:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const native_struct_1 = require("../../utils/native-struct");
const utils_1 = require("../../utils/utils");
/** Represents a `Il2CppManagedMemorySnapshot`. */
class Il2CppMemorySnapshot extends native_struct_1.NonNullNativeStruct {
    /** Captures a memory snapshot. */
    static capture() {
        return new Il2Cpp.MemorySnapshot();
    }
    /** Creates a memory snapshot with the given handle. */
    constructor(handle = Il2Cpp.Api._memorySnapshotCapture()) {
        super(handle);
    }
    /** Gets any initialized class. */
    get classes() {
        return Array.from((0, utils_1.nativeIterator)(this, Il2Cpp.Api._memorySnapshotGetClasses, Il2Cpp.Class));
    }
    /** Gets the objects tracked by this memory snapshot. */
    get objects() {
        const array = [];
        const [count, start] = Il2Cpp.Api._memorySnapshotGetGCHandles(this);
        for (let i = 0; i < count; i++) {
            array.push(new Il2Cpp.Object(start.add(i * Process.pointerSize).readPointer()));
        }
        return array;
    }
    /** Frees this memory snapshot. */
    free() {
        Il2Cpp.Api._memorySnapshotFree(this);
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMemorySnapshot.prototype, "classes", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMemorySnapshot.prototype, "objects", null);
Il2Cpp.MemorySnapshot = Il2CppMemorySnapshot;

},{"../../utils/native-struct":368,"../../utils/utils":370,"decorator-cache-getter":338}],354:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const console_1 = require("../../utils/console");
const native_struct_1 = require("../../utils/native-struct");
const utils_1 = require("../../utils/utils");
const utils_2 = require("../utils");
/** Represents a `MethodInfo`. */
class Il2CppMethod extends native_struct_1.NonNullNativeStruct {
    /** Gets the class in which this method is defined. */
    get class() {
        return new Il2Cpp.Class(Il2Cpp.Api._methodGetClass(this));
    }
    /** Gets the flags of the current method. */
    get flags() {
        return Il2Cpp.Api._methodGetFlags(this, NULL);
    }
    /** Gets the implementation flags of the current method. */
    get implementationFlags() {
        const implementationFlagsPointer = Memory.alloc(Process.pointerSize);
        Il2Cpp.Api._methodGetFlags(this, implementationFlagsPointer);
        return implementationFlagsPointer.readU32();
    }
    /** */
    get fridaSignature() {
        const types = [];
        for (const parameter of this.parameters) {
            types.push(parameter.type.fridaAlias);
        }
        if (!this.isStatic || Il2Cpp.unityVersionIsBelow201830) {
            types.unshift("pointer");
        }
        if (this.isInflated) {
            types.push("pointer");
        }
        return types;
    }
    /** Gets the amount of generic parameters of this generic method. */
    get genericParameterCount() {
        if (!this.isGeneric) {
            return 0;
        }
        return this.object.method("GetGenericArguments").invoke().length;
    }
    /** Determines whether this method is external. */
    get isExternal() {
        return !!Il2Cpp.Api._methodIsExternal(this);
    }
    /** Determines whether this method is generic. */
    get isGeneric() {
        return !!Il2Cpp.Api._methodIsGeneric(this);
    }
    /** Determines whether this method is inflated (generic with a concrete type parameter). */
    get isInflated() {
        return !!Il2Cpp.Api._methodIsInflated(this);
    }
    /** Determines whether this method is static. */
    get isStatic() {
        return !Il2Cpp.Api._methodIsInstance(this);
    }
    /** Determines whether this method is synchronized. */
    get isSynchronized() {
        return !!Il2Cpp.Api._methodIsSynchronized(this);
    }
    /** Gets the access modifier of this method. */
    get modifier() {
        return Il2Cpp.Api._methodGetModifier(this).readUtf8String();
    }
    /** Gets the name of this method. */
    get name() {
        return Il2Cpp.Api._methodGetName(this).readUtf8String();
    }
    /** @internal */
    get nativeFunction() {
        return new NativeFunction(this.virtualAddress, this.returnType.fridaAlias, this.fridaSignature);
    }
    /** Gets the encompassing object of the current method. */
    get object() {
        return new Il2Cpp.Object(Il2Cpp.Api._methodGetObject(this, NULL));
    }
    /** Gets the amount of parameters of this method. */
    get parameterCount() {
        return Il2Cpp.Api._methodGetParameterCount(this);
    }
    /** Gets the parameters of this method. */
    get parameters() {
        return Array.from(Array(this.parameterCount), (_, i) => {
            const parameterName = Il2Cpp.Api._methodGetParameterName(this, i).readUtf8String();
            const parameterType = Il2Cpp.Api._methodGetParameterType(this, i);
            return new Il2Cpp.Parameter(parameterName, i, new Il2Cpp.Type(parameterType));
        });
    }
    /** Gets the relative virtual address (RVA) of this method. */
    get relativeVirtualAddress() {
        return this.virtualAddress.sub(Il2Cpp.module.base);
    }
    /** Gets the return type of this method. */
    get returnType() {
        return new Il2Cpp.Type(Il2Cpp.Api._methodGetReturnType(this));
    }
    /** Gets the virtual address (VA) to this method. */
    get virtualAddress() {
        return Il2Cpp.Api._methodGetPointer(this);
    }
    /** Replaces the body of this method. */
    set implementation(block) {
        const startIndex = +!this.isStatic | +Il2Cpp.unityVersionIsBelow201830;
        const callback = (...args) => {
            const parameters = this.parameters.map((e, i) => (0, utils_2.fromFridaValue)(args[i + startIndex], e.type));
            return (0, utils_2.toFridaValue)(block.call(this.isStatic ? this.class : new Il2Cpp.Object(args[0]), ...parameters));
        };
        try {
            Interceptor.replace(this.virtualAddress, new NativeCallback(callback, this.returnType.fridaAlias, this.fridaSignature));
        }
        catch (e) {
            switch (e.message) {
                case "access violation accessing 0x0":
                    (0, console_1.raise)(`cannot implement method ${this.name}: it has a NULL virtual address`);
                case `unable to intercept function at ${this.virtualAddress}; please file a bug`:
                    (0, console_1.warn)(`cannot implement method ${this.name}: it may be a thunk`);
                    break;
                case "already replaced this function":
                    (0, console_1.warn)(`cannot implement method ${this.name}: already replaced by a thunk`);
                    break;
                default:
                    throw e;
            }
        }
    }
    /** Creates a generic instance of the current generic method. */
    inflate(...classes) {
        if (!this.isGeneric) {
            (0, console_1.raise)(`cannot inflate method ${this.name}: it has no generic parameters`);
        }
        if (this.genericParameterCount != classes.length) {
            (0, console_1.raise)(`cannot inflate method ${this.name}: it needs ${this.genericParameterCount} generic parameter(s), not ${classes.length}`);
        }
        const types = classes.map(klass => klass.type.object);
        const typeArray = Il2Cpp.Array.from(Il2Cpp.Image.corlib.class("System.Type"), types);
        const inflatedMethodObject = this.object.method("MakeGenericMethod", 1).invoke(typeArray);
        return new Il2Cpp.Method(Il2Cpp.Api._methodGetFromReflection(inflatedMethodObject));
    }
    /** Invokes this method. */
    invoke(...parameters) {
        if (!this.isStatic) {
            (0, console_1.raise)(`cannot invoke a non-static method ${this.name}: must be invoked throught a Il2Cpp.Object, not a Il2Cpp.Class`);
        }
        return this.invokeRaw(NULL, ...parameters);
    }
    /** @internal */
    invokeRaw(instance, ...parameters) {
        const allocatedParameters = parameters.map(utils_2.toFridaValue);
        if (!this.isStatic || Il2Cpp.unityVersionIsBelow201830) {
            allocatedParameters.unshift(instance);
        }
        if (this.isInflated) {
            allocatedParameters.push(this.handle);
        }
        try {
            const returnValue = this.nativeFunction(...allocatedParameters);
            return (0, utils_2.fromFridaValue)(returnValue, this.returnType);
        }
        catch (e) {
            if (e == null) {
                (0, console_1.raise)("an unexpected native function exception occurred, this is due to parameter types mismatch");
            }
            switch (e.message) {
                case "bad argument count":
                    (0, console_1.raise)(`cannot invoke method ${this.name}: it needs ${this.parameterCount} parameter(s), not ${parameters.length}`);
                case "expected a pointer":
                case "expected number":
                case "expected array with fields":
                    (0, console_1.raise)(`cannot invoke method ${this.name}: parameter types mismatch`);
            }
            throw e;
        }
    }
    /** Gets the overloaded method with the given parameter types. */
    overload(...parameterTypes) {
        const result = this.tryOverload(...parameterTypes);
        if (result != undefined)
            return result;
        (0, console_1.raise)(`cannot find overloaded method ${this.name}(${parameterTypes})`);
    }
    /** Gets the parameter with the given name. */
    parameter(name) {
        return this.tryParameter(name);
    }
    /** Restore the original method implementation. */
    revert() {
        Interceptor.revert(this.virtualAddress);
        Interceptor.flush();
    }
    /** Gets the overloaded method with the given parameter types. */
    tryOverload(...parameterTypes) {
        return this.class.methods.find(e => e.name == this.name &&
            e.parameterCount == parameterTypes.length &&
            e.parameters.every((e, i) => e.type.name == parameterTypes[i]));
    }
    /** Gets the parameter with the given name. */
    tryParameter(name) {
        return this.parameters.find(e => e.name == name);
    }
    /** */
    toString() {
        return `\
${this.isStatic ? `static ` : ``}\
${this.returnType.name} \
${this.name}\
(${this.parameters.join(`, `)});\
${this.virtualAddress.isNull() ? `` : ` // 0x${this.relativeVirtualAddress.toString(16).padStart(8, `0`)}`}`;
    }
    /** @internal */
    withHolder(instance) {
        return new Proxy(this, {
            get(target, property) {
                switch (property) {
                    case "invoke":
                        return target.invokeRaw.bind(target, instance.handle);
                    case "inflate":
                    case "overload":
                    case "tryOverload":
                        return function (...args) {
                            return target[property](...args)?.withHolder(instance);
                        };
                }
                return Reflect.get(target, property);
            }
        });
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "class", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "flags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "implementationFlags", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "fridaSignature", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "genericParameterCount", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "isExternal", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "isGeneric", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "isInflated", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "isStatic", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "isSynchronized", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "name", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "nativeFunction", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "object", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "parameterCount", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "parameters", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "relativeVirtualAddress", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "returnType", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppMethod.prototype, "virtualAddress", null);
__decorate([
    (0, utils_1.levenshtein)("parameters")
], Il2CppMethod.prototype, "parameter", null);
Reflect.set(Il2Cpp, "Method", Il2CppMethod);

},{"../../utils/console":367,"../../utils/native-struct":368,"../../utils/utils":370,"../utils":365,"decorator-cache-getter":338}],355:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const native_struct_1 = require("../../utils/native-struct");
/** Represents a `Il2CppObject`. */
class Il2CppObject extends native_struct_1.NativeStruct {
    /** Gets the class of this object. */
    get class() {
        return new Il2Cpp.Class(Il2Cpp.Api._objectGetClass(this));
    }
    /** Gets the size of the current object. */
    get size() {
        return Il2Cpp.Api._objectGetSize(this);
    }
    /** Acquires an exclusive lock on the current object. */
    enter() {
        return Il2Cpp.Api._monitorEnter(this);
    }
    /** Release an exclusive lock on the current object. */
    exit() {
        return Il2Cpp.Api._monitorExit(this);
    }
    /** Gets the field with the given name. */
    field(name) {
        return this.class.field(name).withHolder(this);
    }
    /** Gets the method with the given name. */
    method(name, parameterCount = -1) {
        return this.class.method(name, parameterCount).withHolder(this);
    }
    /** Notifies a thread in the waiting queue of a change in the locked object's state. */
    pulse() {
        return Il2Cpp.Api._monitorPulse(this);
    }
    /** Notifies all waiting threads of a change in the object's state. */
    pulseAll() {
        return Il2Cpp.Api._monitorPulseAll(this);
    }
    /** Creates a reference to this object. */
    ref(pin) {
        return new Il2Cpp.GC.Handle(Il2Cpp.Api._gcHandleNew(this, +pin));
    }
    /** Gets the correct virtual method from the given virtual method. */
    virtualMethod(method) {
        return new Il2Cpp.Method(Il2Cpp.Api._objectGetVirtualMethod(this, method)).withHolder(this);
    }
    /** Attempts to acquire an exclusive lock on the current object. */
    tryEnter(timeout) {
        return !!Il2Cpp.Api._monitorTryEnter(this, timeout);
    }
    /** Gets the field with the given name. */
    tryField(name) {
        return this.class.tryField(name)?.withHolder(this);
    }
    /** Gets the field with the given name. */
    tryMethod(name, parameterCount = -1) {
        return this.class.tryMethod(name, parameterCount)?.withHolder(this);
    }
    /** Releases the lock on an object and attempts to block the current thread until it reacquires the lock. */
    tryWait(timeout) {
        return !!Il2Cpp.Api._monitorTryWait(this, timeout);
    }
    /** */
    toString() {
        return this.isNull() ? "null" : this.method("ToString").invoke().content ?? "null";
    }
    /** Unboxes the value type out of this object. */
    unbox() {
        return new Il2Cpp.ValueType(Il2Cpp.Api._objectUnbox(this), this.class.type);
    }
    /** Releases the lock on an object and blocks the current thread until it reacquires the lock. */
    wait() {
        return Il2Cpp.Api._monitorWait(this);
    }
    /** Creates a weak reference to this object. */
    weakRef(trackResurrection) {
        return new Il2Cpp.GC.Handle(Il2Cpp.Api._gcHandleNewWeakRef(this, +trackResurrection));
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppObject.prototype, "class", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppObject.prototype, "size", null);
Il2Cpp.Object = Il2CppObject;

},{"../../utils/native-struct":368,"decorator-cache-getter":338}],356:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** Represents a `ParameterInfo`. */
class Il2CppParameter {
    /** Name of this parameter. */
    name;
    /** Position of this parameter. */
    position;
    /** Type of this parameter. */
    type;
    constructor(name, position, type) {
        this.name = name;
        this.position = position;
        this.type = type;
    }
    /** */
    toString() {
        return `${this.type.name} ${this.name}`;
    }
}
Il2Cpp.Parameter = Il2CppParameter;

},{}],357:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const native_struct_1 = require("../../utils/native-struct");
/** */
class Il2CppPointer extends native_struct_1.NativeStruct {
    type;
    constructor(handle, type) {
        super(handle);
        this.type = type;
    }
    /** Gets the element at the given index. */
    get(index) {
        return (0, utils_1.read)(this.handle.add(index * this.type.class.arrayElementSize), this.type);
    }
    /** Reads the given amount of elements starting at the given offset. */
    read(length, offset = 0) {
        const values = new Array(length);
        for (let i = 0; i < length; i++) {
            values[i] = this.get(i + offset);
        }
        return values;
    }
    /** Sets the given element at the given index */
    set(index, value) {
        (0, utils_1.write)(this.handle.add(index * this.type.class.arrayElementSize), value, this.type);
    }
    /** */
    toString() {
        return this.handle.toString();
    }
    /** Writes the given elements starting at the given index. */
    write(values, offset = 0) {
        for (let i = 0; i < values.length; i++) {
            this.set(i + offset, values[i]);
        }
    }
}
Il2Cpp.Pointer = Il2CppPointer;

},{"../../utils/native-struct":368,"../utils":365}],358:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const native_struct_1 = require("../../utils/native-struct");
const console_1 = require("../../utils/console");
/** Represent a parameter passed by reference. */
class Il2CppReference extends native_struct_1.NativeStruct {
    type;
    constructor(handle, type) {
        super(handle);
        this.type = type;
    }
    /** Gets the element referenced by the current reference. */
    get value() {
        return (0, utils_1.read)(this.handle, this.type);
    }
    /** Sets the element referenced by the current reference. */
    set value(value) {
        (0, utils_1.write)(this.handle, value, this.type);
    }
    /** */
    toString() {
        return this.isNull() ? "null" : `->${this.value}`;
    }
    /** Creates a reference to the specified value. */
    static to(value, type) {
        const handle = Memory.alloc(Process.pointerSize);
        switch (typeof value) {
            case "boolean":
                return new Il2Cpp.Reference(handle.writeS8(+value), Il2Cpp.Image.corlib.class("System.Boolean").type);
            case "number":
                switch (type?.typeEnum) {
                    case 5 /* U1 */:
                        return new Il2Cpp.Reference(handle.writeU8(value), type);
                    case 4 /* I1 */:
                        return new Il2Cpp.Reference(handle.writeS8(value), type);
                    case 3 /* Char */:
                    case 7 /* U2 */:
                        return new Il2Cpp.Reference(handle.writeU16(value), type);
                    case 6 /* I2 */:
                        return new Il2Cpp.Reference(handle.writeS16(value), type);
                    case 9 /* U4 */:
                        return new Il2Cpp.Reference(handle.writeU32(value), type);
                    case 8 /* I4 */:
                        return new Il2Cpp.Reference(handle.writeS32(value), type);
                    case 11 /* U8 */:
                        return new Il2Cpp.Reference(handle.writeU64(value), type);
                    case 10 /* I8 */:
                        return new Il2Cpp.Reference(handle.writeS64(value), type);
                    case 12 /* R4 */:
                        return new Il2Cpp.Reference(handle.writeFloat(value), type);
                    case 13 /* R8 */:
                        return new Il2Cpp.Reference(handle.writeDouble(value), type);
                }
            case "object":
                if (value instanceof Il2Cpp.ValueType || value instanceof Il2Cpp.Pointer) {
                    return new Il2Cpp.Reference(handle.writePointer(value), value.type);
                }
                else if (value instanceof Il2Cpp.Object) {
                    return new Il2Cpp.Reference(handle.writePointer(value), value.class.type);
                }
                else if (value instanceof Il2Cpp.String || value instanceof Il2Cpp.Array) {
                    return new Il2Cpp.Reference(handle.writePointer(value), value.object.class.type);
                }
                else if (value instanceof NativePointer) {
                    switch (type?.typeEnum) {
                        case 25 /* UnsignedNativeInteger */:
                        case 24 /* NativeInteger */:
                            return new Il2Cpp.Reference(handle.writePointer(value), type);
                    }
                }
                else if (value instanceof Int64) {
                    return new Il2Cpp.Reference(handle.writeS64(value), Il2Cpp.Image.corlib.class("System.Int64").type);
                }
                else if (value instanceof UInt64) {
                    return new Il2Cpp.Reference(handle.writeU64(value), Il2Cpp.Image.corlib.class("System.UInt64").type);
                }
            default:
                (0, console_1.raise)(`don't know how to create a reference to ${value} using type ${type?.name}`);
        }
    }
}
Il2Cpp.Reference = Il2CppReference;

},{"../../utils/console":367,"../../utils/native-struct":368,"../utils":365}],359:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const native_struct_1 = require("../../utils/native-struct");
/** Represents a `Il2CppString`. */
class Il2CppString extends native_struct_1.NativeStruct {
    /** Gets the content of this string. */
    get content() {
        return Il2Cpp.Api._stringChars(this).readUtf16String(this.length);
    }
    /** Sets the content of this string. */
    set content(value) {
        Il2Cpp.Api._stringChars(this).writeUtf16String(value ?? "");
        Il2Cpp.Api._stringSetLength(this, value?.length ?? 0);
    }
    /** Gets the length of this string. */
    get length() {
        return Il2Cpp.Api._stringLength(this);
    }
    /** Gets the encompassing object of the current string. */
    get object() {
        return new Il2Cpp.Object(this);
    }
    /** */
    toString() {
        return this.isNull() ? "null" : `"${this.content}"`;
    }
    /** Creates a new string with the specified content. */
    static from(content) {
        return new Il2Cpp.String(Il2Cpp.Api._stringNew(Memory.allocUtf8String(content || "")));
    }
}
Il2Cpp.String = Il2CppString;

},{"../../utils/native-struct":368}],360:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const console_1 = require("../../utils/console");
const native_struct_1 = require("../../utils/native-struct");
/** Represents a `Il2CppThread`. */
class Il2CppThread extends native_struct_1.NativeStruct {
    /** @internal */
    static get idOffset() {
        const handle = ptr(Il2Cpp.currentThread.internal.field("thread_id").value.toString());
        const currentThreadId = Process.getCurrentThreadId();
        for (let i = 0; i < 1024; i++) {
            const candidate = handle.add(i).readS32();
            if (candidate == currentThreadId) {
                return i;
            }
        }
        (0, console_1.raise)(`couldn't determine the offset for a native thread id value`);
    }
    /** Gets the native id of the current thread. */
    get id() {
        return ptr(this.internal.field("thread_id").value.toString()).add(Il2Cpp.Thread.idOffset).readS32();
    }
    /** @internal Gets the encompassing internal object (System.Threding.InternalThreead) of the current thread. */
    get internal() {
        const internalThread = this.object.tryField("internal_thread")?.value;
        return internalThread ? internalThread : this.object;
    }
    /** Determines whether the current thread is the garbage collector finalizer one. */
    get isFinalizer() {
        return !Il2Cpp.Api._threadIsVm(this);
    }
    /** Gets the encompassing object of the current thread. */
    get object() {
        return new Il2Cpp.Object(this);
    }
    /** @internal */
    get staticData() {
        return this.internal.field("static_data").value;
    }
    /** @internal */
    get synchronizationContext() {
        const get_ExecutionContext = this.object.tryMethod("GetMutableExecutionContext") || this.object.method("get_ExecutionContext");
        let synchronizationContext = get_ExecutionContext.invoke().tryMethod("get_SynchronizationContext")?.invoke();
        if (synchronizationContext == null) {
            const SystemThreadingSynchronizationContext = Il2Cpp.Image.corlib.class("System.Threading.SynchronizationContext");
            for (let i = 0; i < 16; i++) {
                try {
                    const candidate = new Il2Cpp.Object(this.staticData
                        .add(Process.pointerSize * i)
                        .readPointer()
                        .readPointer());
                    if (candidate.class.isSubclassOf(SystemThreadingSynchronizationContext, false)) {
                        synchronizationContext = candidate;
                        break;
                    }
                }
                catch (e) { }
            }
        }
        if (synchronizationContext == null) {
            (0, console_1.raise)("couldn't retrieve the SynchronizationContext for this thread.");
        }
        return synchronizationContext;
    }
    /** Detaches the thread from the application domain. */
    detach() {
        return Il2Cpp.Api._threadDetach(this);
    }
    /** Schedules a callback on the current thread. */
    schedule(block, delayMs = 0) {
        const threadId = this.id;
        const GetDisplayName = Il2Cpp.Image.corlib.class("Mono.Runtime").method("GetDisplayName");
        const SendOrPostCallback = Il2Cpp.Image.corlib.class("System.Threading.SendOrPostCallback").alloc();
        SendOrPostCallback.method(".ctor").invoke(NULL, GetDisplayName.handle);
        const Post = this.synchronizationContext.method("Post");
        return new Promise(resolve => {
            const listener = Interceptor.attach(GetDisplayName.virtualAddress, function () {
                if (this.threadId == threadId) {
                    listener.detach();
                    const result = block();
                    setImmediate(() => resolve(result));
                }
            });
            setTimeout(() => Post.invoke(SendOrPostCallback, NULL), delayMs);
        });
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppThread.prototype, "internal", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppThread.prototype, "object", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppThread.prototype, "staticData", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppThread.prototype, "synchronizationContext", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppThread, "idOffset", null);
Il2Cpp.Thread = Il2CppThread;

}).call(this)}).call(this,require("timers").setImmediate)

},{"../../utils/console":367,"../../utils/native-struct":368,"decorator-cache-getter":338,"timers":372}],361:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

},{}],362:[function(require,module,exports){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const decorator_cache_getter_1 = require("decorator-cache-getter");
const native_struct_1 = require("../../utils/native-struct");
/** Represents a `Il2CppType`. */
class Il2CppType extends native_struct_1.NonNullNativeStruct {
    /** Gets the class of this type. */
    get class() {
        return new Il2Cpp.Class(Il2Cpp.Api._classFromType(this));
    }
    /** */
    get fridaAlias() {
        if (this.isByReference) {
            return "pointer";
        }
        switch (this.typeEnum) {
            case 1 /* Void */:
                return "void";
            case 2 /* Boolean */:
                return "bool";
            case 3 /* Char */:
                return "uchar";
            case 4 /* I1 */:
                return "int8";
            case 5 /* U1 */:
                return "uint8";
            case 6 /* I2 */:
                return "int16";
            case 7 /* U2 */:
                return "uint16";
            case 8 /* I4 */:
                return "int32";
            case 9 /* U4 */:
                return "uint32";
            case 10 /* I8 */:
                return "int64";
            case 11 /* U8 */:
                return "uint64";
            case 12 /* R4 */:
                return "float";
            case 13 /* R8 */:
                return "double";
            case 17 /* ValueType */:
                return getValueTypeFields(this);
            case 24 /* NativeInteger */:
            case 25 /* UnsignedNativeInteger */:
            case 15 /* Pointer */:
            case 14 /* String */:
            case 29 /* SingleDimensionalZeroLowerBoundArray */:
            case 20 /* Array */:
                return "pointer";
            case 18 /* Class */:
            case 28 /* Object */:
            case 21 /* GenericInstance */:
                return this.class.isValueType ? getValueTypeFields(this) : "pointer";
            default:
                return "pointer";
        }
    }
    /** Determines whether this type is passed by reference. */
    get isByReference() {
        return !!Il2Cpp.Api._typeIsByReference(this);
    }
    /** Determines whether this type is primitive. */
    get isPrimitive() {
        return !!Il2Cpp.Api._typeIsPrimitive(this);
    }
    /** Gets the name of this type. */
    get name() {
        const handle = Il2Cpp.Api._typeGetName(this);
        try {
            return handle.readUtf8String();
        }
        finally {
            Il2Cpp.free(handle);
        }
    }
    /** Gets the encompassing object of the current type. */
    get object() {
        return new Il2Cpp.Object(Il2Cpp.Api._typeGetObject(this));
    }
    /** Gets the type enum of the current type. */
    get typeEnum() {
        return Il2Cpp.Api._typeGetTypeEnum(this);
    }
    /** */
    toString() {
        return this.name;
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "class", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "fridaAlias", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "isByReference", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "isPrimitive", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "name", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "object", null);
__decorate([
    decorator_cache_getter_1.cache
], Il2CppType.prototype, "typeEnum", null);
function getValueTypeFields(type) {
    const instanceFields = type.class.fields.filter(f => !f.isStatic);
    return instanceFields.length == 0 ? ["char"] : instanceFields.map(f => f.type.fridaAlias);
}
Reflect.set(Il2Cpp, "Type", Il2CppType);

},{"../../utils/native-struct":368,"decorator-cache-getter":338}],363:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const native_struct_1 = require("../../utils/native-struct");
/** Value type class utility. */
class Il2CppValueType extends native_struct_1.NativeStruct {
    type;
    constructor(handle, type) {
        super(handle);
        this.type = type;
    }
    /** Boxes the current value type in a object. */
    box() {
        return new Il2Cpp.Object(Il2Cpp.Api._valueBox(this.type.class, this));
    }
    /** Gets the field with the given name. */
    field(name) {
        return this.type.class.field(name).withHolder(this);
    }
    /** */
    toString() {
        return this.isNull() ? "null" : this.box().toString();
    }
}
Il2Cpp.ValueType = Il2CppValueType;

},{"../../utils/native-struct":368}],364:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const console_1 = require("../utils/console");
const utils_1 = require("./utils");
/** Tracing utilities. */
class Il2CppTracer {
    /** @internal */
    targets = [];
    /** @internal */
    #assemblies;
    /** @internal */
    #classes;
    /** @internal */
    #methods;
    /** @internal */
    #assemblyFilter;
    /** @internal */
    #classFilter;
    /** @internal */
    #methodFilter;
    /** @internal */
    #parameterFilter;
    domain() {
        return this;
    }
    assemblies(...assemblies) {
        this.#assemblies = assemblies;
        return this;
    }
    classes(...classes) {
        this.#classes = classes;
        return this;
    }
    methods(...methods) {
        this.#methods = methods;
        return this;
    }
    filterAssemblies(filter) {
        this.#assemblyFilter = filter;
        return this;
    }
    filterClasses(filter) {
        this.#classFilter = filter;
        return this;
    }
    filterMethods(filter) {
        this.#methodFilter = filter;
        return this;
    }
    filterParameters(filter) {
        this.#parameterFilter = filter;
        return this;
    }
    and() {
        const filterMethod = (method) => {
            if (this.#parameterFilter == undefined) {
                this.targets.push(method);
                return;
            }
            for (const parameter of method.parameters) {
                if (this.#parameterFilter(parameter)) {
                    this.targets.push(method);
                    break;
                }
            }
        };
        const filterMethods = (values) => {
            for (const method of values) {
                filterMethod(method);
            }
        };
        const filterClass = (klass) => {
            if (this.#methodFilter == undefined) {
                filterMethods(klass.methods);
                return;
            }
            for (const method of klass.methods) {
                if (this.#methodFilter(method)) {
                    filterMethod(method);
                }
            }
        };
        const filterClasses = (values) => {
            for (const klass of values) {
                filterClass(klass);
            }
        };
        const filterAssembly = (assembly) => {
            if (this.#classFilter == undefined) {
                filterClasses(assembly.image.classes);
                return;
            }
            for (const klass of assembly.image.classes) {
                if (this.#classFilter(klass)) {
                    filterClass(klass);
                }
            }
        };
        const filterAssemblies = (assemblies) => {
            for (const assembly of assemblies) {
                filterAssembly(assembly);
            }
        };
        const filterDomain = (domain) => {
            if (this.#assemblyFilter == undefined) {
                filterAssemblies(domain.assemblies);
                return;
            }
            for (const assembly of domain.assemblies) {
                if (this.#assemblyFilter(assembly)) {
                    filterAssembly(assembly);
                }
            }
        };
        this.#methods
            ? filterMethods(this.#methods)
            : this.#classes
                ? filterClasses(this.#classes)
                : this.#assemblies
                    ? filterAssemblies(this.#assemblies)
                    : filterDomain(Il2Cpp.Domain);
        this.#assemblies = undefined;
        this.#classes = undefined;
        this.#methods = undefined;
        this.#assemblyFilter = undefined;
        this.#classFilter = undefined;
        this.#methodFilter = undefined;
        this.#parameterFilter = undefined;
        return this;
    }
    attach(mode = "full") {
        let count = 0;
        for (const target of this.targets) {
            if (target.virtualAddress.isNull()) {
                continue;
            }
            const offset = `\x1b[2m0x${target.relativeVirtualAddress.toString(16).padStart(8, `0`)}\x1b[0m`;
            const fullName = `${target.class.type.name}.\x1b[1m${target.name}\x1b[0m`;
            if (mode == "detailed") {
                const startIndex = +!target.isStatic | +Il2Cpp.unityVersionIsBelow201830;
                const callback = (...args) => {
                    const thisParameter = target.isStatic ? undefined : new Il2Cpp.Parameter("this", -1, target.class.type);
                    const parameters = thisParameter ? [thisParameter].concat(target.parameters) : target.parameters;
                    (0, console_1.inform)(`\
${offset} ${`│ `.repeat(count++)}┌─\x1b[35m${fullName}\x1b[0m(\
${parameters.map(e => `\x1b[32m${e.name}\x1b[0m = \x1b[31m${(0, utils_1.fromFridaValue)(args[e.position + startIndex], e.type)}\x1b[0m`).join(`, `)});`);
                    const returnValue = target.nativeFunction(...args);
                    (0, console_1.inform)(`\
${offset} ${`│ `.repeat(--count)}└─\x1b[33m${fullName}\x1b[0m\
${returnValue == undefined ? `` : ` = \x1b[36m${(0, utils_1.fromFridaValue)(returnValue, target.returnType)}`}\x1b[0m;`);
                    return returnValue;
                };
                try {
                    target.revert();
                    const nativeCallback = new NativeCallback(callback, target.returnType.fridaAlias, target.fridaSignature);
                    Interceptor.replace(target.virtualAddress, nativeCallback);
                }
                catch (e) { }
            }
            else {
                try {
                    Interceptor.attach(target.virtualAddress, {
                        onEnter: () => (0, console_1.inform)(`${offset} ${`│ `.repeat(count++)}┌─\x1b[35m${fullName}\x1b[0m`),
                        onLeave: () => (0, console_1.inform)(`${offset} ${`│ `.repeat(--count)}└─\x1b[33m${fullName}\x1b[0m${count == 0 ? `\n` : ``}`)
                    });
                }
                catch (e) { }
            }
        }
    }
}
Il2Cpp.Tracer = Il2CppTracer;

},{"../utils/console":367,"./utils":365}],365:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toFridaValue = exports.fromFridaValue = exports.write = exports.read = void 0;
const console_1 = require("../utils/console");
const native_struct_1 = require("../utils/native-struct");
/** @internal */
function read(pointer, type) {
    switch (type.typeEnum) {
        case 2 /* Boolean */:
            return !!pointer.readS8();
        case 4 /* I1 */:
            return pointer.readS8();
        case 5 /* U1 */:
            return pointer.readU8();
        case 6 /* I2 */:
            return pointer.readS16();
        case 7 /* U2 */:
            return pointer.readU16();
        case 8 /* I4 */:
            return pointer.readS32();
        case 9 /* U4 */:
            return pointer.readU32();
        case 3 /* Char */:
            return pointer.readU16();
        case 10 /* I8 */:
            return pointer.readS64();
        case 11 /* U8 */:
            return pointer.readU64();
        case 12 /* R4 */:
            return pointer.readFloat();
        case 13 /* R8 */:
            return pointer.readDouble();
        case 24 /* NativeInteger */:
        case 25 /* UnsignedNativeInteger */:
            return pointer.readPointer();
        case 15 /* Pointer */:
            return new Il2Cpp.Pointer(pointer.readPointer(), type.class.baseType);
        case 17 /* ValueType */:
            return new Il2Cpp.ValueType(pointer, type);
        case 28 /* Object */:
        case 18 /* Class */:
            return new Il2Cpp.Object(pointer.readPointer());
        case 21 /* GenericInstance */:
            return type.class.isValueType ? new Il2Cpp.ValueType(pointer, type) : new Il2Cpp.Object(pointer.readPointer());
        case 14 /* String */:
            return new Il2Cpp.String(pointer.readPointer());
        case 29 /* SingleDimensionalZeroLowerBoundArray */:
        case 20 /* Array */:
            return new Il2Cpp.Array(pointer.readPointer());
    }
    (0, console_1.raise)(`read: "${type.name}" (${type.typeEnum}) has not been handled yet. Please file an issue!`);
}
exports.read = read;
/** @internal */
function write(pointer, value, type) {
    switch (type.typeEnum) {
        case 2 /* Boolean */:
            return pointer.writeS8(+value);
        case 4 /* I1 */:
            return pointer.writeS8(value);
        case 5 /* U1 */:
            return pointer.writeU8(value);
        case 6 /* I2 */:
            return pointer.writeS16(value);
        case 7 /* U2 */:
            return pointer.writeU16(value);
        case 8 /* I4 */:
            return pointer.writeS32(value);
        case 9 /* U4 */:
            return pointer.writeU32(value);
        case 3 /* Char */:
            return pointer.writeU16(value);
        case 10 /* I8 */:
            return pointer.writeS64(value);
        case 11 /* U8 */:
            return pointer.writeU64(value);
        case 12 /* R4 */:
            return pointer.writeFloat(value);
        case 13 /* R8 */:
            return pointer.writeDouble(value);
        case 24 /* NativeInteger */:
        case 25 /* UnsignedNativeInteger */:
        case 15 /* Pointer */:
        case 17 /* ValueType */:
        case 14 /* String */:
        case 28 /* Object */:
        case 18 /* Class */:
        case 29 /* SingleDimensionalZeroLowerBoundArray */:
        case 20 /* Array */:
        case 21 /* GenericInstance */:
            if (value instanceof Il2Cpp.ValueType) {
                Memory.copy(pointer, value.handle, type.class.valueSize);
                return pointer;
            }
            return pointer.writePointer(value);
    }
    (0, console_1.raise)(`write: "${type.name}" (${type.typeEnum}) has not been handled yet. Please file an issue!`);
}
exports.write = write;
/** @internal */
function fromFridaValue(value, type) {
    if (Array.isArray(value)) {
        return arrayToValueType(type, value);
    }
    else if (value instanceof NativePointer) {
        if (type.isByReference) {
            return new Il2Cpp.Reference(value, type);
        }
        switch (type.typeEnum) {
            case 15 /* Pointer */:
                return new Il2Cpp.Pointer(value, type.class.baseType);
            case 14 /* String */:
                return new Il2Cpp.String(value);
            case 18 /* Class */:
            case 21 /* GenericInstance */:
            case 28 /* Object */:
                return new Il2Cpp.Object(value);
            case 29 /* SingleDimensionalZeroLowerBoundArray */:
            case 20 /* Array */:
                return new Il2Cpp.Array(value);
            default:
                return value;
        }
    }
    else if (type.typeEnum == 2 /* Boolean */) {
        return !!value;
    }
    else {
        return value;
    }
}
exports.fromFridaValue = fromFridaValue;
/** @internal */
function toFridaValue(value) {
    if (typeof value == "boolean") {
        return +value;
    }
    else if (value instanceof Il2Cpp.ValueType) {
        return valueTypeToArray(value);
    }
    else {
        return value;
    }
}
exports.toFridaValue = toFridaValue;
function valueTypeToArray(value) {
    const instanceFields = value.type.class.fields.filter(f => !f.isStatic);
    return instanceFields.length == 0
        ? [value.handle.readU8()]
        : instanceFields
            .map(field => field.withHolder(value).value)
            .map(value => value instanceof Il2Cpp.ValueType
            ? valueTypeToArray(value)
            : value instanceof native_struct_1.NativeStruct
                ? value.handle
                : typeof value == "boolean"
                    ? +value
                    : value);
}
function arrayToValueType(type, nativeValues) {
    function iter(type, startOffset = 0) {
        const arr = [];
        for (const field of type.class.fields) {
            if (!field.isStatic) {
                const offset = startOffset + field.offset - Il2Cpp.Runtime.objectHeaderSize;
                if (field.type.typeEnum == 17 /* ValueType */ ||
                    (field.type.typeEnum == 21 /* GenericInstance */ && field.type.class.isValueType)) {
                    arr.push(...iter(field.type, offset));
                }
                else {
                    arr.push([field.type.typeEnum, offset]);
                }
            }
        }
        if (arr.length == 0) {
            arr.push([5 /* U1 */, 0]);
        }
        return arr;
    }
    const valueType = Memory.alloc(type.class.valueSize);
    nativeValues = nativeValues.flat(Infinity);
    const typesAndOffsets = iter(type);
    for (let i = 0; i < nativeValues.length; i++) {
        const value = nativeValues[i];
        const [typeEnum, offset] = typesAndOffsets[i];
        const pointer = valueType.add(offset);
        switch (typeEnum) {
            case 2 /* Boolean */:
                pointer.writeS8(value);
                break;
            case 4 /* I1 */:
                pointer.writeS8(value);
                break;
            case 5 /* U1 */:
                pointer.writeU8(value);
                break;
            case 6 /* I2 */:
                pointer.writeS16(value);
                break;
            case 7 /* U2 */:
                pointer.writeU16(value);
                break;
            case 8 /* I4 */:
                pointer.writeS32(value);
                break;
            case 9 /* U4 */:
                pointer.writeU32(value);
                break;
            case 3 /* Char */:
                pointer.writeU16(value);
                break;
            case 10 /* I8 */:
                pointer.writeS64(value);
                break;
            case 11 /* U8 */:
                pointer.writeU64(value);
                break;
            case 12 /* R4 */:
                pointer.writeFloat(value);
                break;
            case 13 /* R8 */:
                pointer.writeDouble(value);
                break;
            case 24 /* NativeInteger */:
            case 25 /* UnsignedNativeInteger */:
            case 15 /* Pointer */:
            case 29 /* SingleDimensionalZeroLowerBoundArray */:
            case 20 /* Array */:
            case 14 /* String */:
            case 28 /* Object */:
            case 18 /* Class */:
            case 21 /* GenericInstance */:
                pointer.writePointer(value);
                break;
            default:
                (0, console_1.warn)(`arrayToValueType: defaulting ${typeEnum} to pointer`);
                pointer.writePointer(value);
                break;
        }
    }
    return new Il2Cpp.ValueType(valueType, type);
}

},{"../utils/console":367,"../utils/native-struct":368}],366:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./il2cpp");

},{"./il2cpp":343}],367:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inform = exports.ok = exports.warn = exports.raise = void 0;
/** @internal */
function raise(message) {
    throw `\x1B[0m\x1B[38;5;9mil2cpp\x1B[0m: ${message}`;
}
exports.raise = raise;
/** @internal */
function warn(message) {
    globalThis.console.log(`\x1B[38;5;11mil2cpp\x1B[0m: ${message}`);
}
exports.warn = warn;
/** @internal */
function ok(message) {
    globalThis.console.log(`\x1B[38;5;10mil2cpp\x1B[0m: ${message}`);
}
exports.ok = ok;
/** @internal */
function inform(message) {
    globalThis.console.log(`\x1B[38;5;12mil2cpp\x1B[0m: ${message}`);
}
exports.inform = inform;

},{}],368:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NonNullNativeStruct = exports.NativeStruct = void 0;
/** Scaffold class. */
class NativeStruct {
    handle;
    constructor(handleOrWrapper) {
        if (handleOrWrapper instanceof NativePointer) {
            this.handle = handleOrWrapper;
        }
        else {
            this.handle = handleOrWrapper.handle;
        }
    }
    equals(other) {
        return this.handle.equals(other.handle);
    }
    isNull() {
        return this.handle.isNull();
    }
}
exports.NativeStruct = NativeStruct;
/** Scaffold class whom pointer cannot be null. */
class NonNullNativeStruct extends NativeStruct {
    constructor(handle) {
        super(handle);
        if (handle.isNull()) {
            throw new Error(`Handle for "${this.constructor.name}" cannot be NULL.`);
        }
    }
}
exports.NonNullNativeStruct = NonNullNativeStruct;

},{}],369:[function(require,module,exports){
(function (setImmediate){(function (){
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.forModule = void 0;
const decorator_cache_getter_1 = require("decorator-cache-getter");
const versioning_1 = __importDefault(require("versioning"));
class Target {
    stringEncoding;
    address;
    constructor(responsible, name, stringEncoding) {
        this.stringEncoding = stringEncoding;
        this.address = Module.findExportByName(responsible, name) ?? NULL;
    }
    static get targets() {
        function info() {
            switch (Process.platform) {
                case "linux":
                    try {
                        if (versioning_1.default.gte(Java.androidVersion, "12")) {
                            return [null, ["__loader_dlopen", "utf8"]];
                        }
                        else {
                            return ["libdl.so", ["dlopen", "utf8"], ["android_dlopen_ext", "utf8"]];
                        }
                    }
                    catch (e) {
                        return [null, ["dlopen", "utf8"]];
                    }
                case "darwin":
                    return ["libdyld.dylib", ["dlopen", "utf8"]];
                case "windows":
                    const ll = "LoadLibrary";
                    return ["kernel32.dll", [`${ll}W`, "utf16"], [`${ll}ExW`, "utf16"], [`${ll}A`, "ansi"], [`${ll}ExA`, "ansi"]];
            }
        }
        const [responsible, ...targets] = info();
        return targets.map(([name, encoding]) => new Target(responsible, name, encoding)).filter(target => !target.address.isNull());
    }
    readString(pointer) {
        switch (this.stringEncoding) {
            case "utf8":
                return pointer.readUtf8String();
            case "utf16":
                return pointer.readUtf16String();
            case "ansi":
                return pointer.readAnsiString();
        }
    }
}
__decorate([
    decorator_cache_getter_1.cache
], Target, "targets", null);
/** @internal */
function forModule(...moduleNames) {
    return new Promise(resolve => {
        for (const moduleName of moduleNames) {
            const module = Process.findModuleByName(moduleName);
            if (module != null) {
                resolve(moduleName);
                return;
            }
        }
        const interceptors = Target.targets.map(target => Interceptor.attach(target.address, {
            onEnter(args) {
                this.modulePath = target.readString(args[0]) ?? "";
            },
            onLeave(returnValue) {
                if (returnValue.isNull())
                    return;
                for (const moduleName of moduleNames) {
                    if (!this.modulePath.endsWith(moduleName))
                        continue;
                    setImmediate(() => interceptors.forEach(i => i.detach()));
                    resolve(moduleName);
                }
            }
        }));
    });
}
exports.forModule = forModule;

}).call(this)}).call(this,require("timers").setImmediate)

},{"decorator-cache-getter":338,"timers":372,"versioning":373}],370:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.levenshtein = exports.cacheInstances = exports.nativeIterator = void 0;
const fastest_levenshtein_1 = require("fastest-levenshtein");
const console_1 = require("./console");
/** @internal */
function* nativeIterator(holder, nativeFunction, Class) {
    const iterator = Memory.alloc(Process.pointerSize);
    let handle;
    while (!(handle = nativeFunction(holder, iterator)).isNull()) {
        yield new Class(handle);
    }
}
exports.nativeIterator = nativeIterator;
/** @internal */
function cacheInstances(Class) {
    const instanceCache = new Map();
    return new Proxy(Class, {
        construct(Target, argArray) {
            const handle = argArray[0].toUInt32();
            if (!instanceCache.has(handle)) {
                instanceCache.set(handle, new Target(argArray[0]));
            }
            return instanceCache.get(handle);
        }
    });
}
exports.cacheInstances = cacheInstances;
/** @internal */
function levenshtein(candidatesKey, nameGetter = e => e.name) {
    return function (_, propertyKey, descriptor) {
        const original = descriptor.value;
        descriptor.value = function (key, ...args) {
            const result = original.call(this, key, ...args);
            if (result != null)
                return result;
            const closestMatch = (0, fastest_levenshtein_1.closest)(key, this[candidatesKey].map(nameGetter));
            (0, console_1.raise)(`couldn't find ${propertyKey} ${key} in ${this.name}${closestMatch ? `, did you mean ${closestMatch}?` : ``}`);
        };
    };
}
exports.levenshtein = levenshtein;

},{"./console":367,"fastest-levenshtein":339}],371:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],372:[function(require,module,exports){
(function (setImmediate,clearImmediate){(function (){
var nextTick = require('process/browser.js').nextTick;
var apply = Function.prototype.apply;
var slice = Array.prototype.slice;
var immediateIds = {};
var nextImmediateId = 0;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) { timeout.close(); };

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
  var id = nextImmediateId++;
  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

  immediateIds[id] = true;

  nextTick(function onNextTick() {
    if (immediateIds[id]) {
      // fn.call() is faster so we optimize for the common use-case
      // @see http://jsperf.com/call-apply-segu
      if (args) {
        fn.apply(null, args);
      } else {
        fn.call(null);
      }
      // Prevent ids from leaking
      exports.clearImmediate(id);
    }
  });

  return id;
};

exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
  delete immediateIds[id];
};
}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)

},{"process/browser.js":371,"timers":372}],373:[function(require,module,exports){
/**
 * Semantic Version Number
 * @author 闲耘 <hotoo.cn@gmail.com>
 *
 * @usage
 *    var version = new Versioning("1.2.3")
 *    version > 1
 *    version.eq(1)
 */


// Semantic Versioning Delimiter.
var delimiter = ".";

var Version = function(version){
  this._version = String(version);
};

function compare(v1, v2, complete){
  v1 = String(v1);
  v2 = String(v2);
  if(v1 === v2){return 0;}
  var v1s = v1.split(delimiter);
  var v2s = v2.split(delimiter);
  var len = Math[complete ? "max" : "min"](v1s.length, v2s.length);
  for(var i=0; i<len; i++){
    v1s[i] = "undefined"===typeof v1s[i] ? 0 : parseInt(v1s[i], 10);
    v2s[i] = "undefined"===typeof v2s[i] ? 0 : parseInt(v2s[i], 10);
    if(v1s[i] > v2s[i]){return 1;}
    if(v1s[i] < v2s[i]){return -1;}
  }
  return 0;
}

Version.compare = function(v1, v2){
  return compare(v1, v2, true);
};

/**
 * @param {String} v1.
 * @param {String} v2.
 * @return {Boolean} true if v1 equals v2.
 *
 *    Version.eq("6.1", "6"); // true.
 *    Version.eq("6.1.2", "6.1"); // true.
 */
Version.eq = function(v1, v2, strict){
  return compare(v1, v2, strict) === 0;
};

/**
 * @param {String} v1.
 * @param {String} v2.
 * @return {Boolean} return true
 */
Version.gt = function(v1, v2){
  return compare(v1, v2, true) > 0;
};

Version.gte = function(v1, v2){
  return compare(v1, v2, true) >= 0;
};

Version.lt = function(v1, v2){
  return compare(v1, v2, true) < 0;
};

Version.lte = function(v1, v2){
  return compare(v1, v2, true) <= 0;
};

Version.prototype = {
  // new Version("6.1").eq(6); // true.
  // new Version("6.1.2").eq("6.1"); // true.
  eq: function(version){
    return Version.eq(this._version, version);
  },

  gt: function(version){
    return Version.gt(this._version, version);
  },

  gte: function(version){
    return Version.gte(this._version, version);
  },

  lt: function(version){
    return Version.lt(this._version, version);
  },

  lte: function(version){
    return Version.lte(this._version, version);
  },

  valueOf: function(){
    return parseFloat(
      this._version.split(delimiter).slice(0, 2).join(delimiter),
      10);
  },

  /**
   * XXX: ""+ver 调用的转型方法是 valueOf，而不是 toString，这个有点悲剧。
   * 只能使用 String(ver) 或 ver.toString() 方法。
   * @param {Number} precision, 返回的版本号精度。默认返回完整版本号。
   * @return {String}
   */
  toString: function(precision){
    return "undefined" === typeof precision ? this._version :
      this._version.split(delimiter).slice(0, precision).join(delimiter);
  }
};


module.exports = Version;

},{}]},{},[312])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
